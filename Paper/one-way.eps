%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: one-way.pdf
%%Creator: Adobe Acrobat 10.1.1
%%For: wangchj
%%CreationDate: 10/23/2011, 1:50:35 PM
%%BoundingBox: 0 0 438 272
%%HiResBoundingBox: 0 0 438 272
%%CropBox: 0 0 438 272
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 16840 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2011-10-23T13:15:16-05:00"
   xmp:CreatorTool="Microsoft® Visio® 2010"
   xmp:ModifyDate="2011-10-23T13:30:33-05:00"
   xmp:MetadataDate="2011-10-23T13:30:33-05:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2010"
   dc:format="application/pdf"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:HasVisibleOverprint="False"
   xmpMM:RenditionClass="proof:pdf"
   xmpMM:DocumentID="uuid:93f61264-72c0-4048-8f22-e489546ae203"
   xmpMM:InstanceID="uuid:9964424b-ac36-4905-918c-09c3197e9e3c">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="160"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkPn3UdQ03yVrl/prenf21lPJayUU&#xA;8ZFjJVqNt8J3xV4cvlb/AJyW4tz80pz/AGaXG30/ucVp6D+S8n5gwXOu6R511EaleWgtJ7aRWDhU&#xA;uBMCOXCM9YulMVenYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYqx38xv+UC8w/9s+4/5NnFXYGTA9X8833lHzdqVxb6Dd61FffoizmktNxbmaS4SNpF&#xA;USSkMzUHBDvt1IqUF6xZXtnfWkV5ZzJcWs684poyGVge4IxQrYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqx/XvOmnaNetazW9xcC3tjf6ncQ+l6VlZhmX15/VkjYqfTeixK7n&#xA;g3w+KqTH86vy+Nz9Viu7qa5FwlpJCthfK0czzxW7I/OFArRyXCB1J5CvSuKoiw/NvyTqOp6Vpun3&#xA;NxcXWsPwswbW4gWn1X63yZrhIRQQsjECrDmhpRq4qlmn/nz+X95ey2nrXMMtvBcXNyGhMjRrBqCa&#xA;aimOAzSM888qmFUU8lO9DtiqcR/mr5Fltbm7g1CSe2tIJrqeWG0u5VEFtcfVpZRwhbkiy1FVrsrM&#xA;PhViFULefnP+Wtle3lldauYriwEzXQNrd8FW2Zo5XEgi4MiyIY+Skgv8AqxAxVB+bvzu8s+XdR0f&#xA;SorHUdY1fX4km0uwsIF9Vll3T1VneFottyHAIHXocVTv8wpXH5ca/NcqIXGmXDzIDzCH0SWAag5U&#xA;8aYqw5Pzo/LKQMU1tHCDk5WG4IUeJpHtjTK0y/LLzLofmLzV5m1HRboXlmLfTYTMquo5obolaOFO&#xA;3IYoLKoUGleYjCnw2Otc5ETfgl7GOUgXw9eKrkbDkjN9pzihPMVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVSTX/Jnl3XpfV1O3kkcwPayGK4uLf1beX7cMwgkiEsZ/lkqBvTqc&#xA;VSuL8pfIEVSmmv6huGvGma7u2la4eWCdpWlaUuztLZQsxJ3K79Wqqr2P5ZeSLDVLDVLXTjHe6Yqr&#xA;YP69wyRcLZLMFY2kMfI28SIzcasFWtSBiqXy/kl+V8y3ay6Gj/X09O7Yz3JaRa27ULery+1ZQnY9&#xA;Vr1ZqqoTX/y2/KiKzk0/U7CWddRSWEaet1fzTTLLNDPIIokmL/3ltDyZacVRVJCCmKpBpf5Cadfe&#xA;Z77zHrcYshPcyT6bZ2ctzHc28UzSPJHJN9ZnSNpHmdpPq5A5fEhQ1qq9N0Typ5b0OwsbHStOgtbb&#xA;TE9OxCoC0YKBGIkbk5ZlUBmJq3cnFUVq2lWOraZdaXfx+tZXsTwXMXJl5RuOLDkpDCoPY4q87h/5&#xA;xx/LGCOaKC3vIo7heE6JeTqsig14uA3xCvY4qynyP+XHlTyTBdQ+X7Z4FvWR7lpJHlZjGCE+2TSn&#xA;I9MVR3mheNjbXa7SWV5azLJSpRDMsU5Hzt5JF+nFU4xV2KuxV2KuxV2KuxVIW8+eT11YaSdVh+uF&#xA;xD1PoiYmggM9PREx7Rc+f+TgtU+wqg9W1nR9Hs2vdXvrfTrJSFa5u5UgiDMaKC8hVantviqIkura&#xA;O2a6klRLZU9Rp2YBAgFeRY7UpvXFWrm6tbWL1bmZIIuSR+pIwRecjiNFqxAq7sFUdyaYqhl13Q3u&#xA;xZrqNs12Z2tBbiaMyG4ji9d4eFeXqLCfUKdQvxdMVR2KuxV2KuxVSnu7W3ANxMkIbZTIwWvyqRir&#xA;cFzb3Cc4JUmT+aNgw+8YqqYq7FXYq7FUJfatpthA093cpFGjrEamrGRwCsaqKsztUcUAqewxVLhc&#xA;eYNWP+io2jaef+PqZVa9cV/3XAwaOEEdGl5N2MY64qjtM0TTtN9RraMm4mp9Yu5WMs8vGtPUlcl2&#xA;pU8QTRegoMVR2KuxV2KuxV2KpT5tp/hfVh1Y2kwjHUmQoQlPflSnviqWfmbqC6f5MvLySa5gt4pr&#xA;Q3T2UiwTm3N3EJ0WdpLdYA8RZWlMqcFJbktKhVT/ACynhu/Lz6jZz3kuk31w8umQ6hcNe3EMSKsL&#xA;obpprv1keaKSRHEzrxYcW40AVZbirsVdiqSa75u07SbhLBY5tQ1iVBLBpVmoedkLFRI5YpHFHVSO&#xA;crquxAJO2AlUgudM8y6+D/iC6+p6e/8A0pNNkdUYV2FzdgRzS+6oI07MHG+VykejIBHDy/pS6d+j&#xA;RZQDTeHpfUvTT0PTP7Hp04cfamV0ztj9tqUvlnWtM07Sr6S50m8uo7SXTLms8cAlIVWtZ2b1Iwv+&#xA;+yXSmyhMMM1y4UGG1pp+amr+XtIs9K1bVPMVn5eudLu3vNPlvY2uUlY2s1rIgto5IJpSIrpiPTao&#xA;NOoqDkNbyHy9+Vv5d+YvL7arB5v05k1G3FvaSzWUVu0aw2dxp7SGCW4MgeZ5FuJTVS7rXbl8KrJp&#xA;fyt8mNqlhfRebNKga0v49Sm9KGBXd47+5vfTRxcDhG4uxG4Ibl6UbV+GmKqet/lT5V1TzXqPmEee&#xA;7a2kvvrxS3jaLhE+o2dxYyyb3G7iKWEA0H91/l/Cq3pn5ZaBp6fu/OujPLxn/ePaWzjlPpjad/dS&#xA;XLw8ByVvT4cAiiNQoaQuqwDy35a8uec/zAsdC0jzND6vluIRT6lNZ28VzdTWdtZ2QgtlN200kIFp&#xA;JMjLGvov8SsxIIVfRfkry+nkryjp/l97hb17Zplg+rQegGEkzyqiRF5SAiuFLvISacnapJxVOnbV&#xA;pk4pHHaq5H7wyc5UXv8AAEKcqdPiIHv0xVWtbG0tqmGMCRhR5T8Ujf6ztVm+k4qtudPtbhvUZeFw&#xA;PsXMfwyr8mHb2Ox7jFVJNKic871zeSdxJ/dD/Vi+wPman3xVc2kaf1ihFvJ2lg/dMPpSlfkdsVU0&#xA;vzaFodRcjhTheFCsboehdgOCNXYivuOtAqiryO5ltJo7SYW9y6MsNwyeoEcj4XKVXlQ70rirCPy7&#xA;/KOx8napqusy6xe67rGsOJby71D0Wo/Rmi4xh4+Q2YB6UCinwjFWe4q7FXYq7FUq81622heWdV1p&#xA;YfrDadazXQgrx5mJC/GtDStMVeCL/wA5N+fipP8Ag5RTsRc1P/CYq9L/ACd/NDVfPUGqfpTSRpN1&#xA;prwgRgv8aThyDxcKRT0zirLfMjeqNP01RWS+vIajYgRWzC5lLL/Iyw+n83GKpV+a1qbryJqMAszf&#xA;l2tx9VWAXRYfWI6n0TY6xyC/aP8Aoj0pX4ftBVBfktAbfyFb262aWUMN1erDCgkQ/wC9UhkLxSWe&#xA;lmFvVLj01t0UClABsFWdYq7FXYq8p8769faN+ZbTWlv9Za40/S7d4xNHDJSS51D7Am4xyHbdWddt&#xA;xuKZRl+oNkOTK9J836JqMlxbQXME17ZuY7y1ikUzROppSWInmg8DuD1G2G65oprVrt5YSFPFD1Uf&#xA;xynJKwziGDXf/KQ6F/207X/k4Mpwf3gZ5Ppev3tjZX1s9te28d1bSbSQTIsiMPdWBBzZOMp6XpWm&#xA;aTYxafpdpDY2EHL0LS3RYokDMWIRFAVRyYmgGKorFXYq7FUv0vy9oOkvPJpenW1jJdO0t1JbwpE0&#xA;ruxZmkZQCxLEmpxVUhCnVrkt/erFEI/aNi9afNhv8h7Yq1rcuqQ6Lfy6TClxqsdtM+n28p4xyXCx&#xA;kxI7bUVnoCcVeRSecvzas7W4k0OC/wBchEKS/WNc0aWCdbqKxvrq5tYre3TTmMbSW1rFHIeY5ykB&#xA;pDsFWR/lx51/MrzJeX0et+Wf0NY287RNcXaz2M6Aq3FbaJ1u470Kyis3qRKa7JtQqsT0DzV+fkd/&#xA;dnWdPneysdOnu4uNkjtc3Gl2stnNDxjEXI318Y7uFEZSyCiHgcVT3yN+Y35jat5h0PRtf0SCwkv7&#xA;ObUL11guYCkNpNc2kvGO5ZJUMkv1OWPmlfTkYEVowVerEAih3B6jFUt0m4ji0czSkQwwmZipP91E&#xA;sjFVYfslEoCO3TFWJ+X/AM8vy78weZLzQNJvZbi5sYTNcXHoSpCOLrGUBcK5ardlp74qyn/FOg/8&#xA;tX/CSf8ANOKu/wAU6D/y1f8ACSf804q7/FOg/wDLV/wkn/NOKu/xToP/AC1f8JJ/zTiqX/mBLHN+&#xA;XmvSxnlHJps7o24qGiJB3xVfgZMD1b8zfLXkTzhqcmtGYtqi6Ta20cCcz8UlwryOxKqqRh6mpr4V&#xA;woL0fSrG8lvpNZ1JPSu5Y/RtbLkG+qwEhmUspKmWRgrSlTx2VQWC8mUJL+b1lZXn5earb316NOtW&#xA;9BpL02MuqLHwuI3Bayi3mXkoqrAp/OCtRiqXfkVdaVN5Cih0nWYNd060uJoob6202fSEqzeq6/V5&#xA;mZdnkY/ugsYB4qo44q9CxV2KuxV5d51tNOu/POrW+pQpcWL6Jp5uIZF5KVW6v26exFR75jZieINk&#xA;ORa0DRbLTIBe6fqN1d2FzBGLWG7YTGOL7cYjmkX6xwox+CR2+jIzlsmG+6YyXYdCpPXKTJspjd5/&#xA;ykOhf9tS0/5ODBg/vAs/pejec/PGheT9LOp6z9ZFsK0Nta3FzuN6MYUdUr2LlRmycZJ9H/OTyPqX&#xA;lrT/ADFJNc6dp2qP6Vm17bTR85ObIqK6LJEzMUNArk4qyL/E2nf75vv+4fff9UcVS63/ADK8mXNy&#xA;ltb37zXMjBI4I7a5Z2ZhKQFURkkkWsx/55v/ACtRVMf8Tad/vm+/7h99/wBUcVVbbXbG5nSGOK7V&#xA;32BlsruJOld3kiVB9JxVdY8Prt9y/wB6fUWtevpcB6fH/I6+3Ll3riqOxV4brn/OQPmPy9cyfpbQ&#xA;o3sTrGrWtldwCYxy2GmG6hJkZfWaKaKa3jaU8GBiYsi1BAVUNP8A+cnbqWO4vbjy4r6cXX6qbW5k&#xA;ecRLbxXU00kT26N6H1ZbuaGWil/RZCitU4qm15+f2qQPbW8flmJtQuzp8UenSaiUuUk1FLV0lmjF&#xA;q/C0U3oi9cVrKpTj+1iqeflJ5lPmG+8yT6jbQrr2mX9zp095UevNZxX119VogjjAgRQYkcE83R+Q&#xA;BXdV6OSFBJNANyT0AxVA6a6TSXVzEP3E8gMTdn4oqGQexK0HiBUbHFUQLGyF4b0W8YvGT0jchF9U&#xA;x1B4c6cuNQNq4q8087flj5n1zzXHqmnXkFmn1yzuG1Nbi4t9Rjs4ojBdabC0CVWGYO0/ISj95sV6&#xA;OqqEs/y0/NCe31nT9a8x29zpmpaPHpyRs93cyLcrYpB6ytK6pEyXKGYShGd+R5ivEqqx8fkz+Zel&#xA;aHcC011Pr1zcW0mo3dldX1vdLZxl7y8jtPQ9JZJZb29vPTWYEcWU1VvsKvXvIlh5gsfKWnQ+Yrlr&#xA;rXpEa41SR2D8bm5kaeWJCCw9OFpDHGF2CqANsVU/zG/5QLzD/wBs+4/5NnFXYGTEk8k+WPNXnTWY&#xA;9esI70afHpF3ZMxKvFNG90wKuhVgG4jkK0PfCgs10i5ubPUpdCvJGmKRfWdMupCS8tsGCOjsftSQ&#xA;Oyhm7qyE1blihJvzhS2k/L3Uori0F/HK9rGLIyQxCVnuolROc8N0gqxH+6mP8tDQhVDfkiNNk/Ly&#xA;xvdNmuZrK9eaSH6zfSaiFWOQwAQTSpCyxH0uSoY0K1IKqajFWeYq7FXYq8t85Xr2v5jXbRhXcaRp&#xA;zNGSAfTFzfhm+QJFT2zGz8w24+TZ1qK7tJSlVdOJZG6gMdj9P35jTOzZEJZea3Z2UBuLudIIQQvN&#xA;zxHJjRVFepJ2AG5ykEk0GZ2R3l/yz5i13VtO1Se1bS9HsriO7VrxWS7uGiPJAlvs0KE9TLRv8jvm&#xA;bhwEHiLTPJYoPVsy2lgnm7QNE85pBZaVrtnbzS2ep2ckUYju/UsrkraX5ijWWPjLFKqp6vxBHqrK&#xA;eRGKsLtPyZ8uaZr3l69sPOMGmtp0AszbW8Vsr3V9byLbT3cZlkkVbkzvFFJ8DH/db8g/HFW9R/Jf&#xA;y7pGt3N7e+cILbU9fmvhpseqw2kqyXN4V4cbaZkhuGhNxdHgsYB9fooWjKso/J38t28jW+o2VxeC&#xA;6unFvBbjl8QsrZX4yNHU+n9YvJbq448mp6lKkg4q9GxVDX1hFdxEH4JwrCG4WoeNmHVWFCPv3xVq&#xA;z1COYiGWkN4o/eWzH4hTqVr9pPBhiqsbi3EwgMqCdgSsRYcyB1IXriqpirqioFdzuB3oMVcSAKnY&#xA;DqcVS1Rb6pdCQos1hArKhcBo5ZGIPJQdiEC0De+3TFUyxVj/AOYHlufzN5N1Ty/A6xtqcQt3d2Kg&#xA;Ru6+puqua8K0264q8kj/ACW/Nz9C31nN5lt3u9Yl1C51WVLi5jikmv7KzgAaNYgJkjNtNEof7KSB&#xA;x8a0xVzfkv8AmvEt1daXrVrp2oXLz/EdR1G5kEUqWEaqb1o47gsv1BmBao+yhBSoxVP/ADf+WHnW&#xA;+8y6zrWgvptteXzxvbanJdXtrdtGLW3tWtJmskilWFGie4XhPu/EEBS9VV/kPyD+auh+Y9NudV1a&#xA;1udMT61LrTrfalPLdTXRlkHp2swWzhSOR0pwQMaE8hXjir0TzXof6f8ALOqaJ631f9JWstr6/Hnw&#xA;9VCnLjUVpXxxV4Nbf84iywwXETeYLWY3CBFlksHLxUYNyjpcqATSm4O2FXpH5N/lE35c22qRNqY1&#xA;JtSeFuSw+gEEIcDbnJWvqYFZd5iHovpmoL/eWt7DGQNi0d431RlP+SDMslPFRirHPzrksW/LzVbS&#xA;4SO5eRYZhZve2en844buDm5mv1ktgkZdeQkRlaoQ/aGKpn+WT2Enkqxl09ZUspZLqS3E99HqcpR7&#xA;qVgz3cMlwkhatdpX4/Z5EiuKsoxV2KoXVNW0rSbGS/1W8g0+xi4iW7upUhiUuwReUkhVRyZgBU9c&#xA;VSnzJ5e8ueZbWz+tTenOTz0jUrWVUuEZkLk28nxBg0a1ZSGRlHxKRglEHmkGmBah5W13TtRt9CXX&#xA;tEa61Q/6O92WtL11Q1Z0skLi6YAb8HiHyzGlpgeuzYMtMo8oeTfKGmanKRex635osAou7meSOSe2&#xA;9VdhHboeNqrr04qGYfaZsvhjjEbMJSJ5stk1LToruOzluoUu5iFht2kUSOxR5AFQnkSUhkbbsrHs&#xA;cmxRGKvE0/5xrVLnULn/ABEZHvovRFvNaGS2VDfWuoujQm4+NJLi1lMi8hyWWlfh3Vbtv+cbRBdS&#xA;zL5hVC5Y/W4bER30ha/gvudxc+u3rSJ9X4I3Aca1oemKp1b/AJLXkHlrQ9DGuxsum29/Z38/1EJ6&#xA;9vqVzFcyi3jjnRbV19AKjDkF7KNqKpFa/wDOOWpQWmoKPM9r9f1AQp9eTRLaM20cE/1gJZxJKsdu&#xA;GkZmPAV5cWBDAllXt2KuxVTnt7edOE8SSp14uoYV+RxVRbS7AwmJIVhXlzBhHpsHH7SlKEHFWvq+&#xA;pKOK3isv88kQMn3o0af8Jiq0aRZsS9yDdTGn76ajMKdOFAoSn+SB9+Krv0VYmnqI0wHRZneVR/sZ&#xA;GYYqi8VdirsVdirsVdirsVdirsVdiqU+bB/zrOqSftQW0k8Z8HhUyof+CQYqxT87fK6ax5PlurdL&#xA;1dZsXh+oXml/WDeQq93A0rxx2x5ycfSWSnFqFQwXkBiqO/J/S9V0z8vtOtNWgurfUhJdvdxahKLi&#xA;6Ekl3K5M06llmZuXL1BQP9ritaBVmeKuxVJfN+gXWuaQlnZ3cdldw3dne29xNCbiMSWV1HcqrxLJ&#xA;AzKxi4mkg64q8sj/AOcbp4ZA8HmC1YwQ2tvYfWNGtZhHHa2VzZ1lQusc7v8AWg5aRf2FXcBeKq9d&#xA;F0CLQzpa+c7Wygi0y28uapdavZSQpdt5dedna2e4ntkkiDSSLdKjSqUBHJTViqkcP5UeSYZ3eP8A&#xA;MXTojeXNpqKxRi1CCLTYrq3kSFWuWKxofV9NlP7kxbElKhVObX/nH+xvbPSryx1rTJ7WKPTZYp4N&#xA;MEkF8liLgpJclbsi4W7S7BmPL95Stfi2VZb+XH5RWfkiW1mt7761cR211bX8/oCJ7tp7mOeGSYh3&#xA;5NbqjRrWuzGlOhVegYq7FXYq7FUDJqwW4mhS1mlMLBHdPSC1KK+3J1PRx2xVr9LP/wAsNx98H/VX&#xA;FXfpZ/8AlhuPvg/6q4q79LP/AMsNx98H/VXFXfpZ/wDlhuPvg/6q4q79LP8A8sNx98H/AFVxV36W&#xA;f/lhuPvg/wCquKu/Sz/8sNx98H/VXFXfpZ/+WG4++D/qriqvZXq3SyERvE0T+m6Sca14q/7LMOjD&#xA;viqIxV2KuxV2KoTV9VstI0q81S+cx2djC9xcOAWIjjUsxAG52GKvLB/zlJ+WBBIGoEDqRbCn/E8V&#xA;Zp5B/Mvyv56tbu40J5iLJ1S4jnj9NlMgJQ9WBB4nviqZ+aCH06KyHxPf3VvbCMdXjaVWnA+VukjH&#xA;2GKpvirsVdirsVdirsVeaa5+QflTW9TutSv9R1L6zeNctcCB7a3jYXSorK0cNuiPwMMbK7guSq8m&#xA;biKKrtf/ACC8j63rN9q881/Bdaibj60sE6rGyXMUaPHwZH+BZYvXUdpWZulAFXo8MSQwpEmyRqEU&#xA;eyig6YquxV2KuxV2KuxVKI/97tQ/4zr/AMmIsVde28txaTQQ3MlnLIpVLqERmSMn9tBMksdR/lIR&#xA;7Yq8Zbzj+dWj+U47sWU2r6iNM026kjvNKmkna/vfWa5gpYG14R2626px9BnVpVLtxxVNk8+/mjHq&#xA;Cpc6Ios5tRhjjZNNvi0dk97fWsnJvVMfMRWsE5mcxoscleLHgrKsdh/N784rryv+lrDy9HeTy2sV&#xA;zpnpaTqRivmmhgklRKTH6utsZZKSSMVueP7qlcVZZceYPzJs7PzC18GmnsL7QzZ/o/S7g87KdrX9&#xA;JNCCbozgA3C8F5SR8SSfiSiqTap+a/5kQalqBtNAH6Ie8trDRJb2wvrOV3v0njt3k9d41dVuUg5h&#xA;KERv8XB9gqmfkDz3+aHmDzc9hrXl5tE0W3S7knnubC4iZ3iaKOK3hnNw8Tf3pf1uNJApCotOWKvU&#xA;sVb0n+8vv+Ygf8mIsVTDFXYq7FXYqxv8yUV/y/8AMSMKq2nXIYeIMTDFWIj8ofy0AoPL1oAeo4t/&#xA;XFlTflBfJXkfzHr8Ia10PTrldKihV3ESPcztcoqryO7NT8K4oLM9NkOt6omrqCNJs1ZNLLCgnkkF&#xA;JLpQd+AT93E21QXO6spKhPsVdirsVdirsVdirsVdirsVdirsVdirsVdiqVPZ6ot5dyRRwPFPIrxl&#xA;pXVqCJENQImHVD3xV3oax/vi3/5Hv/1RxV3oax/vi3/5Hv8A9UcVcbfV2BBt7Yg7EGd6Ef8AInFV&#xA;O10+/tLaG1tbO0t7W3RYoIIpWSOONBxVEVYQFVQKADFVT0NY/wB8W/8AyPf/AKo4qhrvRrm8mtZ7&#xA;qxtJpbGQz2jPM59OUo0fNf3P2uLkVxVE+hrH++Lf/ke//VHFXehrH++Lf/ke/wD1RxVEaXbXUIuW&#xA;uVRXml9RVjYuAojRNyypvVD2xVG4q7FXYq7FWO/mN/ygXmH/ALZ9x/ybOKuwMmJxeSfKnmjzxrI1&#xA;/TIr5tPg0uexlfkskMnO5asciFXWpRa0O9N8KC9OxQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;qkTWVnNqOoPNBHI/rKOTorGnoRdyMVX/AKM03/lkh/5Fp/TFWDaZ+ZfkjUfNtt5Yt9LlF9dG4VZW&#xA;itRGptZ7u3fkolM3Hnp0nxrGVHJAxVnAxVnP6M03/lkh/wCRaf0xVuytbaDV4vQiSLlbzcuCha0e&#xA;KlaYqxvXPNHlnyzptgb3SnvZG0+XUbr6rFbs0NlZLF9aupfVeKqR+ulVTlI1fhVqHMAWerJRb8zf&#xA;ynS5mtnnRZreUxShtPuQBwlkgeUMYOLQJLbyI84PpqR8TDHhkqVap+df5TWF21sqJf8A+9X1e4sY&#xA;7a4gnFpZpdsYZVk4tzL+hGK1MwKe+EQkqcS/mT+VEF1qNpcXMEN3pMkkGo272kvOKWKCS5ZNojzJ&#xA;igkZOFQ/E8ORwcMlZjpcUUUl9HEixxrOOKKAoFYYzsBmTgPpQUflyHYq7FXYqkXnzTtR1LyVrmn6&#xA;anqahd2M8NohKrWV4yqCrfD1PfFXgFuP+cpfRufrKXonCD6oI7fSShfkK+oSAQvGv2a74rb0j8jd&#xA;L/MqF9d1Lz7EyX94bWK1ZxbqzR24lJ+C3AUAGXqdzir1TFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FUha/sYdS1GOa5ijcTpVHdVO9vF2JxVf+ldL/wCWyD/kYn9cVSnRdJ8maLdXd1phgt577/ep&#xA;/rBfn/pE910d2A/fXkzbfzU6AAKpt+ldL/5bIP8AkYn9cVbsby0n1iIQTxylbeYkIysQOcPgcVSa&#xA;+0PyT5i0vTRrDxzm3tvSUJdyQcop0T1oJfRkj9WGX019SKSqNQVBpmusjkzSvVvyp/JvV7qG61HT&#xA;7W4uLeQzQyNdzAq7XM9432ZhUNPdyuVOxrSlFUAicgtJtq/lP8uNY1f9L6lb2dzqX+if6Q01D/oE&#xA;xuLfZXC/DIxJ2+IfC1V2wCRCpDrH5YeQLu8jms2tbdbnVoNX1hpLiSdpWtZZ7hUhSSVo4g891JzC&#xA;qFKu+1SKSEyh6BpU8M0l88Miyp9YA5IQwqIIu4zJwfSgo/LkOxV2KvGvMnm7857P8wtTstL0i4u/&#xA;LNveQTWEwthxmhWwRJrT1PTNFe8nD+qTtwccuIpirG7/APMf/nIGfStZa00m5jvfrIGnJDol3E6W&#xA;0bRKLiJrkTRss9G5W7q0qcieQC7Ks1l83/mNeaFrzXOnXujSafrNrZ2t3Z2DzXb6cb5Y7ieGF0vV&#xA;uP8ARf3nNIqDkRw+DkVWLv8AmP8A85Cy6Rd2yeVXg1COzihW6NjJ6i3jWxuJZ0IllglXhBKqgR0W&#xA;eSONgafvFU8vPzI/NeHVprOHy6zwLHqrLOdL1Foo2tFn+pK80bt6pm9KF/3UVHEhRSGT4lXq+m3E&#xA;1zp1rcTxtFPNDHJLE6emyOygsrJyk4kE0I5GnicVROKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpXJ&#xA;eag93cxwvCkcDqih42djWNHqSJE/n8MVb9fVv9/Qf8iX/wCquKu9fVv9/Qf8iX/6q4q719W/39B/&#xA;yJf/AKq4qo2upXd3EZrW8tLiIO8ZkijZ15xOY5FqsxHJHUqw7EEYqrevq3+/oP8AkS//AFVxV3r6&#xA;t/v6D/kS/wD1VxV3r6t/v6D/AJEv/wBVcVd6+rf7+g/5Ev8A9VcVV9NubicTrPwLwS+nyRSoIMaP&#xA;0Jb+fxxVGYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUoj/3u1D/AIzr&#xA;/wAmIsVVsVWToZIJEHV1KivSpFMVeLwflR+Zp0u3thqVtpVxZ6RY6VFJp2o3yGV9MsNQhgmkkigt&#xA;XCm7vIJTF8S0Rq8uhVTXT/y489WWiatZtdWd7NLr9vrulRyXVzHCkcWqnUJLVgIZFi5AcvUSMks5&#xA;DCiKSqkF55Q/OK2hsdKPmSWHWda1O6ZpLa5vL23tdPMMFxK/qTJC0YS4tBFGpJKrMVVjVsVZX+V3&#xA;kX8w9F1K41Dzjrn6Rrax29lZW19f3FvE/rSvM7LdmsjMrR0dyzDdRRQuKvSsVdirek/3l9/zED/k&#xA;xFiqYYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUvk0jlczzpeTxeuwd&#xA;o1EJUEIqbco2PRPHFXfoiT/lvuPug/6pYq79ESf8t9x90H/VLFXfoiT/AJb7j7oP+qWKu/REn/Lf&#xA;cfdB/wBUsVd+iJP+W+4+6D/qlirv0RJ/y33H3Qf9UsVd+iJP+W+4+6D/AKpYq79ESf8ALfcfdB/1&#xA;SxVXsbEWiyj1XmaZ/UZ5OFa8FSg4KgpRPDFUTirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Chih Wang</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <xmpTPg:MaxPageSize
    stDim:w="438.000000"
    stDim:h="272.000000"
    stDim:unit="Points"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="CALIBRI"
      stFnt:fontFamily="CALIBRI"
      stFnt:fontType="Unknown"
      stFnt:versionString="Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895"
      stFnt:composite="False"
      stFnt:fontFileName="MyriadPro-Regular.otf"/>
     <rdf:li
      stFnt:fontName="CALIBRI,Bold"
      stFnt:fontFamily="CALIBRI,Bold"
      stFnt:fontType="Unknown"
      stFnt:versionString="Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895"
      stFnt:composite="False"
      stFnt:fontFileName="MyriadPro-Regular.otf"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 1 
/Lookup <~
z^TFEr~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 45 
/Lookup <~
!WiK)!s8`-"9Su2"9]&3"U,86"pGG9#6te?#RD"B#RM(C$4.CH$k+!R%Lj?W&.Tc^&J-&b&eZ>f'+uVl
'bi%r()AD#(`"b)(`+k+)&P(.)]:F3)]L^9*#pm;*$%!=+!!EC+<NiK+sB8Q,9]JU,U>k[-72:a-RVXh
.On9q.kFX"/hC-*/hU<-0/$N00J?`40f!/;1,EA>1,NJ@2)StG2E,FP3&tjV3]_<^4$7Wc~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 63 
/Lookup <~
!!!$"!W`B'!WiK)!s/]-"9]#2"U,86"pPP;#6te?#RM(C#mq@H$4.FI$k+!R%1X?X%M'Q[&J-&b&J6/d
&eZDh'+uYm'GDkp'br5!(De_)(`+k+(`>(/)]CO5)B:X8*#q!>*?I<C+<NiK+X'2Q+sKDT,:#bZ,pc4b
-RV^j.4S9s.P"L!.kOm(/h^K10/6f60f!5=0f*A@1c8qH1cB(K2)f=O2`YgW3'23^3]qNb4$@ih4?e)l
4?n5o5!a`"5=0u'5t-P06:Zq76Um%96q<=>6qNRD77rjI7SK6P85>]X8Pu2b8l;Jh92_\k9iS1t:0+V(
~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -272 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 272 li
438 272 li
438 0 li
cp
clp
gsave
0 272 mo
438 272 li
438 0 li
0 0 li
0 272 li
clp
370.51 6.08978 mo
367.59 6.08978 367.59 8.90984 367.75 8.74986 cv
367.75 49.9998 li
367.59 49.7898 li
367.59 52.6098 370.51 52.6098 370.75 52.2498 cv
389.5 52.2498 li
389.45 52.6098 li
389.45 52.6098 392.37 52.6098 392.5 49.9998 cv
392.5 8.74986 li
392.37 8.90984 li
392.37 8.90984 392.37 6.08978 389.5 5.74987 cv
370.75 5.74987 li
370.51 6.08978 li
false sop
/3 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /3 /CSD get_res sepcs
.498 sep
ef
371.05 6.68024 mo
368.3 6.68024 368.3 9.43023 368.5 9.50019 cv
368.5 49.2503 li
368.3 49.2802 li
368.3 52.0202 371.05 52.0202 370.75 52.2503 cv
388.75 52.2503 li
388.91 52.0202 li
388.91 52.0202 391.66 52.0202 391.75 49.2503 cv
391.75 9.50019 li
391.66 9.43023 li
391.66 9.43023 391.66 6.68024 388.75 6.5002 cv
370.75 6.5002 li
371.05 6.68024 li
.772549 .690639 .638117 .874083 cmyk
ef
389.509 31.2527 mo
384.205 26.2999 378.62 20.3918 374.013 13.9908 cv
389.509 13.9908 li
389.509 31.2527 li
.726864 .653651 .625391 .672786 cmyk
f
gsave
365.41 46.48 mo
391.241 46.48 li
391.241 11.028 li
365.41 11.028 li
365.41 46.48 li
clp
367.75 13.4479 mo
365.41 12.5118 li
365.41 12.5088 li
367.75 12.5088 li
367.75 13.4479 li
0 0 0 .5935 cmyk
f
367.75 13.448 mo
367.75 13.4479 li
367.75 12.5088 li
367.75 12.5088 li
367.75 13.448 li
0 0 0 .869841 cmyk
f
390.991 32.619 mo
390.745 32.3948 390.498 32.1688 390.25 31.9402 cv
390.25 13.2498 li
390.36 13.3899 li
390.5 13.5298 li
390.25 13.2498 li
373.485 13.2498 li
373.312 13.0037 373.14 12.7564 372.97 12.5088 cv
389.509 12.5088 li
389.509 11.3072 li
390.582 12.5088 li
390.61 12.5088 li
390.818 12.7736 li
391.053 13.0364 li
390.827 13.2498 li
390.991 13.2498 li
390.991 32.619 li
.755184 .678523 .652827 .896788 cmyk
f
390.25 31.9402 mo
390.004 31.7135 389.756 31.4836 389.509 31.2527 cv
389.509 13.9908 li
374.013 13.9908 li
373.835 13.7449 373.659 13.4972 373.485 13.2498 cv
390.25 13.2498 li
390.25 31.9402 li
390.5 13.5298 mo
390.36 13.3899 li
390.25 13.2498 li
390.5 13.5298 li
.753017 .681971 .650111 .895415 cmyk
f
grestore
382.75 11 mo
377.5 11 li
377.481 10.75 li
377.34 10.6099 li
377.5 10.2499 li
377.5 9.49986 li
382.75 9.49986 li
382.481 9.63988 li
382.62 9.7799 li
382.75 9.49986 li
382.75 10.2499 li
382.45 9.97979 li
382.31 9.84986 li
382 9.49986 li
377.5 9.49986 li
377.651 9.84986 li
377.51 9.97979 li
377.5 10.2499 li
377.51 10.5098 li
377.651 10.6499 li
377.5 10.9999 li
382 10.9999 li
382.31 10.6499 li
382.45 10.5098 li
382.75 10.2499 li
382.62 10.6099 li
382.481 10.75 li
382.75 11 li
377.34 9.7799 mo
377.5 9.49986 li
377.481 9.63988 li
377.34 9.7799 li
.755184 .678523 .652827 .896788 cmyk
f
382 10.9999 mo
377.5 10.9999 li
377.651 10.6499 li
377.51 10.5098 li
377.5 10.2499 li
377.51 9.97979 li
377.651 9.84986 li
377.5 9.49986 li
382 9.49986 li
382.31 9.84986 li
382.45 9.97979 li
382.75 10.2499 li
382.45 10.5098 li
382.31 10.6499 li
382 10.9999 li
.658503 .585779 .561517 .366857 cmyk
f
gsave
369.25 6.49998 mo
369.15 6.34998 li
369.031 6.40996 368.92 6.47004 368.5 6.49998 cv
368.82 6.53002 li
368.72 6.59998 368.62 6.67004 368.5 6.49998 cv
368.54 6.74998 li
368.45 6.82004 368.37 6.89998 368.5 7.24997 cv
368.3 6.99098 li
368.23 7.07004 368.17 7.14997 367.75 7.24997 cv
368.11 7.24 li
368.05 7.33002 368 7.42004 367.75 7.24997 cv
367.951 7.49997 li
367.861 7.68002 367.79 7.85995 367.75 7.99997 cv
367.74 8.02004 li
367.69 8.18999 367.66 8.33999 367.75 8.74997 cv
367.75 50 li
367.62 50.29 li
367.639 50.451 367.68 50.59 367.75 50.75 cv
367.719 50.73 li
367.76 50.86 367.799 50.98 367.75 50.75 cv
367.861 51.1 li
367.91 51.22 367.98 51.33 367.75 51.5 cv
368.05 51.43 li
368.11 51.52 368.19 51.61 368.5 51.5 cv
368.26 51.7 li
368.339 51.78 368.429 51.86 368.5 52.25 cv
368.509 51.93 li
368.599 51.991 368.69 52.06 368.5 52.25 cv
368.78 52.11 li
368.87 52.17 368.96 52.22 369.25 52.25 cv
369.049 52.26 li
369.23 52.351 369.41 52.42 369.25 52.25 cv
369.581 52.47 li
369.75 52.52 369.91 52.549 370 52.25 cv
370.049 52.57 li
370.32 52.61 370.51 52.61 370.75 52.25 cv
389.5 52.25 li
389.45 52.61 li
389.45 52.61 389.64 52.61 390.25 52.25 cv
390.379 52.47 li
390.55 52.42 390.73 52.351 391 52.25 cv
390.91 52.26 li
391 52.25 li
391.18 52.11 li
391.27 52.06 391.361 51.991 391.75 52.25 cv
391.451 51.93 li
391.531 51.86 391.62 51.78 391.75 51.5 cv
391.691 51.7 li
391.769 51.61 391.849 51.52 391.75 51.5 cv
391.91 51.43 li
391.981 51.33 392.04 51.22 391.75 50.75 cv
392.099 51.1 li
392.16 50.98 392.2 50.86 392.5 50.75 cv
392.24 50.73 li
392.28 50.59 392.32 50.451 392.5 50 cv
392.34 50.29 li
392.36 50.14 392.37 49.97 392.5 50 cv
392.5 33.5 li
392.37 33.86 li
384.31 26.69 375 16.98 369.25 6.49998 cv
369.269 6.30996 li
369.23 6.33002 369.191 6.34 369.25 6.49998 cv
367.75 8.74997 mo
367.639 8.47004 li
367.59 8.73999 367.59 8.92003 367.75 8.74997 cv
367.75 50 mo
367.59 49.79 li
367.59 49.97 367.6 50.14 367.75 50 cv
389.91 52.57 mo
390.05 52.549 390.21 52.52 390.25 52.25 cv
389.91 52.57 li
clp
gsave
366.84 53.36 mo
393.118 53.36 li
393.118 5.55798 li
366.84 5.55798 li
366.84 53.36 li
eclp
gsave
366.84 53.36 mo
393.119 53.36 li
393.119 5.557 li
366.84 5.557 li
366.84 53.36 li
clp
389.45 52.61 mo
389.45 52.6098 li
389.451 52.6098 389.452 52.6098 389.455 52.6098 cv
389.452 52.61 389.45 52.61 389.45 52.61 cv
370.239 52.5875 mo
370.179 52.5875 370.117 52.58 370.049 52.57 cv
370.025 52.4131 li
370.052 52.414 370.079 52.4144 370.105 52.4144 cv
370.438 52.4144 370.687 52.3446 370.75 52.2498 cv
370.75 52.2498 li
370.75 52.2499 370.75 52.25 370.75 52.25 cv
370.75 52.25 li
370.75 52.2501 370.75 52.2501 370.75 52.2501 cv
370.75 52.2502 370.75 52.2502 370.75 52.2503 cv
370.75 52.2503 li
370.57 52.5201 370.418 52.5875 370.239 52.5875 cv
369.748 52.5017 mo
369.695 52.5017 369.639 52.487 369.581 52.47 cv
369.32 52.2966 li
369.531 52.3598 369.738 52.3947 369.928 52.408 cv
369.876 52.4785 369.815 52.5017 369.748 52.5017 cv
369.291 52.3541 mo
369.249 52.3541 369.149 52.3104 369.049 52.26 cv
369.187 52.2531 li
369.218 52.2642 369.249 52.2746 369.28 52.2844 cv
369.322 52.3345 369.319 52.3541 369.291 52.3541 cv
391.75 52.25 mo
391.548 52.1153 391.426 52.0693 391.343 52.0633 cv
391.391 52.0329 391.439 52.0007 391.486 51.9669 cv
391.75 52.25 li
389.5 52.25 mo
388.75 52.25 li
388.75 52.2498 li
389.5 52.2498 li
389.5 52.25 li
368.5 52.25 mo
368.69 52.06 368.599 51.991 368.509 51.93 cv
368.5 52.25 li
368.429 51.86 368.339 51.78 368.26 51.7 cv
368.277 51.6855 li
368.534 51.945 368.837 52.1221 369.142 52.2367 cv
368.936 52.2062 368.858 52.1618 368.78 52.11 cv
368.5 52.25 li
368.123 51.5113 mo
368.091 51.4888 368.07 51.4594 368.05 51.43 cv
367.75 51.5 li
367.98 51.33 367.91 51.22 367.861 51.1 cv
367.856 51.0856 li
367.933 51.2442 368.023 51.3857 368.123 51.5113 cv
367.76 50.8556 mo
367.758 50.8495 367.755 50.8424 367.753 50.8345 cv
367.755 50.8415 367.758 50.8486 367.76 50.8556 cv
392.347 50.8183 mo
392.356 50.7927 392.364 50.7666 392.373 50.7402 cv
392.5 50.75 li
392.439 50.7724 392.389 50.7952 392.347 50.8183 cv
367.659 50.4949 mo
367.641 50.4284 367.628 50.3614 367.62 50.29 cv
367.622 50.2845 li
367.632 50.3569 367.645 50.4269 367.659 50.4949 cv
392.5 50.0007 mo
392.5 50.0005 392.5 50.0007 392.5 50.0005 cv
392.5 50 li
392.5 50 392.5 50 392.5 50 cv
392.5 49.9998 392.5 49.9998 392.5 49.9998 cv
392.5 33.5006 li
392.5 33.5 li
392.5 50 li
392.5 50 li
392.5 50.0003 392.5 50.0005 392.5 50.0007 cv
367.75 49.9998 mo
367.59 49.7901 li
367.59 49.7901 367.59 49.79 367.59 49.79 cv
367.75 49.9998 li
367.75 49.9998 li
367.653 8.81627 mo
367.594 8.81627 367.603 8.66711 367.639 8.47004 cv
367.696 8.6142 li
367.701 8.70414 367.717 8.75641 367.737 8.75642 cv
367.741 8.75642 367.745 8.75427 367.75 8.74986 cv
367.75 8.74986 li
367.707 8.79594 367.675 8.81627 367.653 8.81627 cv
367.699 8.44755 mo
367.679 8.24966 367.705 8.1398 367.74 8.02004 cv
367.75 7.99997 li
367.79 7.85995 367.861 7.68002 367.951 7.49997 cv
367.75 7.24997 li
367.853 7.31999 367.922 7.34592 367.972 7.34592 cv
368.043 7.34592 368.075 7.29296 368.11 7.24 cv
367.75 7.24997 li
368.094 7.16807 368.197 7.09961 368.261 7.03408 cv
367.862 7.52941 367.724 8.10314 367.699 8.44755 cv
368.539 6.74303 mo
368.5 6.49998 li
368.555 6.5782 368.606 6.60562 368.655 6.60562 cv
368.694 6.60561 368.731 6.58797 368.768 6.56474 cv
368.686 6.62095 368.61 6.68056 368.539 6.74303 cv
368.808 6.53867 mo
368.812 6.5358 368.816 6.53291 368.82 6.53002 cv
368.5 6.49998 li
368.92 6.47004 369.031 6.40996 369.15 6.34998 cv
369.151 6.35163 li
369.027 6.40725 368.912 6.47011 368.808 6.53867 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[27.662 0 0 -47.803 366.84 266.443 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 35 
/M[20 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMtSn.Fa^h>m$W_>s6@r"6dGn.F7Pli?Me_>sQIo-O/3b5hMRo-MKYq>gL,o-M6RrXn`Jl2]K;
rXo/VofBqirXo/Vs#Tm8_>sQIs!@>!g]6L;rXo/VofBqirXo/VofE$O`W5uMs!@Y*peK*7o`4t's!@Y*
peJ[+rXo/Vr]9gLmf:i;rXo/Vr]9gL_>sTJ!YH_)r]9gL_>sQIs!@Y*s%`E#i;hj;rXo/Vr]:'SqI@AB
rXo/Vr]:'SqdTV9_>sQIs!@Y*s%`E#dfAk;rXo/Vr]:'SqI@ABrXo/Vr]:'SraYnOoDm2;rXo/Vr]:'S
raYnO`;ol;rXo/Vr]:'SraYnO_>sQIs!@Y*s%`Q'rHRH)h#REds!@Y*s%`Q's*4R'_>sQIs!@Y*!_uL#
s'u(Rs,DO~>

%%EndBinary
grestore
np
389.45 52.6098 mo
389.5 52.25 li
389.5 52.2498 li
388.75 52.2498 li
388.91 52.0202 li
388.91 52.0202 391.66 52.0202 391.75 49.2503 cv
391.75 33.3054 li
391.957 33.4921 392.164 33.6766 392.37 33.86 cv
392.5 33.5006 li
392.5 49.9998 li
392.5 49.9998 li
392.49 49.9977 392.48 49.9966 392.472 49.9966 cv
392.368 49.9966 392.358 50.1517 392.34 50.29 cv
392.5 50.0005 li
392.5 50.0007 392.5 50.0005 392.5 50.0007 cv
392.32 50.4512 392.28 50.59 392.24 50.73 cv
392.373 50.7402 li
392.364 50.7666 392.356 50.7927 392.347 50.8183 cv
392.183 50.9088 392.148 51.0044 392.099 51.1 cv
391.75 50.75 li
392.04 51.22 391.981 51.33 391.91 51.43 cv
391.75 51.5 li
391.849 51.52 391.769 51.61 391.691 51.7 cv
391.75 51.5 li
391.62 51.78 391.531 51.86 391.451 51.93 cv
391.486 51.9669 li
391.439 52.0007 391.391 52.0329 391.343 52.0633 cv
391.336 52.0628 391.33 52.0625 391.324 52.0625 cv
391.259 52.0625 391.219 52.0881 391.18 52.11 cv
391 52.25 li
390.73 52.351 390.55 52.42 390.379 52.47 cv
390.25 52.25 li
389.694 52.5779 389.487 52.6071 389.455 52.6098 cv
389.452 52.6098 389.451 52.6098 389.45 52.6098 cv
370.105 52.4144 mo
370.079 52.4144 370.052 52.414 370.025 52.4131 cv
370 52.25 li
369.979 52.3188 369.955 52.3702 369.928 52.408 cv
369.738 52.3947 369.531 52.3598 369.32 52.2966 cv
369.25 52.25 li
369.262 52.2628 369.272 52.2742 369.28 52.2844 cv
369.249 52.2746 369.218 52.2642 369.187 52.2531 cv
369.25 52.25 li
369.211 52.246 369.175 52.2415 369.142 52.2367 cv
368.837 52.1221 368.534 51.945 368.277 51.6855 cv
368.5 51.5 li
368.398 51.5362 368.321 51.5508 368.261 51.5508 cv
368.199 51.5508 368.155 51.5349 368.123 51.5113 cv
368.023 51.3857 367.933 51.2442 367.856 51.0856 cv
367.75 50.75 li
367.77 50.8444 367.775 50.8798 367.772 50.8798 cv
367.77 50.8798 367.766 50.8707 367.76 50.8556 cv
367.758 50.8486 367.755 50.8415 367.753 50.8345 cv
367.743 50.8065 367.731 50.7687 367.719 50.73 cv
367.75 50.75 li
367.711 50.6609 367.681 50.5784 367.659 50.4949 cv
367.645 50.4269 367.632 50.3569 367.622 50.2845 cv
367.75 50 li
367.711 50.0361 367.682 50.0516 367.66 50.0516 cv
367.596 50.0516 367.59 49.9237 367.59 49.7901 cv
367.75 49.9998 li
367.75 50 li
367.75 13.448 li
368.5 13.7479 li
368.5 49.2503 li
368.3 49.2802 li
368.3 52.0185 371.046 52.0202 370.75 52.2498 cv
370.75 52.2498 li
370.687 52.3446 370.438 52.4144 370.105 52.4144 cv
368.5 12.5088 mo
367.75 12.5088 li
367.75 8.74997 li
367.75 8.75005 367.75 8.75012 367.75 8.7502 cv
367.75 8.74986 li
367.745 8.75427 367.741 8.75642 367.737 8.75642 cv
367.717 8.75641 367.701 8.70414 367.696 8.6142 cv
367.75 8.74997 li
367.723 8.62888 367.707 8.53049 367.699 8.44755 cv
367.724 8.10314 367.862 7.52941 368.261 7.03408 cv
368.275 7.01961 368.287 7.00529 368.3 6.99098 cv
368.5 7.24997 li
368.37 6.89998 368.45 6.82004 368.54 6.74998 cv
368.539 6.74303 li
368.61 6.68056 368.686 6.62095 368.768 6.56474 cv
368.782 6.55657 368.795 6.5477 368.808 6.53867 cv
368.912 6.47011 369.027 6.40725 369.151 6.35163 cv
369.25 6.49998 li
369.191 6.34 369.23 6.33002 369.269 6.30996 cv
369.25 6.49998 li
369.351 6.6842 369.453 6.86773 369.556 7.05146 cv
368.31 7.80471 368.346 9.44634 368.5 9.50019 cv
368.5 12.5088 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[27.662 0 0 -47.803 366.84 266.443 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 35 
/M[20 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;o:ldK&n>m?bclm?dDEdfAd%`;fn)m[(lmrg3,LjT+6>rg3,L`;on(oqVG[`;on(n>"S8mf<?Rn>!r&
rg3VZo<%cfc2dj1rhK(eaT28>rg3VZo<#t3rg3VZo<%9Xg]7>?rhKLqos_m?rg3VZs/l=1pUA*Arg3VZ
s/kt'g]6U>rg3VZs/kt'`;on(rhKLqosal"aT2=,rhKLqrjV[<c2dV>rg3VZs/l:0pqXiKrg3VZs/l:0
pqZ=uf)Yf:rhKLqrjV[<`;on(s.]XjXf_T3pqXiKrg3VZs/l:0s1nKRi;hs>rg3VZs/l:0s1nKR`;on(
rhKLqrjVpCqoSo]`;on(rhKLqrjVpCqT@7eo)ScVrhKLqrjVpCqT?bWrg3VZs/l:0s1nWVrR1<<dK'95
rhKLqrjVpCrlY2f`;on(rhKLqrjVpCrlY2f`;on(rhKLqrjVpCrlY2fjoF<>rg3VZs/l:0s1nWVs3gr$
`;on(rhKLqrjMsE^rl]"s3gr$J,~>

%%EndBinary
grestore
np
370.75 52.2503 mo
370.75 52.2503 li
370.75 52.2502 370.75 52.2502 370.75 52.2501 cv
370.75 52.2502 370.75 52.2502 370.75 52.2503 cv
388.75 52.25 mo
370.75 52.25 li
370.75 52.25 370.75 52.2499 370.75 52.2498 cv
371.046 52.0202 368.3 52.0185 368.3 49.2802 cv
368.5 49.2503 li
368.5 13.7479 li
368.509 13.7515 li
368.509 46.4788 li
369.546 45.4908 li
389.509 45.4908 li
389.509 46.2915 li
390.662 45.3691 li
390.808 45.2892 li
390.884 45.2138 li
391.024 45.0737 li
390.734 44.7498 li
390.991 44.7498 li
390.991 32.619 li
391.245 32.8501 391.498 33.0791 391.75 33.3054 cv
391.75 49.2503 li
391.66 52.0202 388.91 52.0202 388.91 52.0202 cv
388.75 52.2498 li
388.75 52.25 li
380.269 51.0401 mo
380.269 51.0401 380.27 51.0401 380.27 51.0401 cv
380.27 51.0401 li
380.877 51.0399 381.426 50.8003 381.857 50.3752 cv
381.938 50.2998 382.012 50.2159 382.081 50.1247 cv
382.391 49.7303 382.617 49.2226 382.728 48.6293 cv
382.789 48.5607 li
382.74 48.5607 li
382.744 48.5406 382.747 48.5203 382.75 48.5 cv
382.75 48.5 li
382.75 48.5 li
382.75 48.5 li
382.75 48.5 li
382.75 48.4997 li
382.682 48.2399 382.553 47.9739 382.376 47.7257 cv
383.194 47.0634 li
383.194 47.061 li
381.712 47.061 li
381.306 46.7702 380.811 46.5801 380.27 46.5801 cv
380.5 46.2501 li
379.04 46.5801 378.04 47.5801 378.04 48.8101 cv
378.25 48.5002 li
378.25 48.5002 378.25 48.5002 378.25 48.5002 cv
378.25 48.5003 378.25 48.5004 378.25 48.5006 cv
378.04 48.81 li
378.04 49.4236 378.289 49.98 378.72 50.3475 cv
379.097 50.7899 379.654 51.0399 380.269 51.0401 cv
380.269 51.0401 li
380.269 51.0401 380.269 51.0401 380.269 51.0401 cv
380.445 50.8196 mo
380.5 50.7501 li
380.5 50.7502 380.5 50.7502 380.5 50.7502 cv
380.445 50.8196 li
382.703 48.5607 mo
382.703 48.5607 li
382.75 48.5002 li
382.75 48.5001 382.75 48.5 382.75 48.4999 cv
382.75 48.5 382.75 48.5 382.75 48.5 cv
382.75 48.5 li
382.703 48.5607 li
372.97 12.5088 mo
369.62 12.5088 li
368.51 11.028 li
368.509 11.028 li
368.509 12.5088 li
368.5 12.5088 li
368.5 9.50019 li
368.346 9.44634 368.31 7.80471 369.556 7.05146 cv
370.594 8.899 371.741 10.7211 372.97 12.5088 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[26.2789 0 0 -47.803 366.84 266.443 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 35 
/M[19 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
m`"Uum\B4-m`"UuoV;;YmbdHOm]c,SmbdHOqQTXsm\B4-m`"Uum\B4-!6+uWn\kF2nZVAUrnm8)rl+EG
rikpro:u5Yrnm8)rl+EGrikprm\Bd=n_sJdn\kF2r3,gtm\Bd=n_sJdn\kF2nZVAUrnm8)s2=uWrl"HH
rilC*oWIVWrnm_6o]#khrl"HHrilC*oWIb[rM0ALro*M/rl+lToY^[4ribssm\Bd=ro*M/rl+lToY^[4
ric=(pTEqZrnm_6o]#khrl"HHrilC*oWIVWrnm_6o]#khrl"HHrilC*oWIVWrnm_6o]#khrl"HHrilC*
oWI_ZrhKJMro*M/rl+lToY^[4ribssm\Bd=ro*M/rl+lToY^[4ric:'poa%[rnm_6o]#khrl"`Pq8*'7
ric7&q5s@cq54/Kro*e7q;hOo!6"oUr58?HrilC*r3#jtp7qG\rnm_6r8RP5rl+lTr58?HrilC*r3#jt
p7qM^s/,eQro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/K
ro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOos24oUr58?HrilC*r3#jtp7qG\rnm_6r8RP5
rl+lTr58?HrilC*r3#jtp7qJ]!2fbQro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOorl"`P
q8*'7ric7&!3Q+"p7qG\rnm_6r8RP5rl+lTr58HKrkSN;ric7&r2ot$p7qP_rhTPNro*e7q;hOorl"`P
r5&BJrilC*r3#t"riYsir20Ihrnm_6r8RP5rl+lTr58HKrkSN;ric7&r2ot$p7qP_rhTPNro*e7q;hOo
rl"`Pr5&BJrilC*r3#t"riYsir20Ihrnm_6r8RP5rl+lTr58HK!l2UfrilC*r3$(%riH7)Y-%Dmr2'Ok
Uo+.Kro*e7qW%Y<rl+lTr58HK!l2UfrilC*r3#t"!j8].p7qP_!i2Whrnm_6r8RS6!9J_~>

%%EndBinary
grestore
np
380.27 51.0401 mo
380.27 51.0401 380.269 51.0401 380.269 51.0401 cv
380.269 51.0401 380.27 51.0401 380.27 51.0401 cv
380.27 51.0401 li
380.269 51.0401 mo
379.654 51.0399 379.097 50.7899 378.72 50.3475 cv
379.05 50.6297 379.488 50.8006 380.003 50.8006 cv
380.162 50.8006 380.328 50.7843 380.5 50.75 cv
380.5 50.7502 li
380.5 50.7502 380.5 50.7502 380.5 50.7501 cv
380.445 50.8196 li
380.269 51.0401 li
381.857 50.3752 mo
381.936 50.2977 382.01 50.2141 382.081 50.1247 cv
382.012 50.2159 381.938 50.2998 381.857 50.3752 cv
380.5 50 mo
380.458 49.9397 li
380.641 49.9397 li
380.594 49.9608 380.547 49.9809 380.5 50 cv
378.979 49.331 mo
378.585 49.1047 378.313 48.7954 378.25 48.5 cv
378.12 48.23 li
378.08 48.3812 378.053 48.5324 378.15 48.5324 cv
378.174 48.5324 378.207 48.5226 378.25 48.5002 cv
378.04 48.8101 li
378.04 47.5801 379.04 46.5801 380.5 46.2501 cv
380.27 46.5801 li
380.811 46.5801 381.306 46.7702 381.712 47.061 cv
379.338 47.061 li
379.143 47.4233 li
379.045 47.6058 li
378.791 47.8795 li
378.791 48.3853 li
378.935 48.5713 li
379.061 48.7352 li
379.061 49.1207 li
378.979 49.331 li
382.703 48.5607 mo
382.525 48.5607 li
382.541 48.5121 382.575 48.4813 382.642 48.4813 cv
382.671 48.4813 382.706 48.4872 382.75 48.4999 cv
382.75 48.5 382.75 48.5001 382.75 48.5002 cv
382.703 48.5607 li
382.29 48.5607 mo
381.94 48.5607 li
381.94 48.3333 li
381.864 48.1849 li
381.848 48.1538 li
382.376 47.7257 li
382.553 47.9739 382.682 48.2399 382.75 48.4997 cv
382.43 48.23 li
382.394 48.3445 382.347 48.4547 382.29 48.5607 cv
380.505 48.5607 mo
380.44 48.5607 li
380.44 48.4958 li
380.444 48.4995 li
380.505 48.5607 li
378.25 48.5006 mo
378.25 48.5004 378.25 48.5003 378.25 48.5002 cv
378.25 48.5002 378.25 48.5001 378.25 48.5 cv
378.25 48.5006 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -6.829 376.522 226.835 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.269 51.0401 mo
380.269 51.0401 li
380.269 51.0401 380.269 51.0401 380.269 51.0401 cv
380.269 51.0401 380.269 51.0401 380.269 51.0401 cv
380.27 51.0401 mo
380.445 50.8196 li
380.5 50.7502 li
380.619 50.7844 380.738 50.8006 380.856 50.8006 cv
381.224 50.8006 381.574 50.6409 381.857 50.3752 cv
381.426 50.8003 380.877 51.0399 380.27 51.0401 cv
378.72 50.3475 mo
378.289 49.98 378.04 49.4236 378.04 48.81 cv
378.25 48.5006 li
378.145 49.2703 378.342 49.9052 378.72 50.3475 cv
382.081 50.1247 mo
382.333 49.7872 382.495 49.3498 382.509 48.8749 cv
382.728 48.6293 li
382.617 49.2226 382.391 49.7303 382.081 50.1247 cv
382.74 48.5607 mo
382.703 48.5607 li
382.75 48.5 li
382.747 48.5203 382.744 48.5406 382.74 48.5607 cv
378.25 48.5002 mo
378.25 48.5002 li
378.25 48.5002 li
378.25 48.5002 378.25 48.5002 378.25 48.5002 cv
382.75 48.5 mo
382.75 48.5 li
382.75 48.5 li
382.75 48.5 li
382.75 48.5 mo
382.75 48.5 382.75 48.5 382.75 48.4999 cv
382.75 48.4998 382.75 48.4998 382.75 48.4997 cv
382.75 48.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -5.4632 376.522 225.469 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!E~>
<~USFTZUSFTZUSFTZUSFTZUSFTZUSFTZ~>
<~S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>~>
<~P*1ukP*1ukP*1ukP*1ukP*1ukP*1uk~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.269 51.0401 mo
380.269 51.0401 380.269 51.0401 380.269 51.0401 cv
380.445 50.8196 li
380.27 51.0401 li
380.27 51.0401 380.269 51.0401 380.269 51.0401 cv
380.856 50.8006 mo
380.738 50.8006 380.619 50.7844 380.5 50.7502 cv
380.5 50.75 li
380.328 50.7843 380.162 50.8006 380.003 50.8006 cv
379.488 50.8006 379.05 50.6297 378.72 50.3475 cv
378.342 49.9052 378.145 49.2703 378.25 48.5006 cv
378.25 48.5 li
378.25 48.5001 378.25 48.5002 378.25 48.5002 cv
378.25 48.5002 378.25 48.5002 378.25 48.5002 cv
378.25 48.5002 li
378.207 48.5226 378.174 48.5324 378.15 48.5324 cv
378.053 48.5324 378.08 48.3812 378.12 48.23 cv
378.25 48.5 li
378.313 48.7954 378.585 49.1047 378.979 49.331 cv
378.968 49.3602 li
379.413 49.5333 li
378.975 49.9393 li
379.309 50.2989 li
380.082 50.2989 li
380.222 49.9397 li
380.458 49.9397 li
380.5 50 li
380.547 49.9809 380.594 49.9608 380.641 49.9397 cv
381.247 49.9397 li
381.415 50.0995 li
381.582 49.9345 li
381.604 49.9068 li
381.776 49.6972 li
382.509 48.8749 li
382.495 49.3498 382.333 49.7872 382.081 50.1247 cv
382.01 50.2141 381.936 50.2977 381.857 50.3752 cv
381.574 50.6409 381.224 50.8006 380.856 50.8006 cv
382.525 48.5607 mo
382.29 48.5607 li
382.347 48.4547 382.394 48.3445 382.43 48.23 cv
382.75 48.4997 li
382.75 48.4998 382.75 48.4998 382.75 48.4999 cv
382.706 48.4872 382.671 48.4813 382.642 48.4813 cv
382.575 48.4813 382.541 48.5121 382.525 48.5607 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -5.4632 376.522 225.469 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~io8tWio8tWio8tWio8tWio8tWio8tW~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
382.51 48.81 mo
382.51 48.81 382.51 48.8099 382.51 48.8098 cv
382.703 48.5607 li
382.703 48.5607 li
382.51 48.81 li
382.728 48.6293 mo
382.732 48.6066 382.736 48.5837 382.74 48.5607 cv
382.789 48.5607 li
382.728 48.6293 li
382.376 47.7257 mo
382.2 47.4784 381.974 47.2487 381.712 47.061 cv
383.194 47.061 li
383.194 47.0634 li
382.376 47.7257 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.1493 0 0 -5.4632 380.671 226.835 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~77BX677BX679!5c~>
<~2)R6K2)R6K2*sVr~>
<~2`EZS2`EZS2ag&%~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.641 49.9397 mo
380.458 49.9397 li
380.269 49.67 li
379.783 49.67 379.332 49.5338 378.979 49.331 cv
379.061 49.1207 li
379.061 48.7352 li
378.935 48.5713 li
378.791 48.3853 li
378.791 47.8795 li
379.045 47.6058 li
379.143 47.4233 li
379.338 47.061 li
381.712 47.061 li
381.974 47.2487 382.2 47.4784 382.376 47.7257 cv
381.848 48.1538 li
381.864 48.1849 li
381.94 48.3333 li
381.94 48.5607 li
382.29 48.5607 li
381.958 49.1783 381.295 49.6484 380.641 49.9397 cv
380.44 48.5607 mo
380.505 48.5607 li
380.444 48.4995 li
380.44 48.4958 li
380.44 48.5607 li
382.51 48.8098 mo
382.51 48.7154 382.503 48.6232 382.525 48.5607 cv
382.703 48.5607 li
382.51 48.8098 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.5324 0 0 -5.4632 377.905 226.835 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~<E3%!<E3%!<E3%!A7T4]~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
382.509 48.8749 mo
382.509 48.8534 382.51 48.8318 382.51 48.8101 cv
382.51 48.8098 li
382.51 48.8099 382.51 48.81 382.51 48.81 cv
382.703 48.5607 li
382.74 48.5607 li
382.736 48.5837 382.732 48.6066 382.728 48.6293 cv
382.509 48.8749 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.1493 0 0 -4.0974 380.671 225.469 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~5s[e&5s[e&5l~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.082 50.2989 mo
379.309 50.2989 li
378.975 49.9393 li
379.413 49.5333 li
378.968 49.3602 li
378.979 49.331 li
379.332 49.5338 379.783 49.67 380.269 49.67 cv
380.458 49.9397 li
380.222 49.9397 li
380.082 50.2989 li
381.415 50.0995 mo
381.247 49.9397 li
380.641 49.9397 li
381.295 49.6484 381.958 49.1783 382.29 48.5607 cv
382.525 48.5607 li
382.503 48.6232 382.51 48.7154 382.51 48.8098 cv
382.51 48.8101 li
382.51 48.8318 382.509 48.8534 382.509 48.8749 cv
381.776 49.6972 li
381.604 49.9068 li
381.582 49.9345 li
381.415 50.0995 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.5324 0 0 -5.4632 377.905 225.469 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~6UO4.6UO4.6UO4.6UO4.~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.509 44.0088 mo
369.991 44.0088 li
369.991 14.0468 li
370.047 13.9908 li
374.013 13.9908 li
378.62 20.3918 384.205 26.2999 389.509 31.2527 cv
389.509 44.0088 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[22.1296 0 0 -32.7792 368.223 259.614 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 24 
/M[16 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni
\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou
\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q
\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$
\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(
\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(
~>
<~Vl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukr
Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)
Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1
Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%
Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)
Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)
~>
<~T:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0R
T:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZ
T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^
T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukr
T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukr
T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukq
~>
<~XK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&Y
XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8
XK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.d
XK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?
XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_
XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
368.5 13.7479 mo
367.75 13.448 li
367.75 12.5088 li
368.5 12.5088 li
368.5 13.7479 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.1493 0 0 -4.0974 366.84 260.98 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~hVR,GhVR,Gh>~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
368.509 46.4788 mo
368.509 13.7515 li
368.5 13.7479 li
368.5 12.5088 li
368.509 12.5088 li
368.509 11.028 li
368.51 11.028 li
369.62 12.5088 li
372.97 12.5088 li
373.14 12.7564 373.312 13.0037 373.485 13.2498 cv
369.25 13.2498 li
369.6 13.3899 li
369.46 13.5298 li
369.25 13.2498 li
369.25 44.7498 li
390.25 44.7498 li
390.36 44.6899 li
390.5 44.5498 li
390.25 44.7498 li
390.25 31.9402 li
390.498 32.1688 390.745 32.3948 390.991 32.619 cv
390.991 44.7498 li
390.734 44.7498 li
391.024 45.0737 li
390.884 45.2138 li
390.808 45.2892 li
390.662 45.3691 li
389.509 46.2915 li
389.509 45.4908 li
369.546 45.4908 li
368.509 46.4788 li
369.25 44.7498 mo
369.25 44.7498 li
369.46 44.5498 li
369.6 44.6899 li
369.25 44.7498 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[24.8958 0 0 -38.2424 366.84 262.346 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 18 
/H 28 
/M[18 0 0 -28 0 28 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 18 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 18 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 18 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 18 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
n%nIpn##R8rk\0@n#c&U!9N_3rk\0@n#c&Un)aPbo"a^rs/,=`n)aPbo"a^rn##R8rk\0@riPann##R8
rk\0@n#c&Un)aPb!5S3An#c&Un)aPbo"a^rn#$$Eo]?(go"a^rn##R8rk\0@n#cJaoqq3>rk\0@n#c&U
n)aPbo"b+(p9!e\n)aPbo"a^rn##R8rk\NJpV?7"n##R8rk\0@n#c;\qPX,MpuVLko"a^rp87\an)aPb
o"a^rpSIqfqPWfDrk\0@n#c;\qPWfDrk\0@p9"1np87\an)aPbpV?^AoWA%op87kfr2/rErk\BF!5SNI
oWA%op87kfr2/rErk\?Er4hm+r3#ajs/5dlo]?#4rk\?Er4hm+r3#ajs/5dln)aPbpV?^AoWA%op8.nh
Vl'Ein)aPbpV?dCs1n9/riZ:'p87kfr2/rErk\?ErkJKKoWA.r!j8Z-p87kfr2/rErk\?ErkJKKoWA+q
s/l!ls/5dln)]'~>

%%EndBinary
grestore
np
390.25 44.7498 mo
390.25 44.7498 li
390.25 44.7498 mo
369.25 44.7498 li
369.6 44.6899 li
369.46 44.5498 li
369.25 44.7498 li
369.25 13.2498 li
369.46 13.5298 li
369.6 13.3899 li
369.25 13.2498 li
373.485 13.2498 li
373.659 13.4972 373.835 13.7449 374.013 13.9908 cv
370.047 13.9908 li
369.991 14.0468 li
369.991 44.0088 li
389.509 44.0088 li
389.509 31.2527 li
389.756 31.4836 390.004 31.7135 390.25 31.9402 cv
390.25 44.7498 li
390.25 44.7498 mo
390.5 44.5498 li
390.36 44.6899 li
390.25 44.7498 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[23.5127 0 0 -34.145 368.223 259.614 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^]~>
<~Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Xo~>
<~VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVl-GjVl-Gi
VP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GjVl$>gVP^5fVP^5gVl-GjVl-DhVP^5fVP^5fVl-Gj
Vl-GiVP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GjVl$>gVP^5fVP^5gVl-GjVl-DhVP^5fVP^5f
Vl-GjVl-GiVP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GiV>~>
<~jQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5LbjlPUcjlPUc
jlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5LbjlPUc
jlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5Lb
jlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUb
jQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUc
jlPUbjQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUc
jlPUcjlPUbjQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjT~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.91 52.57 mo
389.912 52.5685 li
389.935 52.5649 389.96 52.5611 389.985 52.557 cv
389.96 52.5624 389.935 52.5663 389.91 52.57 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.1493 0 0 -4.0974 388.97 222.737 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.912 52.5685 mo
390.25 52.25 li
390.217 52.4727 390.102 52.5315 389.985 52.557 cv
389.96 52.5611 389.935 52.5649 389.912 52.5685 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.1493 0 0 -4.0974 388.97 222.737 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~Q^=&*Q^=&*QN~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
370 44.75 mo
390.25 44.75 li
390.25 13.25 li
370 13.25 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
gsave
13.75 92.75 mo
13.95 92.79 li
18.875 98.36 25.621 102.17 33.088 103.59 cv
33.25 103.25 li
64 86 li
45.2499 75.4999 li
13.75 92.75 li
clp
13.75 103.59 mo
64 103.59 li
64 75.5 li
13.75 75.5 li
cp
level3{
gsave
clp
[1 0 0 -1 -23 284 ]ct
/0 
<<
/ShadingType 2 
/BBox [36.75 180.41 87 208.5 ] 
/ColorSpace /0 /CSA get_res
/Coords [62.15 179.66 62.15 209.34 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzz!!!$"!<<0$!<E6%!<E9&!WiK)!WiN*!s/W+!s8`-!s8c.!s8f/"9Sr1"9]&3"9])4"9],5"U,>8"U
,A9"pPS<"pPV=#6th@#RD%C#RD(D#mh:G#mh=H$47OK$OR[M$O[gP$k+$S%1F0U%1O9W%LjEY%LsN[%h
9Z]%hBc_&.]oa&.g#c&J-/e&J68g&eQGj&eZPl'+u\n',)ep'GDqr'GN%t'bi2!()8D$()8G%(D\Y((D
\_*(`+q-(`5%/)&P11)&Y:3)AtF5)B(O7)]C[9)]Lg<*#gs>*#q'@*#q*A*?@<D*Z[HF~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 -23 284 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\l3"U,&5"U,)
7"pP;;#6tJ=#6tM?#RC\A#RC_C#mgqG$47+I$47.K$O[@O$k*OQ$k*RS%1NaU%1NaV%LrsY%LrsZ%hB0
]%hB0^&.fBa&.fBb&J5Te&J5Tf&eYfi&eYfj',)#m',)#n'GM5r'bqGu'bqGu()@Z$()@Z$(Ddl((Ddl
((`4),(`4),)&X;0)&X;0)B'M4)B'M4)]K_8)]K_8)]K_8*#oq<*??.@~>
<~zzzzzz!!**$!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8Z/"9\i1"9\l3"U,&5"U,)
7"pP;;#6tJ=#6tM?#RC\A#RC_C#mgnE#mgqG$47.K$O[=M$O[@O$k*OQ$k*OR%1NaU%1NaV%LrsY%Lrs
Z%hB0]%hB0^&.fBa&.fBb&J5Te&J5Tf&eYfi&eYfj',)#m',)#n'GM5q'GM5q'bqGu'bqGu()@Z$(Ddl
((Ddl((`4),(`4),)&X;0)&X;0)B'M4)B'M4)]K_8)]K_8*#oq<*#oq<~>
<~zzz!!**$!<E3%!<N<(!WrN,!sA`0"9\i1"9er4"U5/8"pYA<#7(S@#RLeD#mq"H$4@4L$O[@O$k*RS%1
NdW%Ls![%hB3_&.fEc&J5Wg&eYik',)&o'GM8s'bqK"()@]&(`4,.)&X>2)B'P6)]Kb:*#oq=*??.A*Z
c@E+!2RI+<VdM+X&!Q+sJ3U,9nEY,UF``-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P+/hSb/0/
#"50ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ioY3]];_4$,Mc4?P_g4Ztqk5!D.o~>
0 ]
>>
62.15 179.66 62.15 209.34 [36.75 180.41 87 208.5 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
.36 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
33.25 103.25 mo
64 86 li
45.25 75.5 li
13.75 92.75 li
13.95 92.79 li
18.875 98.36 25.621 102.17 33.088 103.59 cv
1 /3 /CSD get_res sepcs
0 sep
@
gsave
13.75 92.75 mo
13.75 137.75 li
13.961 137.429 li
18.96 142.76 25.711 146.28 33.088 147.41 cv
33.25 147.5 li
33.25 103.25 li
33.088 103.59 li
25.608 102.18 18.856 98.35 13.961 92.74 cv
13.75 92.75 li
clp
gsave
13.211 148.16 mo
33.838 148.16 li
33.838 91.99 li
13.211 91.99 li
13.211 148.16 li
eclp
gsave
13.2109 204.331 mo
33.8376 204.331 li
33.8376 148.16 li
13.2109 148.16 li
13.2109 204.331 li
clp
13.2109 148.16 mo
33.8375 148.16 li
33.8375 204.331 li
13.2109 204.331 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 272 ]ct
[20.6266 0 0 -56.1708 13.2109 123.84 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
33.8376 204.331 mo
54.4642 204.331 li
54.4642 148.16 li
33.8376 148.16 li
33.8376 204.331 li
clp
33.8375 148.16 mo
54.4642 148.16 li
54.4642 204.331 li
33.8375 204.331 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 272 ]ct
[20.6266 0 0 -56.1708 33.8375 123.84 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
13.2109 148.16 mo
33.8376 148.16 li
33.8376 91.9891 li
13.2109 91.9891 li
13.2109 148.16 li
clp
33.25 147.5 mo
33.088 147.41 li
25.711 146.28 18.96 142.76 13.961 137.429 cv
13.75 137.75 li
13.75 92.75 li
13.961 92.74 li
18.856 98.35 25.608 102.18 33.088 103.59 cv
33.25 103.25 li
33.25 147.5 li
17.051 106.009 mo
16.75 106.25 li
16.75 109.25 li
17.051 109.48 li
20.8071 112.62 25.212 114.94 29.975 116.31 cv
30.25 116 li
30.25 113 li
29.975 112.84 li
25.225 111.44 20.826 109.11 17.051 106.009 cv
22.0368 105.008 mo
21.5814 105.008 21.1223 105.181 20.6982 105.536 cv
20.6804 105.559 li
20.6089 105.702 20.5738 105.848 20.5739 105.992 cv
20.5846 106.787 21.5829 107.45 23.0368 107.65 cv
23.038 107.65 li
23.2988 107.68 23.5657 107.695 23.8327 107.695 cv
24.0997 107.695 24.3669 107.68 24.6282 107.65 cv
24.6282 107.65 li
24.6794 107.617 li
24.6862 107.557 li
24.1228 105.945 23.107 105.01 22.0376 105.008 cv
22.0373 105.008 22.0371 105.008 22.0368 105.008 cv
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 272 ]ct
[20.6266 0 0 -56.1708 13.2109 180.011 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
33.8376 148.16 mo
54.4642 148.16 li
54.4642 91.9891 li
33.8376 91.9891 li
33.8376 148.16 li
clp
33.8375 91.9892 mo
54.4642 91.9892 li
54.4642 148.16 li
33.8375 148.16 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 272 ]ct
[20.6266 0 0 -56.1708 33.8375 180.011 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
grestore
grestore
33.0879 103.59 mo
25.6079 102.18 18.8559 98.3498 13.9609 92.7398 cv
13.7499 92.7498 li
13.7499 137.75 li
13.9609 137.43 li
18.9599 142.76 25.7109 146.28 33.0879 147.41 cv
33.2499 147.5 li
33.2499 103.25 li
.326848 .461494 .829587 .102419 cmyk
@
gsave
33.25 103.25 mo
33.25 147.5 li
64 130.25 li
64 86 li
33.25 103.25 li
clp
32.326 148.11 mo
65.1 148.11 li
65.1 85.337 li
32.326 85.337 li
cp
gsave
/4 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 63 
/Lookup <~
!!**$!!*-&!!*-'!<NE+!s8i1"9f,5"pYS;#6tb>#RM(C#mh7F$4.CH$O[dO$k4-U%1X?X&.]i_&.fo`
&J62e&eQDi'+uVl'GMtr()AG$(D\S&(Dnh+)&Y./)&b:2)]C[9*#ps=*ZdED+!<cJ+<`uM+sTJU,9o_Z
,pc1a-7;Rh-n%ml.4\?t/1jp'/MC6,0/$T20/6i70f!2<0f3D@1,WVC2)].K2E5LQ2`Y^T3')'[3BM9^
3BVEa4$Ioi4?n,l4[FMs5!sl$5XU/(5spA-6:Qb36Ulq66V*4<77rXB7SK$J7noBQ85>TU8l2)]92_Je
~>
>>
/CSD add_res
grestore
/109562088.0 
<<
/ID /109562088.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 24 46 ] 
/XStep 24 
/YStep 46 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 46 mo
24 46 li
24 0 li
0 0 li
cp
false sop
/4 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 272 ]ct
[24 0 0 46 0 226 ]ct
snap_to_device
<<
/T 1
/W 24 
/H 46 
/M[24 0 0 -46 0 46 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~J.LR73$]7K"!9j<:q1$o'Kh1>@So+\5^GMN7Uo<*jC!9pO@Wn[3@'-$3L!-I;Rp2rF?LSeAlC^ce8[,\
:1mM9jS!IS)Gk*H3[G>Q58hm`<4ZWrO"V@"C/m<k9P%!@N%7o>j`\19T8TdO4!g340<e*g[_$+Zh/'H!
"a<&)f'RMo>\E&sjnAY&^0YY$d7+o]LVsN'3%D_9*KS9P7/4CD]M"U8Aog:TV@6%gctIN(b[gWAVpoI(
,#'C`H6V!XG$?P1G-E+EDKf<I%bF?,&+FgK4r3lsK+E!J>eWaYNOGI73aFqBE')A&CP.&LkB&Z7kO6Hb
Y:#[\)Xqoh@@q2Ah<=3FlN)L5fBO4JG]gi@kP+iN4YMtI$:'\(#R\?XMkHDgE,6O!_%4`=X9()W/-pi(
Mus6=TS,H=Je6-=r@hW$9bW*J'I<c+i+u[8`A#dUnH!X2C'I-^*%%;/;=&WL78VaW"A"&.'-KbA,-V0k
J38l4`Gj`C.=fioK,M)4,df,D&_'o(J7'3#/kQ`i>QFh'*3CL,Bm9UXbu3o&nK8q~>
/LZWDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/109562088.0 /Pattern get_res
[1.3656 0 0 -1.36459 32.3262 148.11 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
33.25 103.25 mo
33.25 147.5 li
64 130.25 li
64 86 li
33.25 103.25 li
cp
1 /3 /CSD get_res sepcs
0 sep
@
1.5 lw
64 86 mo
45.25 75.5 li
13.75 92.75 li
13.75 137.75 li
13.961 137.43 li
18.96 142.76 25.711 146.28 33.088 147.41 cv
33.25 147.5 li
64 130.25 li
64 86 li
1 /3 /CSD get_res sepcs
1 sep
@
gsave
22.052 119.9 mo
21.2899 120.18 20.985 121.26 21.371 122.32 cv
21.757 123.38 22.688 124.02 23.45 123.74 cv
24.212 123.46 24.517 122.38 24.1311 121.32 cv
23.8059 120.429 23.096 119.834 22.425 119.834 cv
22.2979 119.834 22.1729 119.855 22.052 119.9 cv
clp
21.6221 125.21 mo
25.7911 123.69 li
23.8801 118.44 li
19.7111 119.96 li
cp
gsave
grestore
/109562284.0 
<<
/ID /109562284.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8 0 0 8 0 264 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~_o'C0_o'C0YHP.5YHP.5R$a8.R$a8EI=6NlI=7KdC2.KuC42JQ:JXb^C42JQ1G^g_C42JQ(`5&)C42JQ
~>
<~.Olnt.Olnt+<VdL+<VdL'GM5q'GM6(%1NaU%1O!o$47+I$4R[l"U,&5$4R[l!s8W/$4R[l!<E9+$4R[l
~>
<~]tM+m]tM+mUnjf^Unjf^M2@(GM2@(bDJj?0DJk<,?!U`A?#GLp6UO4.?#GLp.k<,;?#GLp',)l`?#GLp
~>
<~"pP89"pP89!WiE)!WiE)!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/109562284.0 /Pattern get_res
[.521194 -.189697 -.238846 -.656235 21.6221 125.21 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
.36 lw
24.1309 121.32 mo
23.7449 120.26 22.8139 119.62 22.0519 119.9 cv
21.2899 120.18 20.9849 121.26 21.3709 122.32 cv
21.7569 123.38 22.6879 124.02 23.4499 123.74 cv
24.2119 123.46 24.5169 122.38 24.1309 121.32 cv
cp
@
.6 lw
17.0508 128.91 mo
20.9048 132.17 25.3078 134.49 29.9748 135.74 cv
17.0508 131.58 mo
20.9048 134.84 25.3078 137.16 29.9748 138.41 cv
17.0508 134.25 mo
20.9048 137.51 25.3078 139.83 29.9748 141.08 cv
@
16.9951 102.36 mo
20.7031 105.56 25.1241 107.89 29.9181 109.19 cv
30.2751 109.11 30.4991 108.77 30.4191 108.43 cv
30.3631 108.19 30.1681 108 29.9181 107.95 cv
25.2231 106.7 20.8891 104.44 17.2541 101.32 cv
17.0791 101.17 16.8081 101.18 16.6471 101.35 cv
16.5631 101.43 16.5231 101.55 16.5371 101.67 cv
16.5651 101.96 16.7351 102.22 16.9951 102.36 cv
ef
.36 lw
16.9951 102.36 mo
20.7031 105.56 25.1241 107.89 29.9181 109.19 cv
30.2751 109.11 30.4991 108.77 30.4191 108.43 cv
30.3631 108.19 30.1681 108 29.9181 107.95 cv
25.2231 106.7 20.8891 104.44 17.2541 101.32 cv
17.0791 101.17 16.8081 101.18 16.6471 101.35 cv
16.5631 101.43 16.5231 101.55 16.5371 101.67 cv
16.5651 101.96 16.7351 102.22 16.9951 102.36 cv
cp
@
gsave
20.743 105.59 mo
20.309 106.46 21.3399 107.35 23.046 107.58 cv
23.562 107.64 24.103 107.64 24.62 107.58 cv
24.062 105.983 23.062 105.077 22.038 105.077 cv
21.6 105.077 21.158 105.243 20.743 105.59 cv
clp
gsave
19.895 108.38 mo
25.37 108.38 li
25.37 104.331 li
19.895 104.331 li
19.895 108.38 li
eclp
gsave
14.4198 112.429 mo
19.895 112.429 li
19.895 108.38 li
14.4198 108.38 li
14.4198 112.429 li
clp
14.4198 108.38 mo
19.895 108.38 li
19.895 112.429 li
14.4198 112.429 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.47522 0 0 -4.0487 14.4198 163.62 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
19.895 112.429 mo
25.3702 112.429 li
25.3702 108.38 li
19.895 108.38 li
19.895 112.429 li
clp
19.895 108.38 mo
25.3702 108.38 li
25.3702 112.429 li
19.895 112.429 li
19.895 108.38 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.47522 0 0 -4.0487 19.895 163.62 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
14.4198 108.38 mo
19.895 108.38 li
19.895 104.331 li
14.4198 104.331 li
14.4198 108.38 li
clp
14.4198 104.331 mo
19.895 104.331 li
19.895 108.38 li
14.4198 108.38 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.47522 0 0 -4.0487 14.4198 167.669 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
19.895 108.38 mo
25.3702 108.38 li
25.3702 104.331 li
19.895 104.331 li
19.895 108.38 li
clp
23.8327 107.555 mo
23.5714 107.555 23.3102 107.54 23.0554 107.511 cv
23.0554 107.511 li
21.6246 107.321 20.7033 106.652 20.714 105.992 cv
20.714 105.875 20.741 105.756 20.7993 105.634 cv
21.2002 105.302 21.6216 105.148 22.0376 105.148 cv
22.039 105.148 22.0402 105.148 22.0415 105.148 cv
23.0024 105.148 23.9666 105.992 24.5243 107.52 cv
24.2966 107.543 24.0646 107.555 23.8327 107.555 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.10641 0 0 -3.03653 20.5794 167.163 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'G1c]"p>VP%13:B'G1c]"pPbR%13FL'G1c`%1O!`&J5Te~>
<~%1<FH"To2A#R:M8%1<FH"U,>C#R:S>%1<FI#RCkI$O[=M~>
<~/LDMV&IL*:*Z5Os/LDMV&J6TA*Z5h5/LDM[*Zcm[-71&d~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
14.4198 104.331 mo
19.895 104.331 li
19.895 100.283 li
14.4198 100.283 li
14.4198 104.331 li
clp
14.4198 100.283 mo
19.895 100.283 li
19.895 104.331 li
14.4198 104.331 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.47522 0 0 -4.0487 14.4198 171.717 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
19.895 104.331 mo
25.3702 104.331 li
25.3702 100.283 li
19.895 100.283 li
19.895 104.331 li
clp
19.895 100.283 mo
25.3702 100.283 li
25.3702 104.331 li
19.895 104.331 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.47522 0 0 -4.0487 19.895 171.717 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
24.6201 107.58 mo
24.554 107.603 li
24.0006 106.02 23.0171 105.145 22.0376 105.148 cv
21.6177 105.148 21.1924 105.305 20.7881 105.644 cv
20.7431 105.59 li
20.8057 105.621 li
20.743 105.747 20.714 105.871 20.714 105.992 cv
20.7033 106.652 21.6246 107.321 23.0554 107.511 cv
23.0461 107.58 li
23.0542 107.511 li
23.3093 107.54 23.571 107.555 23.8327 107.555 cv
24.0944 107.555 24.3563 107.54 24.612 107.511 cv
24.6201 107.58 li
24.554 107.603 li
24.6201 107.58 li
24.6282 107.65 li
24.3669 107.68 24.0997 107.695 23.8327 107.695 cv
23.5657 107.695 23.2988 107.68 23.038 107.65 cv
23.0368 107.65 li
21.5829 107.45 20.5846 106.787 20.5739 105.992 cv
20.5738 105.848 20.6089 105.702 20.6804 105.559 cv
20.6982 105.536 li
21.1226 105.18 21.5819 105.007 22.0376 105.008 cv
23.107 105.01 24.1228 105.945 24.6862 107.557 cv
24.6794 107.617 li
24.6282 107.65 li
24.6201 107.58 li
1 /3 /CSD get_res sepcs
0 sep
f
gsave
16.75 106.25 mo
16.75 109.25 li
17.051 109.48 li
20.8071 112.62 25.212 114.94 29.975 116.31 cv
30.25 116 li
30.25 113 li
29.975 112.84 li
25.225 111.44 20.826 109.11 17.051 106.009 cv
16.75 106.25 li
clp
gsave
16.302 117.06 mo
30.725 117.06 li
30.725 105.257 li
16.302 105.257 li
16.302 117.06 li
eclp
gsave
16.3018 128.863 mo
30.7249 128.863 li
30.7249 117.06 li
16.3018 117.06 li
16.3018 128.863 li
clp
grestore
gsave
16.3018 117.06 mo
30.7249 117.06 li
30.7249 105.257 li
16.3018 105.257 li
16.3018 117.06 li
clp
29.975 116.31 mo
25.212 114.94 20.8071 112.62 17.051 109.48 cv
16.75 109.25 li
16.75 106.25 li
17.051 106.009 li
20.826 109.11 25.225 111.44 29.975 112.84 cv
30.25 113 li
30.25 116 li
29.975 116.31 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[13.911 0 0 -10.7214 16.5687 166.259 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 58 
/H 46 
/M[58 0 0 -46 0 46 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
r[7Rfq]bq[q]5PQk8F7Eq]YhXr#>MNq\T,Dm1]Ipqag`UrC-WLq`Oa7q_@In`rQ)dq]kt^r#bqZr>kbS
k8F7Eq]YhXr#>MNq\T,Dm1]IpqagTQr':-Aq_nL0r%[Ro`rQ)dq]kt^r#beVq]#DMq\Jc=rZq@aq]>YS
q\f8Ik7mnkqagTQr':-Aq`"C,n1Xbo`rQ)dq]kt^r#beVq]#DMm2#[Hr#l%`q]>YSq\f8Ik7mnkqagTQ
r':-Aq`"C,m4[l-g&V+"s!.J%s#0g>s#g9>q_e7+q_7Rnr$hUjruq=rs"OC1s"s^1q_%gts"!spngF>Z
r_NPbrEB5$rEK;&r_r\hqagTPnj31;fDtC@r[7^jrAag8rBC6Dr\s^3q_J%&nh0hhrZqLerA+C,rAXa5
r\F@'q^_Olo-XMcr$),9s%*)ls&K#%s&T+tqbI#ZqaC!@r'&.$r[7^jrAag8rBC6Dr\s^3q_J%&nh0hh
rZqLerA+C,rAXa5r\F@'q^_OlngF>Zr_NPbrEB5$rEB8&!*9(tqbI#ZqaC!@r'&.$r[7^jrAag8rBC6D
r\s^3!&FI-q_7Rmr$_Oiruq=rs"OC1s"s^1q_%arq^D"^r$),9s%*)ls&K#%s&T+tqbI#ZqaC!=r&_q!
r[7^jrAag8rBC6Dr\s^3q_J%&p+?4pr$_Oiruq=rs"OC1s"s^1q_%arq^D"^r$),9s%*)ls&K#%s&T+t
qbI#ZqaC!=r&aoYaT2;fs!.J%s#0g>s#g9>q_e7+q_7Rmr$_Oiruq=rs"OI3s#9s7r\F@'q^_Olng=8Y
r_NPbrEB5$rEK;&r_r\hqagTPnilt5klBT@r[7^jrAag8rCd/]r`/hmqbR)`pe(EIr$_Oiruq=rs"OC<
s$-KRqaUHNr^$NLpceR3r$),9s%*)ls&K#0s'bnAqdoY3qcihpqb-iKn,WFgk5b/Tr[7^jrAag8rCd/]
r`/hmqbR)`pe(EIr$_Oiruq=rs"OC<s$-KRqaUHNqa(!@q_\6q!$_D<s%*)ls&K#0s'bnAqdoY3qcihp
qb-iKn,WFggAq4#s!.J%!&ag8rCd/]r`/hmqbR)`pe(EIr$_Oiruq=rs"OC<s$-KRqaUHNqa(!@q_\3p
r_NPbrEB5$rFZ(<rb;FEr+5b4qcihpqb-iKn,WFggAq4#s!.J%s#0gKs%*,hqbd5dqb?u\rCQlKr$VIh
ruq=rs"OC<s$-KRqaUHNqa(-DrB:$6r#u&8s%*)ls&K#0s'bnAqdoY3qcittrDWScr&X<IrW1aRr[7^j
rAag8rCd/]r`/hmqbR)`r(?oZq`Fj+r?qRiruq=rs"OC<s$-KRqaUHNqa(-DrB:$6r#u&8s%*)ls&K#0
s'bnAqdoY3qcittrDWScr&XZSpAk0ngAq4#s!.J%s#0gKs%*,hqbd5dqb?u\rCQlKr$VIhruq=rs"OC<
!^An?s%*#VqaC<Ir'('Bq_S-nr_NPbrEB5$rFZ(<rbD=Aqd95)r)EVnqb$cIn,WFgp]0@Tr[7^jrAag8
rCd/]ra5Y2rbMLJrb)+=raPn/rD`YVr$VIhruq=rs"OC<s$-K]r_NMur`fA(qc<_q!`MZ^rC?`@r#u&8
s%*)ls&K#0s'bnKrbqd`rce?`qec=Hs'GY/qb$cIn,WFjrWE-,rWiE,qZQm"qZ6Wqq>gLBs!.J%s#0gK
s%*,rra,S>rbDFFqdf\8s&].uq`Od(rZqLerA+C,rBgNKr_relr`oG,r`K%ur_rhgrC?`@r#u&8s%*)l
s&K#0s'bnKrbqd`rce?`qec=Hs'GY/qb$cIn,WFjrWE-,rWiE,qZQm"qZ6Bjr[7^jrAag8rCd/]ra5Y2
rbMLJrb)+=raPn/rD`YVr$VIhruq=rs"OC<s$-K]r_NMur`fA(qc<\ps%3/Zq_S-nr_NPbrEB5$rFZ(<
rcJ0Y!,qjarce?`qec=Hs'GY/qb$cIn,WFjrWE-,rWiE,qZQm"qZ6Bjr[7^jrAag8rCd/]ra5Y2rbMLJ
rau4Ar+,e9s&].uq`Od'rZqLerA+C,rBgNKr_relr`oG,r`K%ur_rhgrC?`>r#ku7s%*)ls&K#0s'bnK
rbqd`rce?`qec=H!a]2;r`f7ir&F0GrWN3&rX/W0rW`6&rW;rtp&P(>s!.J%s#0gKs%*,rra,S>rbDFF
qdf\8s&].uq`Om*r[.Uiruq=rs"OC<s$-K]r_NMur`fA(qc<\ps%3/Zq_A!kr_NPbrEB5$rFZ(<rcJ-X
rd=]hrcJ$Srb;C=rEK.hr&FKPp]19rrWE-,rWiE,qZQm"qZ6Bjr[7^jrAag8rCd/]ra5Y2rbMLJrb)+=
raPn/rD`YVr$MCgruq=rs"OC<s$-N^!)rkmr`oG,r`K%ur_rhgrC?`>r#ku7s%*)ls&K#0s'bnKrbqd`
rce?`qec=Hs'GY.qa^QDn,WFjrWE-,rW`E-rs&?'rW;rtp&P(>s!.J%s#0gKs%*,rra,S>rbDFFqdf\8
s&].uq`Od'rZqLerA+C,rBgNKr_relr`oG,r`K%ur_rhgrC?`>r#ku7s%*)ls&K#0s'bnKrbqd`rce?`
qec=Hs'GY.qa^QDn,WFjrWE-,rWiE,qZQm"qZ6TpqZ-UCs!.J%s#0gKs%*,rra,SBrbh^_rd4NXs&].u
q`Od'rZqLerA+C,rBgNKr_relra>_4rbh^Nr`oG*s%3/Zq_A!kr_NPbrEB5$rFZ(<rcJ-XrdOilreLK(
rcJ-Xs'GY.qa^QDn,WFjrWE-.rX/WDrYPP=rWW0"p&P(>s!.J%s#0gK!([)\ra5Y2rbqdRrd=]lqeQ45
rD`YVr$MCgruq=rs"OC<s$-K]r_NN$ra5YBrbML<r`T7mrC?`>r#ku7s%*)ls&K#0s'bnKrbqdb!."Ti
reLK(rcJ-Xs'GY.qa^QDn,WFjrWE-.rX/WDrYPP=rWW0"p&P(>s!.J%s#0gKs%*,rra,SBrbh^_rd4W[
rbMO8rDWSTr$D=fruq=rs"OC<s$-K]r_NN$ra5YBrbML<r`T7mrC6Z<r#bo6s%*)ls&K#0s'bnKrbqdb
rd"Kurdk&jrbqgCrE0(hrC6]Dn,WFjrWE-.rX/WDrYPP=rWW<&nc8Y:s!.J%s#0gKs%*,rra,SBrbh^_
rd4NXs&].tq`F^%s!.Xk+X-e>s"OC<s$-K]r_NN$ra5YBrbML<r`T7mrC6Z<r#bo6s%*)ls&K#0s'bnK
rbqdbrd"Kurdk&jrbqgCrE/qdr&=6Jr;cg"rWE-.rX/WDrYPP=rWW<&nc8Y:s!.J%s#0gKs%*,rra,SB
rbh^_rd4NXs&].tq`F^%rZqLerA+C,rBgNKr_rel!+>h7ra5YBrbML<r`T7mrC6Z<r#bo6s%*)ls&K#0
s'bnKrbqdbrd"Kurdk&jrbqgCrE/qdr&=*FrWN3&rXAc5rYthQrWiE+rrMZjr[7^jrAag8rCd/]ra5Y2
rbqdRrd=]lqeQ45rDWSTr$D=fruq=rs"OC<s$-K]r_NN$ra5YBrbML<r`T7mr^HlWq_7pir_NPbrEB5$
rFZ(<rcJ-XrdOilreLK(rcJ-Xs'GY+qaUKBn,WFjrWE-.rX/WDrYPP=rWW<&o)Jajr[7^jrAag8rCd/]
ra5Y2rb21Aqdf\8s&].tq`F^%rZqLerA+C,rBgNKr_relr`]2$qc<\ps%3/Yq_7pir_NPbrE92$!*/u0
s'bnKrbqd]qfM^Prb;C=rE/qdr&=*FrWN3&rWi<)qZQm"rrMZjr[7^jrAag8rCd/]ra,Y3s'G\<qe,e:
raPn/rDW_XrAsa"ruq=rs"OC<s$-K]r_NMsqcN_rr_rhgrC6f@r@e'ir_NPbrEB5$rFZ(<rcJ-Xrd"B_
qec=Hs'GY+s$lrTr&!mCrWN3&rWi<)qZQm"rrMZjr[7^jrAag8rCd/]ra5Y2rb21Aqdf\8s&].ts#^0?
q'>t`rA+C,rBgNKr_relr`]2$qc<\ps%3/Ys"OC)r#Yi5s%*)ls&K#0s'bnKrbqd]qfM^Prb;C=rE0(h
rBpWBrA=!DrWN3&rWi<)qZQm"rrMZjr[7^jrAag8rCd/]ra5Y2rb21Aqdf\8s&].ts#^0?q'>t`s"aU0
s"OC<s$-K]r_NMsqcN_rr_rhgrC6f@r@e'ir_NPbrEB5$rFZ(<rcJ-Xrd"B_qec=Hs'GY+s$lrTr&!mC
!!N<)rWE-)qZcp#rW<*#nc8Y:s!.J%s#0gKs%*,rra,S;qe,e:raPn/rDW_XrAsa"ruq=rs"OC<s$-K]
r_NMsr`K/%qc<\ps%3/Ys"OC)r#Yi5s%*)ls&K#0s'bnKrbqd]qfM^Prb;C=rE0(hrC$Q?n,WFjrWE-)
qZcp#rrN6'!<M`kr[7^jrAag8rCd/]ra5Y2rb21Aqdf\8s&].ts#^0?q'>t`rA+C,rBgNKr_relr`]2$
qc<\ps%3/Ys"OI+s"F9kr_NPbrEB5$rFZ(<rcJ-Xrd"B_qec=Hs'GY+s$lrTr&!mCrWN3&rWi<)qZQm"
rrMZjr[7^jrAag8rCd/]r`/hmqbR)`r(?oYs#^0?q'>t`rA+C,rBgNKr^coUqaC<Ir'('?s"OC)r#Yi5
s%*)ls&K#0s'bnAqdoY3qcittrD<M`rC$Q?n,WFggAq4#s!.J%s#0gKs%*,hs&&_lqbR)`r(?oYs#^0?
q'>t`rA+C,rBgNKr^coUqaC<Ir'('?s"OC(r#Pc4s%*)ls&K#0s'bnAqdoY3!*fA*r)EVks$lrSr%mgB
rW1aRr[7^jrAag8rCd/]r`/hmqbR)`r(6r[r^d&NrAsa"ruq=rs"OC<s$-KRqaUHNqa(-DrAss4r@\!g
r_NPbrEB5$rFZ(<rbD=Aqd95)r)EVks$lrSs"jX1n,WFggAq4#s!.J%s#0gKs%*,hqbd5dqb?u\rCHrM
rAsa"ruq@s!\uG`rBgNKr^coUqaC<Ir'('?s"OC(r#Pc4s%*)ls&K#0s'bnAqdoY3qcittrD<M`rBpK=
n,WIh!!1gSr[7^jrAag8rCd/]r`/hmqbR)`r(?oYs#^0?q'>t`rA+C,rBgNKr^coUrC$ZRqa(-DrAss4
r@\!gr_NPbrEB5$rFZ(<rbD=Aqd95)r)EVks$lrSr%mgBrW2?cn,WG8s!.J%s#0gKs%*,hqbd5dqb?u\
rCHrMrAsa"ruq=rs"OC<s$-KRqaUHNqa(-DrAss4r[n1'r#Pc4s%*)ls&K#0s'bnAqdoY3qcittrD<M`
rBpK=n,WFggAq4#s!.J%s#0gKs%*,hqbd5dqb?u\rCHrMrAsa"ruq=rs"OC<s$-KRqaUHNqa(-DrAss4
r@\!gr_NPbrEB5$rFQ%<!+GkAqdoY3qcittrD<M`rBpK=n,WFggAq4#s!.J%s#0g;r&=L1!&FI-q_7q"
q^VOkr$21druq=rs"OC.r%e.%q^_Olr$M:cr?2"Xr_NPbrEB5$rE/trqbI#ZqaC?Gq`4U4r%Z4lr[7^j
rAag8rB'p9q_e7+q_7q"q^VOkr$21druq=rs"OC.r%e.%q^_Olr$M:cr?2"Xr_NPbrEB5$rE/trqbI#Z
qaC?Gq`4U4r%\3OaT2;fs!.J%s#0g;r&=L1q_J%&r%7dqr?hFerZqLerA+C,s"sa4r%e.%q^_Olr$M:c
r?2"Xr_NPbrEB5$rE/trqbI#ZqaC?Gq`4U4r%[F9hZ3X's!.J%s#0g;r&=L1q_J%&r%7dqr?hFerZqLe
rA+C,rA=F-q_%arr[@aor$M:cr?2"Xr_NPbrEB5$rE/trqbI#ZqaC?Gq`4U4r%ZY#o`0L~>

%%EndBinary
grestore
np
grestore
grestore
grestore
17.0518 107.56 mo
20.7408 110.78 25.1678 113.12 29.9748 114.39 cv
30.2498 114.5 li
30.2498 113.75 li
29.9748 113.52 li
25.2118 112.15 20.8068 109.82 17.0518 106.69 cv
16.7498 107 li
16.7498 107.75 li
cp
1 /3 /CSD get_res sepcs
1 sep
ef
16.75 106.25 mo
16.75 109.25 li
17.052 109.42 li
20.807 112.55 25.212 114.88 29.975 116.25 cv
1 /3 /CSD get_res sepcs
0 sep
@
30.25 116 mo
30.25 113 li
29.975 112.9 li
25.225 111.5 20.826 109.17 17.052 106.07 cv
1 /3 /CSD get_res sepcs
1 sep
@
370.51 85.2998 mo
367.59 85.2998 367.59 88.1199 367.75 88.2498 cv
367.75 128.75 li
367.59 129 li
367.59 131.82 370.51 131.82 370.75 131.75 cv
389.5 131.75 li
389.45 131.82 li
389.45 131.82 392.37 131.82 392.5 128.75 cv
392.5 88.2498 li
392.37 88.1199 li
392.37 88.1199 392.37 85.2998 389.5 85.2498 cv
370.75 85.2498 li
370.51 85.2998 li
1 /3 /CSD get_res sepcs
.498 sep
ef
371.05 85.8902 mo
368.3 85.8902 368.3 88.6401 368.5 89.0001 cv
368.5 128.75 li
368.3 128.49 li
368.3 131.23 371.05 131.23 370.75 131 cv
388.75 131 li
388.91 131.23 li
388.91 131.23 391.66 131.23 391.75 128.75 cv
391.75 89.0001 li
391.66 88.6401 li
391.66 88.6401 391.66 85.8902 388.75 86.0001 cv
370.75 86.0001 li
371.05 85.8902 li
.772549 .690639 .638117 .874083 cmyk
ef
389.509 110.462 mo
384.337 105.628 378.898 99.8656 374.359 93.4908 cv
389.509 93.4908 li
389.509 110.462 li
.726864 .653651 .625391 .672786 cmyk
f
gsave
368.509 124.991 mo
391.241 124.991 li
391.241 91.859 li
368.509 91.859 li
368.509 124.991 li
clp
390.991 111.829 mo
390.745 111.605 390.498 111.379 390.25 111.15 cv
390.25 92.7498 li
390.5 92.7398 li
390.36 92.5998 li
390.25 92.7498 li
373.837 92.7498 li
373.666 92.5036 373.496 92.2567 373.327 92.0088 cv
389.874 92.0088 li
389.984 91.859 li
390.667 91.859 li
391.024 92.2159 li
390.815 92.7498 li
390.991 92.7498 li
390.991 111.829 li
.755184 .678523 .652827 .896788 cmyk
f
390.25 111.15 mo
390.004 110.923 389.756 110.693 389.509 110.462 cv
389.509 93.4908 li
374.359 93.4908 li
374.184 93.2452 374.009 92.9972 373.837 92.7498 cv
390.25 92.7498 li
390.25 111.15 li
390.25 92.7498 mo
390.36 92.5998 li
390.5 92.7398 li
390.25 92.7498 li
.753017 .681971 .650111 .895415 cmyk
f
grestore
382.481 89.9598 mo
382.62 89.8197 li
382.749 89.7502 li
382.749 89.7502 li
382.481 89.9598 li
377.481 89.9598 mo
377.34 89.8197 li
377.5 89.7498 li
377.481 89.9598 li
382.745 89.7498 mo
382.418 89.7498 li
382.45 89.7202 li
382.745 89.7498 li
377.542 89.7498 mo
377.5 89.7498 li
377.51 89.7202 li
377.542 89.7498 li
377.5 89.7498 mo
377.5 89.7498 li
377.5 88.9998 li
377.34 88.9898 li
377.481 88.8498 li
377.5 88.9998 li
382.75 88.9998 li
382.75 89.0002 li
382.45 89.1903 li
382.31 89.0602 li
382 89.0002 li
377.5 89.0002 li
377.651 89.0602 li
377.51 89.1903 li
377.5 89.0002 li
377.5 89.7498 li
382.75 88.9998 mo
382.75 88.9998 li
382.75 88.9998 mo
382.62 88.9898 li
382.481 88.8498 li
382.75 88.9998 li
.755184 .678523 .652827 .896788 cmyk
f
382.31 89.8502 mo
382 89.7502 li
377.542 89.7502 li
377.542 89.7498 li
382.418 89.7498 li
382.31 89.8502 li
377.651 89.8502 mo
377.5 89.7502 li
377.542 89.7502 li
377.651 89.8502 li
382.75 89.7502 mo
382.749 89.7502 li
382.75 89.7498 li
382.75 89.0002 li
382.75 89.7502 li
377.5 89.7502 mo
377.5 89.7498 li
377.5 89.7502 li
382.749 89.7502 mo
382.745 89.7498 li
382.75 89.7498 li
382.749 89.7502 li
.639826 .554559 .535454 .286717 cmyk
f
382.749 89.7502 mo
382.749 89.7502 li
382.75 89.7498 li
382.749 89.7502 li
382.75 89.7498 mo
382.75 89.7498 li
382.745 89.7498 li
382.45 89.7202 li
382.418 89.7498 li
377.542 89.7498 li
377.51 89.7202 li
377.5 89.7498 li
377.5 89.7498 li
377.5 89.0002 li
377.51 89.1903 li
377.651 89.0602 li
377.5 89.0002 li
382 89.0002 li
382.31 89.0602 li
382.45 89.1903 li
382.75 89.0002 li
382.75 89.7498 li
.658503 .585779 .561517 .366857 cmyk
f
gsave
369.25 85.25 mo
369.269 85.52 li
369.23 85.5399 369.191 85.55 369.25 85.25 cv
369.15 85.561 li
369.031 85.62 368.92 85.68 368.5 86 cv
368.82 85.741 li
368.726 85.8059 368.633 85.871 368.522 85.978 cv
368.5 86 li
368.522 85.978 li
368.54 85.96 li
368.45 86.029 368.37 86.109 368.5 86 cv
368.3 86.2 li
368.23 86.28 368.17 86.36 367.75 86.75 cv
368.11 86.451 li
368.05 86.54 368 86.63 367.75 86.75 cv
367.951 86.71 li
367.861 86.89 367.79 87.07 367.75 87.5 cv
367.639 87.6799 li
367.59 87.95 367.59 88.12 367.75 88.25 cv
367.75 128.75 li
367.59 129 li
367.59 129.18 367.6 129.35 367.75 129.5 cv
367.62 129.5 li
367.639 129.661 367.68 129.8 367.75 130.25 cv
367.719 129.939 li
367.76 130.07 367.799 130.19 367.75 130.25 cv
367.861 130.31 li
367.91 130.43 367.98 130.54 367.75 131 cv
368.05 130.64 li
368.11 130.73 368.19 130.82 368.5 131 cv
368.509 131.14 li
368.599 131.2 368.69 131.27 368.5 131 cv
368.78 131.32 li
368.87 131.38 368.96 131.43 369.25 131.75 cv
369.049 131.47 li
369.23 131.56 369.41 131.63 369.25 131.75 cv
369.581 131.68 li
369.75 131.73 369.91 131.76 370 131.75 cv
370.049 131.78 li
370.32 131.82 370.51 131.82 370.75 131.75 cv
389.5 131.75 li
389.45 131.82 li
389.45 131.82 389.64 131.82 390.25 131.75 cv
389.91 131.78 li
390.05 131.76 390.21 131.73 390.25 131.75 cv
390.379 131.68 li
390.55 131.63 390.73 131.56 391 131.75 cv
390.91 131.47 li
391 131.43 391.09 131.38 391 131 cv
391.18 131.32 li
391.27 131.27 391.361 131.2 391.75 131 cv
391.451 131.14 li
391.531 131.07 391.62 130.99 391.75 131 cv
391.691 130.911 li
391.769 130.82 391.849 130.73 391.75 131 cv
391.91 130.64 li
391.981 130.54 392.04 130.43 391.75 130.25 cv
392.099 130.31 li
392.16 130.19 392.2 130.07 392.5 130.25 cv
392.24 129.939 li
392.28 129.8 392.32 129.661 392.5 129.5 cv
392.34 129.5 li
392.36 129.35 392.37 129.18 392.5 128.75 cv
392.5 113 li
392.37 113.07 li
384.31 105.9 375 96.189 369.25 85.25 cv
367.75 87.5 mo
367.74 87.2299 li
367.69 87.4 367.66 87.549 367.75 87.5 cv
368.5 131 mo
368.26 130.911 li
368.5 131 li
clp
gsave
366.84 132.57 mo
393.118 132.57 li
393.118 84.768 li
366.84 84.768 li
366.84 132.57 li
eclp
gsave
366.84 132.57 mo
393.119 132.57 li
393.119 84.767 li
366.84 84.767 li
366.84 132.57 li
clp
389.45 131.82 mo
389.45 131.82 li
389.472 131.82 390.246 131.814 391.01 131.391 cv
390.985 131.435 390.948 131.453 390.91 131.47 cv
391 131.75 li
390.865 131.655 390.753 131.625 390.652 131.625 cv
390.552 131.625 390.464 131.655 390.379 131.68 cv
390.25 131.75 li
390.25 131.75 li
389.64 131.82 389.45 131.82 389.45 131.82 cv
390.204 131.743 mo
390.137 131.743 390.017 131.765 389.91 131.78 cv
390.25 131.75 li
390.241 131.745 390.225 131.743 390.204 131.743 cv
370.364 131.807 mo
370.267 131.807 370.166 131.797 370.049 131.78 cv
370 131.75 li
369.988 131.751 369.976 131.752 369.962 131.752 cv
369.868 131.752 369.728 131.724 369.581 131.68 cv
369.25 131.75 li
369.41 131.63 369.23 131.56 369.049 131.47 cv
369.25 131.75 li
368.96 131.43 368.87 131.38 368.78 131.32 cv
368.745 131.28 li
369.39 131.682 370.138 131.768 370.517 131.768 cv
370.635 131.768 370.717 131.759 370.75 131.75 cv
389.5 131.75 li
389.5 131.75 li
370.75 131.75 li
370.613 131.79 370.493 131.807 370.364 131.807 cv
391.18 131.32 mo
391.167 131.298 li
391.457 131.114 391.737 130.865 391.966 130.529 cv
391.958 130.569 391.935 130.605 391.91 130.64 cv
391.75 131 li
391.799 130.865 391.804 130.82 391.787 130.82 cv
391.77 130.82 391.73 130.865 391.691 130.911 cv
391.75 131 li
391.743 130.999 391.735 130.999 391.728 130.999 cv
391.61 130.999 391.526 131.074 391.451 131.14 cv
391.75 131 li
391.361 131.2 391.27 131.27 391.18 131.32 cv
368.605 131.195 mo
368.589 131.195 368.549 131.167 368.509 131.14 cv
368.507 131.113 li
368.541 131.14 368.576 131.166 368.611 131.191 cv
368.61 131.194 368.608 131.195 368.605 131.195 cv
367.75 131 mo
367.98 130.54 367.91 130.43 367.861 130.31 cv
367.75 130.25 li
367.79 130.201 367.772 130.114 367.742 130.013 cv
367.838 130.302 367.976 130.546 368.14 130.749 cv
368.099 130.709 368.073 130.675 368.05 130.64 cv
367.75 131 li
392.5 130.25 mo
392.39 130.184 392.315 130.158 392.261 130.158 cv
392.202 130.158 392.169 130.188 392.142 130.229 cv
392.185 130.145 392.225 130.057 392.261 129.964 cv
392.5 130.25 li
367.75 130.25 mo
367.68 129.8 367.639 129.661 367.62 129.5 cv
367.623 129.5 li
367.645 129.658 367.678 129.805 367.719 129.942 cv
367.75 130.25 li
392.365 129.65 mo
392.378 129.601 392.391 129.551 392.402 129.5 cv
392.5 129.5 li
392.442 129.552 392.398 129.601 392.365 129.65 cv
392.5 128.751 mo
392.5 128.75 392.5 128.75 392.5 128.75 cv
392.5 113 li
392.5 113 li
392.5 128.75 li
392.5 128.75 392.5 128.751 392.5 128.751 cv
367.75 88.2498 mo
367.59 88.1198 367.59 87.9499 367.639 87.6799 cv
367.726 87.539 li
367.667 87.9215 367.701 88.2103 367.75 88.2498 cv
367.75 88.2498 li
367.72 87.5095 mo
367.668 87.5095 367.697 87.3776 367.74 87.2299 cv
367.747 87.4188 li
367.741 87.449 367.736 87.4787 367.731 87.508 cv
367.727 87.509 367.724 87.5095 367.72 87.5095 cv
367.774 87.2961 mo
367.815 87.0071 367.877 86.8586 367.951 86.71 cv
367.75 86.75 li
368 86.63 368.05 86.54 368.11 86.451 cv
367.75 86.75 li
368.17 86.36 368.23 86.28 368.3 86.2 cv
368.38 86.1201 li
368.047 86.4848 367.865 86.9166 367.774 87.2961 cv
368.432 86.0536 mo
368.428 86.0536 368.482 86.0045 368.54 85.96 cv
368.529 85.9706 li
368.514 85.9851 368.498 85.9997 368.483 86.0144 cv
368.449 86.0424 368.434 86.0536 368.432 86.0536 cv
368.537 85.964 mo
368.641 85.8652 368.73 85.8031 368.82 85.741 cv
368.791 85.7648 li
368.699 85.827 368.614 85.8936 368.537 85.964 cv
369.077 85.5986 mo
369.103 85.5847 369.126 85.5728 369.15 85.561 cv
369.25 85.25 li
369.209 85.4585 369.215 85.5172 369.236 85.527 cv
369.181 85.5495 369.128 85.5734 369.077 85.5986 cv
369.269 85.5139 mo
369.25 85.25 li
369.29 85.3255 369.33 85.4011 369.37 85.4764 cv
369.335 85.4884 369.302 85.5009 369.269 85.5139 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[27.662 0 0 -49.1688 366.84 188.599 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMtSn.Fa^h>m$W_>s6@r"6dGn.F7Pli?Me_>sQIo-O/3b5hMRo-MKYq>gL,o-M6RrXn`Jl2]K;
rXo/VofBqirXo/Vs#Tm8_>sQIs!@>!g]6L;rXo/VofBqirXo/VofE$O`W5uMs!@Y*peK*7o`4t's!@Y*
peJ[+rXo/Vr]9gLmf:i;rXo/Vr]9gL_>sTJ!YH_)r]9gL_>sQIs!@Y*s%`E#i;hj;rXo/Vr]:'SqI@AB
rXo/Vr]:'SqdTV9_>sQIs!@Y*s%`E#dfAk;rXo/Vr]:'SqI@ABrXo/Vr]:'SraYnOoDm2;rXo/Vr]:'S
raYnO`;ol;rXo/Vr]:'SraYnO_>sQIs!@Y*s%`Q'rHRH)h#REds!@Y*s%`Q's*4R'_>sQIs!@Y*!_uL#
s'u(Rs,FkqrXo/Vr]:'SraYtQs,DO~>

%%EndBinary
grestore
np
389.45 131.82 mo
389.5 131.75 li
389.5 131.75 li
370.75 131.75 li
370.717 131.759 370.635 131.768 370.517 131.768 cv
370.138 131.768 369.39 131.682 368.745 131.28 cv
368.5 131 li
368.587 131.124 368.615 131.177 368.611 131.191 cv
368.576 131.166 368.541 131.14 368.507 131.113 cv
368.5 131 li
368.5 131 li
368.309 130.889 368.206 130.813 368.14 130.749 cv
367.976 130.546 367.838 130.302 367.742 130.013 cv
367.735 129.989 367.727 129.964 367.719 129.939 cv
367.719 129.942 li
367.678 129.805 367.645 129.658 367.623 129.5 cv
367.75 129.5 li
367.6 129.35 367.59 129.18 367.59 129 cv
367.75 128.75 li
367.75 88.25 li
367.75 88.2499 367.75 88.2499 367.75 88.2498 cv
367.75 88.2498 li
367.701 88.2103 367.667 87.9215 367.726 87.539 cv
367.75 87.5 li
367.743 87.5039 367.737 87.5065 367.731 87.508 cv
367.736 87.4787 367.741 87.449 367.747 87.4188 cv
367.75 87.5 li
367.757 87.4248 367.765 87.3573 367.774 87.2961 cv
367.865 86.9166 368.047 86.4848 368.38 86.1201 cv
368.5 86 li
368.494 86.0052 368.488 86.01 368.483 86.0144 cv
368.498 85.9997 368.514 85.9851 368.529 85.9706 cv
368.522 85.978 li
368.527 85.9732 368.532 85.9686 368.537 85.964 cv
368.614 85.8936 368.699 85.827 368.791 85.7648 cv
368.5 86 li
368.836 85.744 368.974 85.6544 369.077 85.5986 cv
369.128 85.5734 369.181 85.5495 369.236 85.527 cv
369.238 85.5281 369.241 85.5285 369.244 85.5285 cv
369.251 85.5285 369.26 85.5245 369.269 85.52 cv
369.269 85.5139 li
369.302 85.5009 369.335 85.4884 369.37 85.4764 cv
369.492 85.7064 369.615 85.9348 369.74 86.1637 cv
368.307 86.8682 368.339 88.7101 368.5 89.0001 cv
368.5 128.75 li
368.3 128.49 li
368.3 130.615 369.953 131.092 370.556 131.092 cv
370.731 131.092 370.817 131.052 370.75 131 cv
388.75 131 li
388.91 131.23 li
388.91 131.23 391.66 131.23 391.75 128.75 cv
391.75 112.515 li
391.957 112.702 392.164 112.887 392.37 113.07 cv
392.5 113 li
392.5 128.75 li
392.5 128.75 392.5 128.75 392.5 128.751 cv
392.37 129.18 392.36 129.35 392.34 129.5 cv
392.402 129.5 li
392.391 129.551 392.378 129.601 392.365 129.65 cv
392.294 129.751 392.267 129.845 392.24 129.939 cv
392.261 129.964 li
392.225 130.057 392.185 130.145 392.142 130.229 cv
392.127 130.253 392.113 130.282 392.099 130.31 cv
391.75 130.25 li
391.938 130.367 391.979 130.454 391.966 130.529 cv
391.737 130.865 391.457 131.114 391.167 131.298 cv
391 131 li
391.052 131.221 391.044 131.331 391.01 131.391 cv
390.246 131.814 389.472 131.82 389.45 131.82 cv
368.5 86 mo
368.5 86 li
368.5 86 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[27.662 0 0 -47.803 366.84 187.233 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 35 
/M[20 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;o:ldK&n>m?bclm?dDEdfAd%`;fn)m[(lmrg3,LjT+6>rg3,L`;on(oqVG[`;on(n>"S8mf<?Rn>!r&
rg3VZo<%cfc2dj1rhK(eaT28>rg3VZo<#t3rg3VZo<%9Xg]7>?rhKLqos_m?rg3VZs/l=1pUA*Arg3VZ
s/kt'g]6U>rg3VZs/kt'`;on(rhKLqosal"aT2=,rhKLqrjV[<c2dV>rg3VZs/l:0pqXiKrg3VZs/l:0
pqZ=uf)Yf:rhKLqrjV[<`;on(s.]XjXf_T3pqXiKrg3VZs/l:0s1nKRi;hs>rg3VZs/l:0s1nKR`;on(
rhKLqrjVpCqoSo]`;on(rhKLqrjVpCqT@7eo)ScVrhKLqrjVpCqT?bWrg3VZs/l:0s1nWVrR1<<dK'95
rhKLqrjVpCrlY2f`;on(rhKLqrjVpCrlY2f`;on(rhKLqrjVpCrlY2fjoF<>rg3VZs/l:0s1nWVs3gr$
`;on(rhKLqrjMsE^rl]"s3gr$J,~>

%%EndBinary
grestore
np
388.91 131.23 mo
388.75 131 li
370.75 131 li
370.817 131.052 370.731 131.092 370.556 131.092 cv
369.953 131.092 368.3 130.615 368.3 128.49 cv
368.5 128.75 li
368.5 89.0001 li
368.339 88.7101 368.307 86.8682 369.74 86.1637 cv
370.83 88.1572 372.036 90.1084 373.327 92.0088 cv
369.425 92.0088 li
369.425 91.9997 li
369.365 92.0025 li
369.308 91.9187 li
369.081 92.016 li
368.509 92.0432 li
368.509 123.762 li
368.673 123.965 li
368.884 124.225 li
368.908 124.256 li
368.936 124.284 li
368.972 124.32 li
369.25 124.991 li
390.794 124.991 li
390.957 124.472 li
391.012 124.295 li
391.241 124.067 li
391.241 123.461 li
391.034 123.246 li
390.991 123.201 li
390.991 111.829 li
391.245 112.06 391.498 112.289 391.75 112.515 cv
391.75 128.75 li
391.66 131.23 388.91 131.23 388.91 131.23 cv
378.718 129.592 mo
379.095 129.999 379.654 130.25 380.27 130.25 cv
380.5 130.25 li
380.961 130.25 381.421 130.041 381.783 129.697 cv
381.937 129.757 li
381.939 129.757 li
381.939 129.542 li
382.346 129.14 382.635 128.599 382.75 128 cv
382.75 128 li
382.715 127.827 382.666 127.658 382.602 127.496 cv
382.637 127.423 382.684 127.342 382.75 127.25 cv
382.548 127.37 li
382.141 126.461 381.286 125.79 380.27 125.79 cv
380.5 125.75 li
379.04 125.79 378.04 126.79 378.04 128.02 cv
378.04 128.02 li
378.04 128.633 378.288 129.188 378.718 129.592 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[26.2789 0 0 -47.803 366.84 187.233 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 35 
/M[19 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
m`"Uum\B4-m`"UuoV;;YmbdHOm]c,SmbdHOqQTXsm\B4-m`"Uum\B4-!6+uWn\kF2nZVAUrnm8)rl+EG
rikpro:u5Yrnm8)rl+EGrikprm\Bd=n_sJdn\kF2r3,gtm\Bd=n_sJdn\kF2nZVAUrnm8)s2=uWrl"HH
rilC*oWIVWrnm_6o]#khrl"HHrilC*oWIb[rM0ALro*M/rl+lToY^[4ribssm\Bd=ro*M/rl+lToY^[4
ric=(pTEqZrnm_6o]#khrl"HHrilC*oWIVWrnm_6o]#khrl"HHrilC*oWIVWrnm_6o]#khrl"HHrilC*
oWI_ZrhKJMro*M/rl+lToY^[4ribssm\Bd=ro*M/rl+lToY^[4ric:'poa%[rnm_6o]#khrl"`Pq8*'7
ric7&q5s@cq54/Kro*e7q;hOo!6"oUr58?HrilC*r3#jtp7qG\rnm_6r8RP5rl+lTr58?HrilC*r3#jt
p7qM^s/,eQro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/K
ro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOos24oUr58?HrilC*r3#jtp7qG\rnm_6r8RP5
rl+lTr58?HrilC*r3#jtp7qJ]!2fbQro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOorl"`P
q8*'7ric7&!3Q+"p7qG\rnm_6r8RP5rl+lTr58HKrkSN;ric7&r2ot$p7qP_rhTPNro*e7q;hOorl"`P
r5&BJrilC*r3#t"riYsir20Ihrnm_6r8RP5rl+lTr58HKrkSN;ric7&r2ot$p7qP_rhTPNro*e7q;hOo
rl"`Pr5&BJrilC*r3#t"riYsir20Ihrnm_6r8RP5rl+lTr58HK!l2UfrilC*r3$(%riH7)Y-%Dmr2'Ok
Uo+.Kro*e7qW%Y<rl+lTr58HK!l2UfrilC*r3#t"!j8].p7qP_!i2Whrnm_6r8RS6!9J_~>

%%EndBinary
grestore
np
380.5 130.25 mo
380.27 130.25 li
379.654 130.25 379.095 129.999 378.718 129.592 cv
379.126 129.975 379.698 130.22 380.375 130.247 cv
380.34 130.249 380.305 130.25 380.269 130.25 cv
380.5 130.25 li
380.5 130.25 li
380.458 130.25 380.417 130.249 380.375 130.247 cv
380.902 130.223 381.381 130.018 381.772 129.693 cv
381.783 129.697 li
381.421 130.041 380.961 130.25 380.5 130.25 cv
379.061 128.547 mo
378.623 128.269 378.318 127.824 378.25 127.25 cv
378.12 127.44 li
378.07 127.63 378.04 127.82 378.25 128 cv
378.04 128.02 li
378.04 128.02 li
378.04 128.02 li
378.04 126.79 379.04 125.79 380.5 125.75 cv
380.27 125.79 li
381.286 125.79 382.141 126.461 382.548 127.37 cv
382.43 127.44 li
382.335 127.742 382.161 128.015 381.939 128.233 cv
381.939 127.25 li
381.452 126.976 li
381.556 126.871 li
381.415 126.731 li
381.302 126.845 li
381.315 126.564 li
380.994 126.534 li
380.981 126.561 li
380.44 126.561 li
380.44 126.225 li
380.439 126.225 li
379.687 126.532 li
379.372 126.464 li
379.105 126.751 li
378.975 126.891 li
379.223 127.25 li
379.061 127.25 li
379.061 128.547 li
382.51 128.02 mo
382.51 127.869 382.493 127.723 382.602 127.496 cv
382.666 127.658 382.715 127.827 382.75 128 cv
382.51 128.02 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -6.829 376.522 147.625 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
378.718 129.592 mo
378.288 129.188 378.04 128.633 378.04 128.02 cv
378.25 128 li
378.145 128.624 378.342 129.186 378.718 129.592 cv
381.939 129.542 mo
381.939 129.535 li
382.284 129.137 382.51 128.604 382.51 128.02 cv
382.75 128 li
382.75 128 li
382.75 128 li
382.635 128.599 382.346 129.14 381.939 129.542 cv
382.602 127.496 mo
382.585 127.453 382.567 127.411 382.548 127.37 cv
382.75 127.25 li
382.684 127.342 382.637 127.423 382.602 127.496 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -5.4632 376.522 146.259 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!E~>
<~USFTZUSFTZUSFTZUSFTZUSFTZUSFTZ~>
<~S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>~>
<~P*1ukP*1ukP*1ukP*1ukP*1ukP*1uk~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.5 130.25 mo
380.269 130.25 li
380.305 130.25 380.34 130.249 380.375 130.247 cv
380.417 130.249 380.458 130.25 380.5 130.25 cv
380.375 130.247 mo
379.698 130.22 379.126 129.975 378.718 129.592 cv
378.342 129.186 378.145 128.624 378.25 128 cv
378.04 128.02 li
378.04 128.02 378.04 128.02 378.04 128.02 cv
378.25 128 li
378.04 127.82 378.07 127.63 378.12 127.44 cv
378.25 127.25 li
378.318 127.824 378.623 128.269 379.061 128.547 cv
379.061 128.75 li
379.405 128.75 li
378.975 129.149 li
379.457 129.668 li
379.913 129.44 li
381.047 129.44 li
381.076 129.494 li
381.194 129.468 li
381.772 129.693 li
381.381 130.018 380.902 130.223 380.375 130.247 cv
381.939 129.535 mo
381.939 128.233 li
382.161 128.015 382.335 127.742 382.43 127.44 cv
382.548 127.37 li
382.567 127.411 382.585 127.453 382.602 127.496 cv
382.493 127.723 382.51 127.869 382.51 128.02 cv
382.75 128 li
382.75 128 382.75 128 382.75 128 cv
382.51 128.02 li
382.51 128.604 382.284 129.137 381.939 129.535 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -5.4632 376.522 146.259 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~io8tWio8tWio8tWio8tWio8tWio8tW~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.561 128.061 mo
380.44 128.061 li
380.44 127.94 li
380.561 127.94 li
380.561 128.061 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.1493 0 0 -4.0974 379.288 146.259 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~r;?Kjr;?Kjqu~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.939 129.757 mo
381.937 129.757 li
381.783 129.697 li
381.821 129.662 381.858 129.624 381.893 129.586 cv
381.909 129.571 381.924 129.557 381.939 129.542 cv
381.939 129.757 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.1493 0 0 -4.0974 380.671 144.893 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~77BX677BX670~>
<~2)R6K2)R6K2#~>
<~2`EZS2`EZS2Z~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.783 129.697 mo
381.772 129.693 li
381.814 129.659 381.854 129.623 381.893 129.586 cv
381.858 129.624 381.821 129.662 381.783 129.697 cv
380.269 128.88 mo
379.82 128.88 379.401 128.764 379.061 128.547 cv
379.061 127.25 li
379.223 127.25 li
378.975 126.891 li
379.105 126.751 li
379.372 126.464 li
379.687 126.532 li
380.439 126.225 li
380.44 126.225 li
380.44 126.561 li
380.981 126.561 li
380.994 126.534 li
381.315 126.564 li
381.302 126.845 li
381.415 126.731 li
381.556 126.871 li
381.452 126.976 li
381.939 127.25 li
381.939 128.233 li
381.606 128.561 381.165 128.767 380.721 128.767 cv
380.647 128.767 380.573 128.762 380.5 128.75 cv
380.269 128.88 li
380.44 128.061 mo
380.561 128.061 li
380.561 127.94 li
380.44 127.94 li
380.44 128.061 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.5324 0 0 -6.829 377.905 147.625 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 5 
/M[4 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~<E3%!<E3%!<E3%!<E3%!A7T4]~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.893 129.586 mo
381.909 129.569 381.924 129.552 381.939 129.535 cv
381.939 129.542 li
381.924 129.557 381.909 129.571 381.893 129.586 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[4.1493 0 0 -4.0974 380.671 144.893 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~5s[e&5s[e&5l~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.772 129.693 mo
381.194 129.468 li
381.076 129.494 li
381.047 129.44 li
379.913 129.44 li
379.457 129.668 li
378.975 129.149 li
379.405 128.75 li
379.061 128.75 li
379.061 128.547 li
379.401 128.764 379.82 128.88 380.269 128.88 cv
380.5 128.75 li
380.573 128.762 380.647 128.767 380.721 128.767 cv
381.165 128.767 381.606 128.561 381.939 128.233 cv
381.939 129.535 li
381.924 129.552 381.909 129.569 381.893 129.586 cv
381.854 129.623 381.814 129.659 381.772 129.693 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.5324 0 0 -4.0974 377.905 144.893 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~6UO4.6UO4.6UO4.~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.509 123.509 mo
370.257 123.509 li
370.124 123.376 li
370.012 123.264 li
369.991 123.238 li
369.991 93.4908 li
374.359 93.4908 li
378.898 99.8656 384.337 105.628 389.509 110.462 cv
389.509 123.509 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[22.1296 0 0 -32.7792 368.223 180.404 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 24 
/M[16 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni
\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou
\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q
\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$
\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(
\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(
~>
<~Vl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukr
Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)
Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1
Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%
Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)
Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)
~>
<~T:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0R
T:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZ
T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^
T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukr
T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukr
T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukq
~>
<~XK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&Y
XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8
XK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.d
XK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?
XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_
XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
390.794 124.991 mo
369.25 124.991 li
368.972 124.32 li
368.936 124.284 li
368.908 124.256 li
368.884 124.225 li
368.673 123.965 li
368.509 123.762 li
368.509 92.0432 li
369.081 92.016 li
369.308 91.9187 li
369.365 92.0025 li
369.425 91.9997 li
369.425 92.0088 li
373.327 92.0088 li
373.496 92.2567 373.666 92.5036 373.837 92.7498 cv
369.25 92.7498 li
369.46 92.7398 li
369.6 92.5998 li
369.25 92.7498 li
369.25 123.5 li
369.46 123.76 li
369.6 123.9 li
369.25 124.25 li
390.25 124.25 li
390.36 123.9 li
390.5 123.76 li
390.25 123.5 li
390.25 111.15 li
390.498 111.379 390.745 111.605 390.991 111.829 cv
390.991 123.201 li
391.034 123.246 li
391.241 123.461 li
391.241 124.067 li
391.012 124.295 li
390.957 124.472 li
390.794 124.991 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[26.2789 0 0 -35.5108 366.84 181.77 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 26 
/M[19 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~_83t'^qdb$^qdb$^qdb$^qdb%_83q&^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$^qdb$^qmk'^qdb$
^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qdb%_83q&^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$
^qdb$^qmk'^qdb$^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qdb%_83q&^qdb$^qdb$^qdb$^qde&
_8*k%^qdb$^qdb$^qdb$^qmk'^qdb$^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qdb%_83q&^qdb$
^qdb$^qdb$^qde&_8*k%^qdb$^qdb$^qdb$^qmk'^qdb$^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$
^qdb%_83q&^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$^qdb$^qmk'^qdb$^qdb$^qd_"^V@Ou_83t'
^qdb$^qdb$^q[Y!^V@P"_83q&^qdb$^qdb$^V@Ou^V@V$_8*k%^qdb$^qdb#^V@Ou^VRb&^qdb$^qdb$
^qd_"^V@Ou_83t'^qdb$^qdb$^q[Y!^qdb%_83q&^qdb$^qdb$^V@P!^q]~>
<~Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\b/Y-+q1Xf\_-
Xf\_-Xf\_-Xfeh0Y-+q0Xf\_-Xf\_-Xf\_-Y-+q1Y-+n/Xf\_-Xf\_-Xf\_.Y-+q1Y-"h.Xf\_-Xf\_-
Xf\b/Y-+q1Xf\_-Xf\_-Xf\_-Xfeh0Xf\_-Xf\_-Xf\_-Xf\_-Y-+q0XfV~>
<~VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVPg>iVl-GjVl$>gVP^5fVP^5fVl-GjVl-GjVP^5fVP^5fVP^5gVl-Gj
Vl-GiVP^5fVP^5fVP^8hVl-GjVl-DhVP^5fVP^5fVPg>iVl-GjVl$>gVP^5fVP^5fVl-DhVP^5fVP^5f
VP^5fVP^5gVl$>gVP^5fVP^5fVP^5fVP^8hVP^5fVP^5fVP^5fVP^5fVPg>hVP^5fVP^5fVP^5fVP^5f
Vl-DhVP^5fVP^5fVP^5fVP^5gVl$>gVP^5fVP^5fVP^5fVP^8hVP^5fVPX~>
<~jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlH~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
390.25 124.25 mo
369.25 124.25 li
369.6 123.9 li
369.46 123.76 li
369.25 123.5 li
369.25 92.7498 li
373.837 92.7498 li
374.009 92.9972 374.184 93.2452 374.359 93.4908 cv
369.991 93.4908 li
369.991 123.238 li
370.012 123.264 li
370.124 123.376 li
370.257 123.509 li
389.509 123.509 li
389.509 110.462 li
389.756 110.693 390.004 110.923 390.25 111.15 cv
390.25 123.5 li
390.5 123.76 li
390.36 123.9 li
390.25 124.25 li
369.25 92.7498 mo
369.25 92.7498 li
369.6 92.5998 li
369.46 92.7398 li
369.25 92.7498 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[23.5127 0 0 -34.145 368.223 180.404 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^]~>
<~Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Xo~>
<~VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVl-GjVl-Gi
VP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GjVl$>gVP^5fVP^5gVl-GjVl-DhVP^5fVP^5fVl-Gj
Vl-GiVP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GjVl$>gVP^5fVP^5gVl-GjVl-DhVP^5fVP^5f
Vl-GjVl-GiVP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GiV>~>
<~jQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5LbjlPUcjlPUc
jlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5LbjlPUc
jlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5Lb
jlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUb
jQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUc
jlPUbjQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUc
jlPUcjlPUbjQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjT~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
370 123.5 mo
390.25 123.5 li
390.25 92.75 li
370 92.75 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
370.51 164.51 mo
367.59 164.51 367.59 167.33 367.75 167 cv
367.75 208.25 li
367.59 208.214 li
367.59 211.034 370.51 211.034 370.75 211.25 cv
389.5 211.25 li
389.45 211.034 li
389.45 211.034 392.37 211.034 392.5 208.25 cv
392.5 167 li
392.37 167.33 li
392.37 167.33 392.37 164.51 389.5 164.75 cv
370.75 164.75 li
370.51 164.51 li
1 /3 /CSD get_res sepcs
.498 sep
ef
371.05 165.1 mo
368.3 165.1 368.3 167.85 368.5 167.75 cv
368.5 207.5 li
368.3 207.697 li
368.3 210.445 371.05 210.445 370.75 210.5 cv
388.75 210.5 li
388.91 210.445 li
388.91 210.445 391.66 210.445 391.75 207.5 cv
391.75 167.75 li
391.66 167.85 li
391.66 167.85 391.66 165.1 388.75 164.75 cv
370.75 164.75 li
371.05 165.1 li
.772549 .690639 .638117 .874083 cmyk
ef
389.509 189.675 mo
384.179 184.694 378.564 178.742 373.944 172.241 cv
389.509 172.241 li
389.509 189.675 li
.726864 .653651 .625391 .672786 cmyk
f
gsave
368.509 203.863 mo
391.241 203.863 li
391.241 170.759 li
368.509 170.759 li
368.509 203.863 li
clp
390.991 191.042 mo
390.745 190.818 390.498 190.592 390.25 190.363 cv
390.25 172.25 li
390.5 171.95 li
390.36 171.81 li
390.25 171.5 li
373.423 171.5 li
373.252 171.253 373.083 171.007 372.915 170.759 cv
390.773 170.759 li
391.002 171.404 li
391.024 171.426 li
391.241 171.643 li
391.241 172.218 li
390.991 172.518 li
390.991 191.042 li
.755184 .678523 .652827 .896788 cmyk
f
390.25 190.363 mo
390.004 190.136 389.756 189.906 389.509 189.675 cv
389.509 172.241 li
373.944 172.241 li
373.769 171.995 373.595 171.747 373.423 171.5 cv
390.25 171.5 li
390.36 171.81 li
390.5 171.95 li
390.25 172.25 li
390.25 190.363 li
.753017 .681971 .650111 .895415 cmyk
f
grestore
382.75 169.25 mo
382.75 169.25 li
382.749 169.249 li
382.75 169.25 li
382.75 169.25 li
382.75 169.25 mo
377.5 169.25 li
377.5 168.5 li
377.34 168.2 li
377.481 168.059 li
377.5 167.75 li
382.75 167.75 li
382.481 168.059 li
382.62 168.2 li
382.749 168.5 li
382.45 168.401 li
382.31 168.27 li
382 168.5 li
377.5 168.5 li
377.651 168.27 li
377.51 168.401 li
377.5 168.5 li
377.5 169.25 li
382 169.25 li
382.31 169.06 li
382.45 168.93 li
382.581 169.07 li
382.481 169.17 li
382.75 169.25 li
377.5 169.25 mo
377.34 169.03 li
377.481 169.17 li
377.5 169.25 li
377.5 169.25 mo
377.5 169.25 li
377.51 168.93 li
377.651 169.06 li
377.5 169.25 li
.755184 .678523 .652827 .896788 cmyk
f
382.75 169.25 mo
382.75 169.25 li
382.75 168.5 li
382.749 168.5 li
382.75 168.5 li
382.75 169.25 li
382.749 169.249 mo
382.581 169.07 li
382.62 169.03 li
382.749 169.249 li
.639826 .554559 .535454 .286717 cmyk
f
382.75 169.25 mo
382.749 169.249 li
382.62 169.03 li
382.581 169.07 li
382.45 168.93 li
382.31 169.06 li
382 169.25 li
377.5 169.25 li
377.651 169.06 li
377.51 168.93 li
377.5 169.25 li
377.5 168.5 li
382 168.5 li
382.31 168.27 li
382.45 168.401 li
382.749 168.5 li
382.75 168.5 li
382.75 169.25 li
377.5 168.5 mo
377.51 168.401 li
377.651 168.27 li
377.5 168.5 li
.658503 .585779 .561517 .366857 cmyk
f
gsave
369.25 164.75 mo
369.15 164.77 li
369.031 164.83 368.92 164.89 368.5 164.75 cv
368.82 164.95 li
368.72 165.02 368.62 165.09 368.5 165.5 cv
368.54 165.17 li
368.45 165.24 368.37 165.32 368.5 165.5 cv
368.3 165.41 li
368.23 165.49 368.17 165.57 367.75 165.5 cv
368.11 165.66 li
368.059 165.735 368.016 165.81 367.857 166.074 cv
367.951 165.92 li
367.861 166.1 367.79 166.281 367.75 166.25 cv
367.74 166.441 li
367.69 166.61 367.66 166.759 367.75 167 cv
367.75 208.25 li
367.59 208.212 li
367.59 208.389 367.6 208.555 367.75 209 cv
367.719 209.145 li
367.76 209.28 367.799 209.404 367.75 209.75 cv
367.861 209.519 li
367.91 209.636 367.98 209.746 367.75 209.75 cv
368.05 209.845 li
368.11 209.944 368.19 210.034 368.5 209.75 cv
368.26 210.117 li
368.339 210.201 368.429 210.276 368.5 210.5 cv
368.509 210.345 li
368.599 210.414 368.69 210.476 368.5 210.5 cv
368.78 210.532 li
368.87 210.587 368.96 210.638 369.25 210.5 cv
369.049 210.681 li
369.23 210.769 369.41 210.836 369.25 211.25 cv
369.581 210.885 li
369.75 210.935 369.91 210.966 370 211.25 cv
370.049 210.989 li
370.32 211.033 370.51 211.034 370.75 211.25 cv
389.5 211.25 li
389.45 211.034 li
389.45 211.034 389.64 211.033 390.25 211.25 cv
389.91 210.989 li
390.05 210.966 390.21 210.935 390.25 211.25 cv
390.379 210.885 li
390.55 210.836 390.73 210.769 391 210.5 cv
390.91 210.681 li
391 210.5 li
391.18 210.532 li
391.27 210.476 391.361 210.414 391.75 210.5 cv
391.451 210.345 li
391.531 210.276 391.62 210.201 391.75 209.75 cv
391.691 210.117 li
391.769 210.034 391.849 209.944 391.75 209.75 cv
391.91 209.845 li
391.981 209.746 392.04 209.636 391.75 209.75 cv
392.099 209.519 li
392.16 209.404 392.2 209.28 392.5 209 cv
392.24 209.145 li
392.28 209.01 392.32 208.866 392.5 209 cv
392.34 208.711 li
392.36 208.555 392.37 208.389 392.5 208.25 cv
392.5 192.5 li
392.37 192.284 li
384.31 185.11 375 175.4 369.25 164.75 cv
369.269 164.731 li
369.25 164.75 li
367.75 166.25 mo
367.857 166.074 li
367.75 166.25 li
367.75 167 mo
367.639 166.89 li
367.59 167.16 367.59 167.33 367.75 167 cv
367.75 209 mo
367.62 208.711 li
367.639 208.866 367.68 209.01 367.75 209 cv
clp
gsave
366.84 211.784 mo
393.118 211.784 li
393.118 163.982 li
366.84 163.982 li
366.84 211.784 li
eclp
gsave
366.84 211.784 mo
393.119 211.784 li
393.119 163.981 li
366.84 163.981 li
366.84 211.784 li
clp
390.25 211.25 mo
390.25 211.25 li
389.64 211.033 389.45 211.034 389.45 211.034 cv
389.5 211.25 li
370.75 211.25 li
370.749 211.25 370.749 211.249 370.748 211.249 cv
370.749 211.249 370.749 211.249 370.75 211.25 cv
389.5 211.25 li
389.45 211.034 li
389.45 211.034 389.634 211.034 389.911 210.99 cv
390.25 211.25 li
390.221 211.023 390.13 210.976 390.029 210.976 cv
390.011 210.976 389.993 210.977 389.975 210.979 cv
390.097 210.958 390.233 210.928 390.378 210.888 cv
390.25 211.25 li
390.25 211.25 mo
390.25 211.25 li
390.25 211.25 li
370 211.25 mo
369.961 211.126 369.908 211.05 369.847 211 cv
369.913 211.019 369.976 211.036 370.037 211.052 cv
370 211.25 li
369.25 211.25 mo
369.359 210.967 369.31 210.846 369.21 210.77 cv
369.328 210.823 369.445 210.869 369.559 210.909 cv
369.25 211.25 li
368.767 210.531 mo
368.5 210.5 li
368.69 210.476 368.599 210.414 368.509 210.345 cv
368.5 210.5 li
368.429 210.276 368.339 210.201 368.26 210.117 cv
368.263 210.112 li
368.417 210.277 368.588 210.415 368.767 210.531 cv
391.75 210.5 mo
391.611 210.469 391.51 210.457 391.434 210.457 cv
391.385 210.457 391.346 210.462 391.314 210.47 cv
391.368 210.435 391.422 210.397 391.474 210.357 cv
391.75 210.5 li
368.048 209.844 mo
367.75 209.75 li
367.958 209.746 367.921 209.656 367.875 209.552 cv
367.927 209.656 367.985 209.754 368.048 209.844 cv
367.75 209.75 mo
367.787 209.486 367.774 209.351 367.747 209.242 cv
367.78 209.34 367.818 209.433 367.86 209.521 cv
367.75 209.75 li
392.331 209.17 mo
392.341 209.14 392.352 209.109 392.361 209.077 cv
392.5 209 li
392.431 209.064 392.376 209.121 392.331 209.17 cv
392.5 209 mo
392.459 208.97 392.426 208.954 392.398 208.948 cv
392.406 208.918 392.413 208.887 392.42 208.856 cv
392.5 209 li
367.646 208.856 mo
367.635 208.812 367.626 208.762 367.62 208.711 cv
367.624 208.72 li
367.631 208.766 367.638 208.812 367.646 208.856 cv
392.5 208.25 mo
392.5 208.25 392.5 208.25 392.5 208.25 cv
392.5 192.5 li
392.5 192.5 li
392.5 208.25 li
392.5 208.25 392.5 208.25 392.5 208.25 cv
367.737 208.247 mo
367.59 208.214 li
367.59 208.213 367.59 208.213 367.59 208.212 cv
367.737 208.247 li
367.629 167.182 mo
367.598 167.182 367.609 167.054 367.639 166.89 cv
367.697 166.948 li
367.701 166.998 367.712 167.027 367.725 167.027 cv
367.733 167.027 367.741 167.018 367.75 167 cv
367.75 167 li
367.687 167.129 367.649 167.182 367.629 167.182 cv
367.698 166.802 mo
367.68 166.666 367.705 166.558 367.74 166.441 cv
367.75 166.25 li
367.75 166.25 li
367.753 166.252 367.756 166.253 367.76 166.253 cv
367.801 166.253 367.868 166.086 367.951 165.92 cv
367.857 166.074 li
367.908 165.99 367.947 165.925 367.978 165.873 cv
367.789 166.234 367.714 166.584 367.698 166.802 cv
368.104 165.657 mo
367.75 165.5 li
367.863 165.519 367.95 165.527 368.019 165.527 cv
368.135 165.527 368.196 165.504 368.238 165.472 cv
368.19 165.533 368.145 165.595 368.104 165.657 cv
368.818 164.949 mo
368.5 164.75 li
368.69 164.813 368.817 164.836 368.91 164.836 cv
368.984 164.836 369.037 164.821 369.083 164.802 cv
368.989 164.847 368.901 164.896 368.818 164.949 cv
369.131 164.779 mo
369.138 164.776 369.144 164.773 369.15 164.77 cv
369.154 164.769 li
369.146 164.773 369.139 164.776 369.131 164.779 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[27.662 0 0 -49.1688 366.84 108.019 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&h>m$W_>s6@r"6dGn.F7Pli?Me_>s';p]/J;rXn`JaT2/;rXn`J_>sQIo-NZ%f`;!`o-M6R
rXo/Vs#Tm8_>sQIs!@>!g]6L;rXo/VofBqirXo/VofE$O`W5uMs!@>!c2dM;rXo/Vr]9gL_>sQIs!@Y*
peL8Xe,]I[s!@Y*peJ[+rt,;E,piOOpeJ[+rXo/Vr]9gLi;hj;rXo/Vr]:'SqI@ABrXo/Vr]:'SqdTV9
_>sQIs!@Y*s%`E#dfAk;rXo/Vr]:'SqI@ABrXo/Vr]:'SqIB-tcN*qVs!@Y*s%`Q'rHQ9]rW)p0s!@Y*
s%`Q'rHQ0ZrXo/Vr]:'SraYnOjoF3;rXo/Vr]:'SraYnO_>sQIs!@Y*!_uL#s'u(Rs,FkqrXo/Vr]:'S
raYtQs,DO~>

%%EndBinary
grestore
np
389.5 211.25 mo
370.75 211.25 li
370.749 211.249 370.749 211.249 370.748 211.249 cv
370.509 211.034 370.319 211.033 370.049 210.989 cv
370.037 211.052 li
369.976 211.036 369.913 211.019 369.847 211 cv
369.769 210.935 369.676 210.913 369.581 210.885 cv
369.559 210.909 li
369.445 210.869 369.328 210.823 369.21 210.77 cv
369.164 210.735 369.106 210.709 369.049 210.681 cv
369.25 210.5 li
369.112 210.566 369.019 210.589 368.95 210.589 cv
368.874 210.589 368.827 210.561 368.78 210.532 cv
368.767 210.531 li
368.588 210.415 368.417 210.277 368.263 210.112 cv
368.5 209.75 li
368.344 209.893 368.246 209.941 368.18 209.941 cv
368.115 209.941 368.08 209.894 368.05 209.845 cv
368.048 209.844 li
367.985 209.754 367.927 209.656 367.875 209.552 cv
367.87 209.541 367.866 209.53 367.861 209.519 cv
367.86 209.521 li
367.818 209.433 367.78 209.34 367.747 209.242 cv
367.738 209.208 367.729 209.177 367.719 209.145 cv
367.75 209 li
367.748 209 367.745 209.001 367.743 209.001 cv
367.7 209.001 367.668 208.94 367.646 208.856 cv
367.638 208.812 367.631 208.766 367.624 208.72 cv
367.75 209 li
367.601 208.557 367.59 208.39 367.59 208.214 cv
367.737 208.247 li
367.75 208.25 li
367.75 167 li
367.75 167 367.75 167 367.75 167 cv
367.75 167 li
367.741 167.018 367.733 167.027 367.725 167.027 cv
367.712 167.027 367.701 166.998 367.697 166.948 cv
367.75 167 li
367.723 166.926 367.706 166.861 367.698 166.802 cv
367.714 166.584 367.789 166.234 367.978 165.873 cv
368.044 165.762 368.075 165.711 368.11 165.66 cv
368.104 165.657 li
368.145 165.595 368.19 165.533 368.238 165.472 cv
368.263 165.453 368.281 165.432 368.3 165.41 cv
368.5 165.5 li
368.37 165.32 368.45 165.24 368.54 165.17 cv
368.5 165.5 li
368.62 165.09 368.72 165.02 368.82 164.95 cv
368.818 164.949 li
368.901 164.896 368.989 164.847 369.083 164.802 cv
369.1 164.795 369.116 164.787 369.131 164.779 cv
369.139 164.776 369.146 164.773 369.154 164.769 cv
369.25 164.75 li
369.373 164.977 369.497 165.204 369.623 165.43 cv
368.339 166.142 368.342 167.752 368.489 167.752 cv
368.493 167.752 368.496 167.751 368.5 167.75 cv
368.5 207.5 li
368.3 207.697 li
368.3 210.445 371.05 210.445 370.75 210.5 cv
388.75 210.5 li
388.91 210.445 li
388.91 210.445 391.66 210.445 391.75 207.5 cv
391.75 191.729 li
391.957 191.916 392.164 192.1 392.37 192.284 cv
392.5 192.5 li
392.5 208.25 li
392.5 208.25 392.5 208.25 392.5 208.25 cv
392.37 208.389 392.36 208.555 392.34 208.711 cv
392.42 208.856 li
392.413 208.887 392.406 208.918 392.398 208.948 cv
392.391 208.947 392.384 208.947 392.378 208.947 cv
392.297 208.947 392.269 209.048 392.24 209.145 cv
392.361 209.077 li
392.352 209.109 392.341 209.14 392.331 209.17 cv
392.181 209.337 392.146 209.43 392.099 209.519 cv
391.75 209.75 li
391.838 209.716 391.894 209.702 391.927 209.702 cv
392.003 209.702 391.959 209.776 391.91 209.845 cv
391.75 209.75 li
391.849 209.944 391.769 210.034 391.691 210.117 cv
391.75 209.75 li
391.62 210.201 391.531 210.276 391.451 210.345 cv
391.474 210.357 li
391.422 210.397 391.368 210.435 391.314 210.47 cv
391.255 210.484 391.217 210.509 391.18 210.532 cv
391 210.5 li
390.91 210.681 li
391 210.5 li
390.73 210.769 390.55 210.836 390.379 210.885 cv
390.378 210.888 li
390.233 210.928 390.097 210.958 389.975 210.979 cv
389.953 210.982 389.931 210.985 389.91 210.989 cv
389.911 210.99 li
389.634 211.034 389.45 211.034 389.45 211.034 cv
389.5 211.25 li
391.75 209.75 mo
391.75 209.75 li
391.75 209.75 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[27.662 0 0 -49.1688 366.84 108.019 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;o:ldK&n>m?bclm?dDEdfAd%`;fn)m[(lmm?co7i;ikDn>!r&rg3;Qr1h42rg3,Lf)Y7>rg3,L`;on(
n>#aYc2dj1rhK(eaT28>rg3VZo<#t3rg3VZo<%9Xg]7>?rhK(e`;on(rhKLqs0qa3`;on(rhKLqos`]V
l2^gMrhKLqos_m?rg3VZs/kt'r;aq>rg3VZs/kt'c2dV>rg3VZs/l:0pqXiKrg3VZs/l:0pqZ=uf)Yf:
rhKLqrjV[<`;on(s.]XjXf_T3pqXiKrg3VZs/l:0pqYhgjT,:HrhKLqrjVpCqT?bWrg3VZs/l:0s1nNS
!6W7\rg3VZs/l:0s1nKRdfAt>rg3VZs/l:0s1nKR`;on(rhKLqrjVpCqTAF1dK'95rhKLqrjVpCrlY2f
`;on(rhKLqrjVpCrlY2f`;on(rhKLqrjVpCrlY2fjoF<>rg3VZs/l:0s1nWVrR/Xbrg3VZs/l:0!l2Uo
s2tAis4YElrg3VZs/l:0s1nWVs3gr$J,~>

%%EndBinary
grestore
np
388.75 210.5 mo
370.75 210.5 li
371.05 210.445 368.3 210.445 368.3 207.697 cv
368.5 207.5 li
368.5 167.75 li
368.496 167.751 368.493 167.752 368.489 167.752 cv
368.342 167.752 368.339 166.142 369.623 165.43 cv
370.628 167.237 371.733 169.017 372.915 170.759 cv
369.25 170.759 li
369.034 171.328 li
368.89 171.472 li
368.853 171.525 li
368.509 172.016 li
368.509 203.862 li
369.195 203.758 li
369.383 203.815 li
369.428 203.741 li
389.509 203.741 li
389.509 203.842 li
389.989 203.78 li
390.075 203.863 li
390.65 203.863 li
390.882 203.633 li
391.022 203.494 li
390.781 203 li
390.991 203 li
390.991 191.042 li
391.245 191.274 391.498 191.503 391.75 191.729 cv
391.75 207.5 li
391.66 210.445 388.91 210.445 388.91 210.445 cv
388.75 210.5 li
380.5 209.75 mo
380.5 209.75 li
381.005 209.606 381.508 209.284 381.884 208.844 cv
382.32 208.473 382.63 207.982 382.75 207.5 cv
382.75 207.5 li
382.713 207.269 382.658 207.05 382.587 206.845 cv
382.623 206.807 382.675 206.774 382.75 206.75 cv
382.526 206.682 li
382.11 205.645 381.268 204.998 380.27 204.998 cv
380.5 205.25 li
380.346 205.224 380.197 205.211 380.054 205.211 cv
378.84 205.211 378.04 206.128 378.04 207.231 cv
378.04 207.231 li
378.04 207.753 378.219 208.233 378.537 208.634 cv
378.589 208.703 378.647 208.769 378.71 208.832 cv
379.143 209.279 379.763 209.605 380.5 209.75 cv
380.463 209.704 mo
380.269 209.463 li
380.27 209.463 380.27 209.463 380.271 209.463 cv
380.463 209.704 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[26.2789 0 0 -47.803 366.84 108.019 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 35 
/M[19 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
m`"Uum\B4-m`"UuoV;;YmbdHOm]c,SmbdHOqQTXsm\B4-m`"Uum\B4-!6+uWn\kF2nZVAUrnm8)rl+EG
rikpro:u5Yrnm8)rl+EGrikprm\Bd=n_sJdn\kF2r3,gtm\Bd=n_sJdn\kF2nZVAUrnm8)s2=uWrl"HH
rilC*oWIVWrnm_6o]#khrl"HHrilC*oWIb[rM0ALro*M/rl+lToY^[4ribssm\Bd=ro*M/rl+lToY^[4
ric=(pTEqZrnm_6o]#khrl"HHrilC*oWIVWrnm_6o]#khrl"HHrilC*oWIVWrnm_6o]#khrl"HHrilC*
oWI_ZrhKJMro*M/rl+lToY^[4ribssm\Bd=ro*M/rl+lToY^[4ric:'poa%[rnm_6o]#khrl"`Pq8*'7
ric7&q5s@cq54/Kro*e7q;hOo!6"oUr58?HrilC*r3#jtp7qG\rnm_6r8RP5rl+lTr58?HrilC*r3#jt
p7qM^s/,eQro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/K
ro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOos24oUr58?HrilC*r3#jtp7qG\rnm_6r8RP5
rl+lTr58?HrilC*r3#jtp7qJ]!2fbQro*e7q;hOorl"`Pq8*'7ric7&q5s@cq54/Kro*e7q;hOorl"`P
q8*'7ric7&!3Q+"p7qG\rnm_6r8RP5rl+lTr58HKrkSN;ric7&r2ot$p7qP_rhTPNro*e7q;hOorl"`P
r5&BJrilC*r3#t"riYsir20Ihrnm_6r8RP5rl+lTr58HKrkSN;ric7&r2ot$p7qP_rhTPNro*e7q;hOo
rl"`Pr5&BJrilC*r3#t"riYsir20Ihrnm_6r8RP5rl+lTr58HK!l2UfrilC*r3$(%riH7)Y-%Dmr2'Ok
Uo+.Kro*e7qW%Y<rl+lTr58HK!l2UfrilC*r3#t"!j8].p7qP_!i2Whrnm_6r8RS6!9J_~>

%%EndBinary
grestore
np
380.5 209.75 mo
380.5 209.75 li
380.5 209.75 380.5 209.75 380.5 209.75 cv
380.5 209.75 li
380.5 209.75 li
380.463 209.704 li
380.271 209.463 li
380.89 209.463 381.449 209.213 381.884 208.844 cv
381.508 209.284 381.005 209.606 380.5 209.75 cv
378.71 208.832 mo
378.647 208.769 378.589 208.703 378.537 208.634 cv
378.59 208.702 378.648 208.768 378.71 208.832 cv
379.061 207.781 mo
378.623 207.533 378.318 207.16 378.25 206.75 cv
378.12 206.652 li
378.07 206.837 378.04 207.03 378.25 207.5 cv
378.04 207.23 li
378.04 207.231 378.04 207.231 378.04 207.231 cv
378.04 207.231 li
378.04 206.128 378.84 205.211 380.054 205.211 cv
380.197 205.211 380.346 205.224 380.5 205.25 cv
380.5 205.25 li
380.5 205.25 li
380.27 204.998 li
381.268 204.998 382.11 205.645 382.526 206.682 cv
382.43 206.652 li
382.335 206.953 382.161 207.225 381.939 207.457 cv
381.939 206.462 li
381.737 206.261 li
381.558 206.083 li
381.554 206.08 li
381.431 205.958 li
381.415 205.942 li
381.415 205.942 li
381.413 205.941 li
381.25 206.105 li
381.25 206.06 li
380.2 206.06 li
380.06 205.742 li
379.311 205.742 li
378.791 206.298 li
378.791 206.941 li
379.061 207.12 li
379.061 207.781 li
380.44 207.542 mo
380.44 207.439 li
380.545 207.439 li
380.44 207.542 li
382.75 207.5 mo
382.51 207.23 li
382.51 207.086 382.494 206.945 382.587 206.845 cv
382.658 207.05 382.713 207.269 382.75 207.5 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -8.1948 376.522 68.4106 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.5 209.75 mo
379.763 209.605 379.143 209.279 378.71 208.832 cv
379.087 209.207 379.649 209.462 380.27 209.462 cv
380.271 209.463 li
380.27 209.463 380.27 209.463 380.269 209.463 cv
380.463 209.704 li
380.5 209.75 li
381.884 208.844 mo
382.26 208.404 382.51 207.846 382.51 207.231 cv
382.75 207.5 li
382.75 207.5 li
382.75 207.5 382.75 207.5 382.75 207.5 cv
382.75 207.5 li
382.63 207.982 382.32 208.473 381.884 208.844 cv
378.537 208.634 mo
378.219 208.233 378.04 207.753 378.04 207.231 cv
378.25 207.5 li
378.163 207.896 378.282 208.298 378.537 208.634 cv
382.587 206.845 mo
382.568 206.79 382.548 206.735 382.526 206.682 cv
382.75 206.75 li
382.675 206.774 382.623 206.807 382.587 206.845 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -6.829 376.522 67.0448 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa0~>
<~USFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUS@~>
<~S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=B~>
<~P*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*,~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.5 209.75 mo
380.5 209.75 380.5 209.75 380.5 209.75 cv
380.463 209.704 li
380.5 209.75 li
380.271 209.463 mo
380.27 209.462 li
379.649 209.462 379.087 209.207 378.71 208.832 cv
378.648 208.768 378.59 208.702 378.537 208.634 cv
378.282 208.298 378.163 207.896 378.25 207.5 cv
378.04 207.231 li
378.04 207.231 378.04 207.231 378.04 207.23 cv
378.25 207.5 li
378.04 207.03 378.07 206.837 378.12 206.652 cv
378.25 206.75 li
378.318 207.16 378.623 207.533 379.061 207.781 cv
379.061 208.25 li
379.098 208.25 li
378.979 208.362 li
379.063 208.452 li
379.37 208.939 li
381.25 208.939 li
381.389 208.497 li
381.412 208.52 li
381.553 208.382 li
381.52 208.349 li
381.939 208.25 li
381.939 207.457 li
382.161 207.225 382.335 206.953 382.43 206.652 cv
382.526 206.682 li
382.548 206.735 382.568 206.79 382.587 206.845 cv
382.494 206.945 382.51 207.086 382.51 207.23 cv
382.75 207.5 li
382.75 207.5 382.75 207.5 382.75 207.5 cv
382.51 207.231 li
382.51 207.846 382.26 208.404 381.884 208.844 cv
381.449 209.213 380.89 209.463 380.271 209.463 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[8.2986 0 0 -6.829 376.522 67.0448 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~io8tWio8tWio8tWio8tWio8tWio8tWio8tWio0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.5 208.25 mo
380.269 208.089 li
379.82 208.089 379.401 207.973 379.061 207.781 cv
379.061 207.12 li
378.791 206.941 li
378.791 206.298 li
379.311 205.742 li
380.06 205.742 li
380.2 206.06 li
381.25 206.06 li
381.25 206.105 li
381.413 205.941 li
381.415 205.942 li
381.415 205.942 li
381.431 205.958 li
381.554 206.08 li
381.558 206.083 li
381.737 206.261 li
381.939 206.462 li
381.939 207.457 li
381.55 207.863 381.015 208.148 380.5 208.25 cv
380.44 207.439 mo
380.44 207.542 li
380.545 207.439 li
380.44 207.439 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.5324 0 0 -4.0974 377.905 67.0448 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~<E3%!<E3%!<E3%!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.25 208.939 mo
379.37 208.939 li
379.063 208.452 li
378.979 208.362 li
379.098 208.25 li
379.061 208.25 li
379.061 207.781 li
379.401 207.973 379.82 208.089 380.269 208.089 cv
380.5 208.25 li
381.015 208.148 381.55 207.863 381.939 207.457 cv
381.939 208.25 li
381.52 208.349 li
381.553 208.382 li
381.412 208.52 li
381.389 208.497 li
381.25 208.939 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[5.5324 0 0 -4.0974 377.905 65.679 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~6UO4.6UO4.6UO4.~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.509 202.259 mo
369.991 202.259 li
369.991 172.483 li
370.03 172.428 li
370.217 172.241 li
373.944 172.241 li
378.564 178.742 384.179 184.694 389.509 189.675 cv
389.509 202.259 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[22.1296 0 0 -32.7792 368.223 101.19 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 24 
/M[16 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni\[fAc]Y(ni]Y(ni]Y(ni
\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou\[fAc]YD4r^V@Ou^V@Ou
\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:q=q^:q=q
\[fAc]YD4q^:q=q^:q=q\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$
\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu^qdb$\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(
\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(\[fAc]YD4q^:qCu_83t(
~>
<~Vl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukrVl-MnWMukrWMukrWMukr
Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)Vl-MnWN<2&XK8M)XK8M)
Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+q1Y-+q1
Vl-MnWN<2(Y-+q1Y-+q1Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%
Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+X/i;%Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)
Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)Vl-MnWN<2(Y-+h+XK8M)
~>
<~T:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0RT:_gNTqS0RTqS0RTqS0R
T:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZT:_gNTqeBXUSFTZUSFTZ
T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjf^Unjf^
T:_gNTqeBYUnjf^Unjf^T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukr
T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukr
T:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukrT:_gNTqeBYUnjuhWMukq
~>
<~XK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&YXK8qA\@B&Y\@B&Y\@B&Y
XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8XK8qA\AcG+`Pog8`Pog8
XK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*U.dd*U.d
XK8qA\AcG6d*U.dd*U.dXK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?
XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'gt^]?XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_
XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_XK8qA\AcG6d*US'jQ,C_
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
390.65 203.863 mo
390.075 203.863 li
389.989 203.78 li
389.509 203.842 li
389.509 203.741 li
369.428 203.741 li
369.383 203.815 li
369.195 203.758 li
368.509 203.862 li
368.509 172.016 li
368.853 171.525 li
368.89 171.472 li
369.034 171.328 li
369.25 170.759 li
372.915 170.759 li
373.083 171.007 373.252 171.253 373.423 171.5 cv
369.25 171.5 li
369.6 171.81 li
369.46 171.95 li
369.25 172.25 li
369.25 203 li
369.6 203.107 li
369.492 203 li
390.25 203 li
390.36 203.107 li
390.5 202.968 li
390.25 203 li
390.25 190.363 li
390.498 190.592 390.745 190.818 390.991 191.042 cv
390.991 203 li
390.781 203 li
391.022 203.494 li
390.882 203.633 li
390.65 203.863 li
369.572 203.7 mo
369.572 203.7 li
369.547 203.541 mo
369.572 203.7 li
369.547 203.541 li
369.492 203 mo
369.25 203 li
369.46 202.968 li
369.492 203 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[24.8958 0 0 -35.5108 366.84 102.556 ]ct
snap_to_device
<<
/T 1
/W 18 
/H 26 
/M[18 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~_83t'^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qde&_8*k%^qdb$
^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qde&
_8*k%^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$^qdb$_83t'^qdb$^qdb$
^qdb$^qde&_8*k%^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$^qdb$_83t'
^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$^qdb$_83t'^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb$
^qdb$_83t'^qdb$^qdb$^qdb$^qde&_8*k%^qdb$^qdb#^V@Ou_83t'^qdb$^qdb$^q[Y!^V@V$_8*k%
^qdb$^qdb#^V@Ou_83t'^qdb$^qdb$^q[Y!^V@V$_8*k%^qdb$^qdb#^V@Ou_83t'^qdb$^qdb$^q[Y!
^qde&_8*k%^qdb$^qdb#^V@S"~>
<~Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_.Y-+q1Xf\_-Xf\_-Xf\_-Xfeh0Y-+n/Xf\_-
Xf\_-Xf\_.Y-+q1Xf\_-Xf\_-Xf\_-Xfeh0Y-+n/Xf\_-Xf\_-Xf\_.Y-+q1Xf\_-Xf\_-Xf\_-Xfeh0
Xf\_-Xf\_-Xf\_-Xf\_.Y-+n/~>
<~VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5gVl-GjVl-DhVP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^5gVl-GjVl-DhVP^5fVP^5fVPg>i
Vl-GjVP^5fVP^5fVP^5gVl-GjVl-DhVP^5fVP^5fVPg>hVP^5fVP^5fVP^5fVP^5gVl$>gVP^5fVP^5f
VP^5fVPg>hVP^5fVP^5fVP^5fVP^5gVl$>gVP^5fVP^5fVP^5fVPg>hVP^5fVP^5fVP^5fVP^5gVl$>g
VP^5fVP^5fVP^5fVPg>hVP^5f~>
<~jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUc~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
390.36 203.107 mo
390.25 203 li
390.5 202.968 li
390.36 203.107 li
369.6 203.107 mo
369.25 203 li
369.492 203 li
369.6 203.107 li
390.25 203 mo
390.25 203 li
369.492 203 li
369.46 202.968 li
369.25 203 li
369.25 172.25 li
369.46 171.95 li
369.6 171.81 li
369.25 171.5 li
373.423 171.5 li
373.595 171.747 373.769 171.995 373.944 172.241 cv
370.217 172.241 li
370.03 172.428 li
369.991 172.483 li
369.991 202.259 li
389.509 202.259 li
389.509 189.675 li
389.756 189.906 390.004 190.136 390.25 190.363 cv
390.25 203 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 272 ]ct
[23.5127 0 0 -34.145 368.223 101.19 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$^]~>
<~Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Xo~>
<~VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVl-GjVl-Gi
VP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GjVl$>gVP^5fVP^5gVl-GjVl-DhVP^5fVP^5fVl-Gj
Vl-GiVP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GjVl$>gVP^5fVP^5gVl-GjVl-DhVP^5fVP^5f
Vl-GjVl-GiVP^5fVP^5fVPg>iVl-GjVP^5fVP^5fVP^8hVl-GiV>~>
<~jQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5LbjlPUcjlPUc
jlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5LbjlPUc
jlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUbjQ5Lb
jlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUcjlPUb
jQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUcjlPUc
jlPUbjQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjlGLajlPUcjlPUcjlPUcjlPRajlPUcjlPUc
jlPUcjlPUbjQ5LbjlPUcjlPUcjlPUcjQ,FajlPUcjlPUcjlPUcjT~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
gsave
0 272 mo
438 272 li
438 0 li
0 0 li
0 272 li
clp
370 203 mo
390.25 203 li
390.25 172.25 li
370 172.25 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
166.1 108.63 mo
160.74 112.67 160.58 119.34 165.74 123.53 cv
167.6 125.04 169.99 126.08 172.6 126.52 cv
172.38 133.63 179.57 139.53 188.66 139.71 cv
191.93 139.77 195.14 139.07 197.9 137.7 cv
201.84 144.21 211.77 146.981 220.09 143.91 cv
223.08 142.8 225.58 141.03 227.269 138.81 cv
236.39 143.55 248.69 141.61 254.75 134.49 cv
256.92 131.93 258.08 128.92 258.059 125.84 cv
266.3 124.38 271.46 117.97 269.59 111.52 cv
268.92 109.21 267.38 107.1 265.17 105.47 cv
269 101.24 267.73 95.3899 262.33 92.3899 cv
260.38 91.3099 258.07 90.7099 255.69 90.6599 cv
252.42 82.1699 240.97 77.3599 230.11 79.9199 cv
226.21 80.8299 222.75 82.6399 220.17 85.0999 cv
214.28 77.6999 201.84 75.4399 192.38 80.0399 cv
188.98 81.6899 186.29 84.0999 184.64 86.9499 cv
174.26 86.1399 164.99 92.0699 163.96 100.19 cv
163.58 103.1 164.33 106.04 166.1 108.63 cv
1 /3 /CSD get_res sepcs
0 sep
ef
1 lw
2 ml
166.1 108.63 mo
160.74 112.67 160.58 119.34 165.74 123.53 cv
167.6 125.04 169.99 126.08 172.6 126.52 cv
172.38 133.63 179.57 139.53 188.66 139.71 cv
191.93 139.77 195.14 139.07 197.9 137.7 cv
201.84 144.21 211.77 146.981 220.09 143.91 cv
223.08 142.8 225.58 141.03 227.269 138.81 cv
236.39 143.55 248.69 141.61 254.75 134.49 cv
256.92 131.93 258.08 128.92 258.059 125.84 cv
266.3 124.38 271.46 117.97 269.59 111.52 cv
268.92 109.21 267.38 107.1 265.17 105.47 cv
269 101.24 267.73 95.3899 262.33 92.3899 cv
260.38 91.3099 258.07 90.7099 255.69 90.6599 cv
252.42 82.1699 240.97 77.3599 230.11 79.9199 cv
226.21 80.8299 222.75 82.6399 220.17 85.0999 cv
214.28 77.6999 201.84 75.4399 192.38 80.0399 cv
188.98 81.6899 186.29 84.0999 184.64 86.9499 cv
174.26 86.1399 164.99 92.0699 163.96 100.19 cv
163.58 103.1 164.33 106.04 166.1 108.63 cv
cp
1 /3 /CSD get_res sepcs
.502 sep
@
grestore
1 /3 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+CALIBRI,Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 79 /O put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/O <1C60D8A8C9B624F9257693AA05F54B3F6F5707D5ED56A2F403B01AB2B44B
FA61536ECB93C3E443D431CDA75F7C80E1651DDF58D3BF4622794EC6262BD68B
AD06E68E1E6A6884DEBA5A70BE002DB0A3D53BEB04D3F8C5368D696AC6C0C562
F74CC4E6C46ADC> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold /PBAAAA+CALIBRI,Bold findfont ct_VMDictPut
/JLMWZM+CALIBRI,Bold*1 
[79{/.notdef}rp /O 176{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
187.12 107.21 mo
(O)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875
E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A366
46DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0
318D13C761F9DF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[79{/.notdef}rp /O 30{/.notdef}rp /n 145{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
196.584 107.21 mo
(n)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AED
C4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C049
2C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E
8106797186054DABC39E6B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[79{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
204.102 107.21 mo
(e)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8391507657B8D1429650EAD682B1E1FA8FF445B393CF
432> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 
145{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
211.144 107.21 mo
(-)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 21{/.notdef}rp /e 
8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
215.427 107.21 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B683825E2D044740A889FBE934ECCE78E1156C56B6149D738C
A6C7B4AECC7FA154428E6DD464F11C7D97D1FA9A6F6B9A75D5C94F0DB87ED3BD
E4384A0C5BEF384B64AB6AB82F0CAD9F523DB7B169A9EFE68886BAAEBDCCF81A
77828FB78CC41F51C2F02BE854F0FC98D5C093F2F1B7BFBBE0B76D7E8A41F57E
61D5D8AA27543AC483B2961CB710> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
13{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
218.591 107.21 mo
(W)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A26
1528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4
E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF
06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D
7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D8839
3EC5B1BCAE7CEACDFA7D9A043D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
231.275 107.21 mo
(a)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD
89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65D
BD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58A
EC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC
68163F56BACA6337> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
238.191 107.21 mo
(y)sh
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
244.827 107.21 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD8
33E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487
A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151
121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp 
/y 134{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
190.592 124.01 mo
(N)sh
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
199.818 124.01 mo
(e)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87
D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E64020888
37AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3
D16C57> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 5{/.notdef}rp 
/t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
206.86 124.01 mo
(t)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80
846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE
481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2B
AF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB
99E3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 5{/.notdef}rp 
/t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
211.718 124.01 mo
(w)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4
E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81
C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n /o 
4{/.notdef}rp /t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
222.147 124.01 mo
(o)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB
1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0
AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n /o 
2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w /.notdef /y 
134{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
229.679 124.01 mo
(r)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZM+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1
E2F6A013F2F56A027205F5576546> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZM+CALIBRI,Bold /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/JLMWZM+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 5{/.notdef}rp /k 2{/.notdef}rp 
/n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 
/.notdef /y 134{/.notdef}rp]
JLMWZM+CALIBRI,Bold nf
JLMWZM+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
234.649 124.01 mo
(k)sh
.75 lw
2 ml
356.5 107 mo
286.75 107 li
@
288.25 110 mo
277.75 107 li
288.25 103.25 li
cp
ef
145.75 92.75 mo
84.25 92.75 li
@
145 89 mo
154.75 92.75 li
145 95.75 li
cp
ef
85.75 95.75 mo
75.25 92.75 li
85.75 89 li
cp
ef
397.91 29.1401 mo
407.38 34.1601 413.97 51.3001 413.97 70.8901 cv
413.97 87.1901 407.4 101.45 397.96 105.67 cv
@
397.75 32.75 mo
392.5 27.5 li
399.25 26 li
cp
ef
399.25 108.5 mo
392.5 107 li
397.75 102.5 li
cp
ef
397.92 109.74 mo
407.38 114.6 413.97 131.16 413.97 150.09 cv
413.97 166.389 407.4 180.65 397.96 184.868 cv
@
397.75 113 mo
392.5 108.5 li
399.25 107 li
cp
ef
399.25 188 mo
392.5 185.75 li
397.75 181.25 li
cp
ef
348.25 46.25 mo
285.25 80.75 li
@
346 44 mo
356.5 41.75 li
349 50 li
cp
ef
287.5 83.75 mo
277 85.25 li
284.5 77.75 li
cp
ef
84.25 121.25 mo
154.75 121.25 li
@
85.75 124.25 mo
75.25 121.25 li
85.75 118.25 li
cp
ef
%ADOBeginSubsetFont: HIBBAA+CALIBRI Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+CALIBRI def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 79 /O put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/O <1C60D8A8C9B624F9257693AA05F54B3F6F5707D5ED56A2F403B01AB2B44B
FA61536ECB93C3E443D431CDA75F7C80E1651DDF58D3BF4622794EC6262BD68B
AD06E68E1E6A6884DEBA5A70BE002DB0A3D53BEB04D3F8C5368D696AC6C0C562
F74CC4E6C46ADC> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/JLMWZN+CALIBRI /HIBBAA+CALIBRI findfont ct_VMDictPut
/JLMWZN+CALIBRI*1 
[79{/.notdef}rp /O 176{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
90.2798 131.56 mo
(O)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875
E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A366
46DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0
318D13C761F9DF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[79{/.notdef}rp /O 30{/.notdef}rp /n 145{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
98.2239 131.56 mo
(n)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AED
C4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C049
2C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E
8106797186054DABC39E6B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[79{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
104.524 131.56 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8391507657B8D1429650EAD682B1E1FA8FF445B393CF
432> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 
145{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
110.5 131.56 mo
(-)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B683825E2D044740A889FBE934ECCE78E1156C56B6149D738C
A6C7B4AECC7FA154428E6DD464F11C7D97D1FA9A6F6B9A75D5C94F0DB87ED3BD
E4384A0C5BEF384B64AB6AB82F0CAD9F523DB7B169A9EFE68886BAAEBDCCF81A
77828FB78CC41F51C2F02BE854F0FC98D5C093F2F1B7BFBBE0B76D7E8A41F57E
61D5D8AA27543AC483B2961CB710> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 13{/.notdef}rp /e 
8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
114.172 131.56 mo
(W)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A26
1528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4
E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF
06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D
7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D8839
3EC5B1BCAE7CEACDFA7D9A043D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 9{/.notdef}rp /a 
3{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
124.852 131.56 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD
89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65D
BD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58A
EC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC
68163F56BACA6337> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 9{/.notdef}rp /a 
3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
130.6 131.56 mo
(y)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
136.037 131.56 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B6D9EA19A14B847D0E8EB8BF4B471CD6F46D062EB4BE987671
1DE846CB52CA29717591BA788944E909A85262E823C4FA12BA37712263FC72E9
89A6DED74E14903D34D6198FBDC555D5CFE2C4496EBCDE1C8C3752795BF188E4
FAAED3EDACC0501E6038041D4A8B4E60EE57E2BABA6257E8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 
10{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
83.1757 145.96 mo
(M)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4
E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81
C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 
/o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
93.4358 145.96 mo
(o)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6
E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94
C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5
809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C
58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F8
8F3E7B91EC8C23BC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 8{/.notdef}rp 
/n /o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
99.7599 145.96 mo
(b)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5
A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E
21C6C79BBDA40B7772F2DEC85ADAD3476B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp 
/i 4{/.notdef}rp /n /o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
106.06 145.96 mo
(i)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /.notdef /n /o 9{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
108.808 145.96 mo
(l)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
111.556 145.96 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
117.532 145.96 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B64FADC8BE4593403BE5D574FAA91D24903C73A9847FBCFF2C
CAE7B82F347344B6D75D9DA8CFD564A5192C31CC0F81E85BFE65DA0E98609881
F08E27947C3AA06FD0D02C1BFBD8926D8C270B5E2950C4A34E562381A9DCE503
FFFA3F4060AB2DBCCA9D5531B6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 68 /D put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 22{/.notdef}rp /D 8{/.notdef}rp /M 
/.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
120.244 145.96 mo
(D)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
127.624 145.96 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87
D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E64020888
37AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3
D16C57> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 22{/.notdef}rp /D 8{/.notdef}rp /M 
/.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
133.373 145.96 mo
(t)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
137.393 145.96 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C0603B0F56
B2079EC8B4534AB9C74A497574D9EF71E8F51BC97EB8824D6E23EF8EFAA3DEBE
8D568C2956BA1E496299B0678E1779132A604465EA4ECC38726918FAF069884E
38826C83426FA3C94ADFC9002199C86D8D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
75.9636 85.2873 mo
(C)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
82.3597 85.2873 mo
(o)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
88.6838 85.2873 mo
(n)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
94.9839 85.2873 mo
(t)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB
1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0
AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
99.0039 85.2873 mo
(r)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
103.192 85.2873 mo
(o)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
109.516 85.2873 mo
(l)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
112.264 85.2873 mo
( )sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
114.976 85.2873 mo
(M)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
125.236 85.2873 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5
A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F
24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0
AEBA9DE73147EEE82D829B87C7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
131.212 85.2873 mo
(s)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
135.905 85.2873 mo
(s)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
140.597 85.2873 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F43B727FC67DAAB0A1AC3463640
03E4FEF79FBAC399EF60BAB44182D20FA0C6402BF1E27F05398DCDDDA14D79F5
733F11E560A813FF9D16C42617DFDA23021803BAB86086244EE74B29A5E1F99E
79BC6C6C8880FE4C572C55E990D88B7521BD46854B97930948AAC94E7DFE2FF6
9F2221950186414A7427A5E80E1B04B219E3300404246D87351FD05C6F3EA0B9
5C636083B47E4D5C2DAA8BBB8D343439CEC8A6CCD7C3BA57C2332F2A02343DC5
6BF6AA691E1A081F9D254D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
2{/.notdef}rp /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp 
/y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
146.345 85.2873 mo
(g)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
151.997 85.2873 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
157.973 85.2873 mo
(s)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
255.403 51.9028 mo
(C)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
261.799 51.9028 mo
(o)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
268.123 51.9028 mo
(n)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
274.423 51.9028 mo
(t)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
278.443 51.9028 mo
(r)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
282.631 51.9028 mo
(o)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
288.955 51.9028 mo
(l)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
291.703 51.9028 mo
( )sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
294.415 51.9028 mo
(M)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
304.675 51.9028 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
310.651 51.9028 mo
(s)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
315.344 51.9028 mo
(s)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
320.036 51.9028 mo
(a)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
325.784 51.9028 mo
(g)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
331.436 51.9028 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
337.412 51.9028 mo
(s)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 64.2607 mo
(C)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 70.6568 mo
(o)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 76.9809 mo
(n)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 83.281 mo
(t)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 87.3011 mo
(r)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 91.4892 mo
(o)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 97.8133 mo
(l)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 100.561 mo
( )sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 103.273 mo
(M)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 113.534 mo
(e)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 119.51 mo
(s)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 124.202 mo
(s)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 128.894 mo
(a)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 134.642 mo
(g)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 140.294 mo
(e)sh
JLMWZN+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 146.27 mo
(s)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
298.05 118.49 mo
(O)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
305.994 118.49 mo
(n)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
312.294 118.49 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
318.27 118.49 mo
(-)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
321.942 118.49 mo
(W)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
332.622 118.49 mo
(a)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
338.37 118.49 mo
(y)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
343.807 118.49 mo
( )sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
290.946 132.89 mo
(M)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
301.206 132.89 mo
(o)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
307.53 132.89 mo
(b)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
313.83 132.89 mo
(i)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
316.578 132.89 mo
(l)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
319.326 132.89 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
325.302 132.89 mo
( )sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
328.014 132.89 mo
(D)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
335.394 132.89 mo
(a)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
341.143 132.89 mo
(t)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
345.163 132.89 mo
(a)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
1.9929 160.887 mo
(D)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
9.37302 160.887 mo
(a)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
15.1211 160.887 mo
(t)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
19.1412 160.887 mo
(a)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
24.8893 160.887 mo
( )sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
27.6013 160.887 mo
(C)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
33.9974 160.887 mo
(o)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
40.3215 160.887 mo
(l)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
43.0696 160.887 mo
(l)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
45.8296 160.887 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A
114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624
097F1B5D47BF4F384727F53BA1763156DBDB0266> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
51.8057 160.887 mo
(c)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
56.8818 160.887 mo
(t)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
60.9019 160.887 mo
(i)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
63.6499 160.887 mo
(o)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
69.974 160.887 mo
(n)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
76.2741 160.887 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC9666D445523C20D6BC6D
45C854A0BE693CA04DDB35CE9C6FCC12699F3ECF3D1B67F9F5777A6EECDAF3C0
F3F32C0B6BC38F752623DB2A9617BDB514ED25F1A310A0C42BE659A27D8F2C06
C4BFA42A6084F73A353D30020A89B386DABBAAA17119B17F011D1BF8067CBFE1
7C2D6AE10C51C95BF00F09A50ED067AF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 83 /S put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 3{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp 
/a /b /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
23.5093 175.287 mo
(S)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
29.0294 175.287 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
35.0055 175.287 mo
(r)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78
CD729866CE567C88B5C4105F11006EA75E6774682E91A2E1F257423C8BD0B940
F1B9F1BCB8B413DFC78AF75D4027> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 3{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp 
/a /b /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
39.1935 175.287 mo
(v)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
44.6176 175.287 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
50.5937 175.287 mo
(r)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
342.799 228.496 mo
(M)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
353.059 228.496 mo
(o)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
359.383 228.496 mo
(b)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
365.683 228.496 mo
(i)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
368.431 228.496 mo
(l)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
371.179 228.496 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
377.155 228.496 mo
( )sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
379.867 228.496 mo
(D)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
387.247 228.496 mo
(e)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
393.223 228.496 mo
(v)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
398.648 228.496 mo
(i)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
401.396 228.496 mo
(c)sh
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
406.472 228.496 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZN+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
412.448 228.496 mo
(s)sh
147.25 193.25 mo
284.5 193.25 li
284.5 164.75 li
147.25 164.75 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
.24 lw
147.25 193.25 mo
284.5 193.25 li
284.5 164.75 li
147.25 164.75 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB5
3E56E1831B0550D2FE4055F5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 3{/.notdef}rp /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
171.23 183.12 mo
(T)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
178.048 183.12 mo
(r)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
182.934 183.12 mo
(a)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
189.64 183.12 mo
(n)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
196.989 183.12 mo
(s)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CE
F7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE
826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB
2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D
66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFB
BE8C69D79181> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 3{/.notdef}rp /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /s /t /.notdef /v 2{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
202.463 183.12 mo
(p)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
209.813 183.12 mo
(o)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
217.191 183.12 mo
(r)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
222.077 183.12 mo
(t)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
226.767 183.12 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B74383E5F6C6CDF9C5C9B986319F48E0C8F60D9DD3B951CB8A
90C91D93DE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 76 /L put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 7{/.notdef}rp 
/L /M /.notdef /O 3{/.notdef}rp /S /T 2{/.notdef}rp 
/W 9{/.notdef}rp /a /b /c /.notdef /e /.notdef 
/g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 
/p /.notdef /r /s /t /.notdef /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
229.931 183.12 mo
(L)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
235.811 183.12 mo
(a)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
242.516 183.12 mo
(y)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
248.858 183.12 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
255.83 183.12 mo
(r)sh
147.25 229.25 mo
212.5 229.25 li
212.5 200.75 li
147.25 200.75 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
147.25 229.25 mo
212.5 229.25 li
212.5 200.75 li
147.25 200.75 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B87DE005AD6F3C5D74814B2BFE06F81F462471EDB11E0EC39F
39EA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S 
/T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /.notdef 
/e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef 
/n /o /p /.notdef /r /s /t /.notdef 
/v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
174.59 219.104 mo
(I)sh
1 /3 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED1
9B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30
A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43
C2B5E88E6AFB64C1CBC51F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 80 /P put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp 
/S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/.notdef /n /o /p /.notdef /r /s /t 
/.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
178.118 219.104 mo
(P)sh
147.25 265.25 mo
284.5 265.25 li
284.5 236.75 li
147.25 236.75 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
147.25 265.25 mo
284.5 265.25 li
284.5 236.75 li
147.25 236.75 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
187.59 255.085 mo
(L)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
193.47 255.085 mo
(i)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
196.69 255.085 mo
(n)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1
E2F6A013F2F56A027205F5576546> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZN+CALIBRI /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/JLMWZN+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp 
/S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/.notdef /e /.notdef /g /.notdef /i /.notdef /k 
/l /.notdef /n /o /p /.notdef /r /s 
/t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZN+CALIBRI nf
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
204.039 255.085 mo
(k)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
210.409 255.085 mo
( )sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
213.573 255.085 mo
(L)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
219.453 255.085 mo
(a)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
226.159 255.085 mo
(y)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
232.501 255.085 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
239.473 255.085 mo
(r)sh
219.25 229.25 mo
284.5 229.25 li
284.5 200.75 li
219.25 200.75 li
cp
.00881971 0 .157382 0 cmyk
ef
219.25 229.25 mo
284.5 229.25 li
284.5 200.75 li
219.25 200.75 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
225.28 219.104 mo
(O)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
234.548 219.104 mo
(n)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
241.898 219.104 mo
(e)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
248.87 219.104 mo
(-)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
253.154 219.104 mo
(W)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
265.613 219.104 mo
(a)sh
JLMWZN+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
272.319 219.104 mo
(y)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 /3 /4 ]]
[/Pattern [/109562088.0 /109562284.0 ]]
[/Gradient [/0 ]]
] del_res
/JLMWZN+CALIBRI*1 uf
/JLMWZN+CALIBRI uf
/HIBBAA+CALIBRI uf
/JLMWZM+CALIBRI,Bold*1 uf
/JLMWZM+CALIBRI,Bold uf
/PBAAAA+CALIBRI,Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
