%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: one-way-gateway.pdf
%%Creator: Adobe Acrobat 10.1.1
%%For: wangchj
%%CreationDate: 10/23/2011, 1:50:57 PM
%%BoundingBox: 0 0 464 298
%%HiResBoundingBox: 0 0 464 298
%%CropBox: 0 0 464 298
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 19789 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2011-10-23T13:16:11-05:00"
   xmp:CreatorTool="Microsoft® Visio® 2010"
   xmp:ModifyDate="2011-10-23T13:32:37-05:00"
   xmp:MetadataDate="2011-10-23T13:32:37-05:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2010"
   dc:format="application/pdf"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:HasVisibleOverprint="False"
   xmpMM:RenditionClass="proof:pdf"
   xmpMM:DocumentID="uuid:9a9d10ce-ba8e-43c0-a51c-08454d334ac7"
   xmpMM:InstanceID="uuid:96ff4b97-adc6-403d-91a8-dcf59b4726b7">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="164"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXz7rfkv84tb8x6rqemecZrLSpL&#xA;+8jtbEXl1D6ccFxJCqhYlKCnDtitJj+Xnl/80/LfnrSx5j80PrGmakLi3No9xcTgMkDTK1JgAKen&#xA;1GK09xxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksdi896G13cR3BNjYQ3Taf&#xA;Fq93JbwWlxeo3pvbQF5RK0iuGXeMAlW4k0xVq1/Mj8vru8isrXzLpc91cIJLeOO8gcyqS6/uyGo+&#xA;8TVC1pTfFUo1H86fINhb/XJb4S6X+k49H/SkDRS2nry2RvVcSpIax8BwJG/PalN8VTXQ/wAx/Jes&#xA;WOnXMOrWtvPqdta3UOnXNxBHdot6qNCkkIdiHb1VWgrUnauKolvPnkdbd7lvMWmLbx+jzmN5bhF+&#xA;sKzwVbnQeqqMyfzAGnTFUVpPmfy1rLMukatZ6kyoJGW0uIpyELMgY+mzfDzRlr4gjFUyxV2Kpff+&#xA;YdGsZ/q1xdJ9c481so6zXLL4rBEHlYfJcVYtpPnfzxqfnW70ePya9r5cteDf4ju7toPUSRAw9K0N&#xA;uXMm+6Fhx/aINBiqtof+813/ANtHUv8AqPnwMgknnm88xWd5ol15csodR1qGW6ezsbiQxJKwspiU&#xA;5gH4uNePQE7EjrhQWZeUNevNW0iD9KWxsNfhhhOracRx9KaRORKDk9YmIbg3I9KGjBgFCeYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxfUvyz8malcSz3tnNJ69x9blgF5eJbmcoY3&#xA;f6ukywgyIxWSifGCeVanFVK0/Kf8v7O7F1b6SElEK2xBnuGR4ktTYqkkbSFH42xKDkDSpPUk4qoy&#xA;fk3+W0ukNpE+ji5097w6lJDcXFzMXvDEYTM7ySu7NwYjc+/XFVO3/JX8s7bUY9St9G9G9i+rGOaO&#xA;5u0I+pmM2+wlC/B6Cdu2+KpRrf8Azj/5JuNKmsdEh/RL3bWyXty01/cO1tawSWwij/0uLgTDO6Vb&#xA;khBPNH7Kpj5X8v8A5X+ULqQeVLRmuxELKSGwkur/AIKkjSiOQc5o4T6kjfFIV+dBirJBd+aLz/ee&#xA;xh0yI0pLfOJ5gR1rb2zemQex+sfRirZ8uvc1OqajdXoPWBH+qwCv2gEt/TZlPTjK74qmFhpunafD&#xA;6Fhaw2kBJYxQRrEnI9TxQAVxVEYq8Cf88dF0bzJqPleTTbq41CHVL6MvG8CxFpLuWQUeV46fbpvT&#xA;Gk2iPJf5vaN53/MPy/p1hY3NtLZvd3Ejz+nx4i0ljoODN3fGlJeteYEFndWOtxij20q212R+1a3T&#xA;rGwPakchSWp6BW8TihO8VdirsVdirsVdirsVdirsVdiqXan5h0rTb2ysbp5DeagW+qwQwTXDFY2R&#xA;ZJHEKSenEjSoHkeiLyFSK4qj5ZoYlDSusasyopYhQWchVUV7sxoMVQ93qljaXVla3Evpz6jK0Fkl&#xA;GPORInnZagECkcTtvTp44qisVdirsVdirsVdirsVWT3EFvC89xIsMMY5SSyMFVQO5Y0AxVKR5qsJ&#xA;yBpcFxqxPR7OOsJHcrcymK2b5CSuKt8fNd3Tk1rpUR+0E5Xk5U+DMII43H+rIMVa/wAKabPvqjza&#xA;u3Vlvn9SE0+yfqqBLWq9mEVffFU3iiiijWKJFjjQBURQAoA6AAdMVXYq7FXYq7FUsuPK/lm5ne4u&#xA;dIsp55Tyklkt4ndj4szKScVVLHQNB0+Yz2Gm2tpMVKGWCGONuJoSOSKDTbFV+tWJ1DRr+wBobu3l&#xA;gB/4yIU/jiremX6Xmk2moGiJcwR3BrsFDoH3r4VxVZpGu6HrMDz6PqNtqUEbmOSW0mjnRXXqrNGW&#xA;AYeGKo7FXYq7FXYqp3V1bWlvLc3UyW9tCpkmnlYIiIoqWZmoAAOpOKsQufN+sa0DF5VgEVk2x1+9&#xA;jb0iD3tLclHn9nfjH3X1BtkJTpICXr5SvIJTfWmtahHrZ3l1KWYzCY/yzWzUtjH/AJCRpx34FSSc&#xA;q45WzoJ1ofm2/OqQ6Fr9otvqc6u1pd2p52lyIhybirEywuF3KOCvg7ZdGYLAhiF/57/LjzT5qlsW&#xA;1u60TU9Ei1ex1ScSWtvGttDeW1rcw3Es3q8FuJRG0LpxkoDRkJoZISmz/Kv8i7C3S7HmS3PpTG6+&#xA;vSXWmAfu5rK5K/DCsSxoYoaKFAVZjSnNcVTPRfKn5L+V/NNvfQeaLW31PSAsf1CW+sIghtLB7F/W&#xA;jRI5CRFydgx+FuRUKGcFV61HIkiLJGweNwGR1NQQdwQR2xV3JeXGo5Urx708cVbxV2KpHqfnrydp&#xA;esw6JqOsWtrqs8TTx2csiq/prQcm/lrX4eVOXatDiq//ABDPc1XS9Muro9BPMhs4AT0q04WVl/yo&#xA;43xVs2XmW7r9Z1CPToz0isIxJKp/5iLgMjD/AJ4KcVXweVtEjmS4ltzeXUe8dzeu91Kh/wCK2mL+&#xA;n8koMVTXFVk9xBBGZJ5FijFAXdgq1PTc4qsgvLO4LC3njmK05CN1alelaE4qqetF6np819T+Sor0&#xA;r0xVdirsVdirsVdirsVU7q5htbaW5mbhDAjSSsegVByY/cMVYh5htJ4/yd1GzkSNbhPL8sLJPJHD&#xA;EJBZlaSyStHGicvtF2C06mmKqP5TT22saAPNHIy3l/6tg9yTaEy22mX11Fas7WNbZ39N6M0RKE/Z&#xA;2xVnOKuxV2KuxV5f+YOsaTZ+fdOXXf32lxWsLW8E3NrWO6mnkVJ5FFYlYemqpJIPhPQgnKckiDsz&#xA;iAziCezmiEikqpFfiH6iNj9BxBCpfquoNFERbihI+2ev0DKsk65M4hh2jSPJ+YuiO7FmP1urE1P+&#xA;87ZXpT6z7mWXkkGqeV/LFx+Yk+iS/lRftYa09zJqvmFpyq3D8vrdVaOf0x6k6BgXmVhSgXsM9x2T&#xA;3P5TeQLrTzp0/krUXsmDgw/pCgpIturdNQB3WyhH+x9zVVgvl7yVpWr/AJjeam82eQ9SGnrPcxaf&#xA;rPrzw2tvaSiSScfFeEt6jTuWNsWTluqIa4q94tbS9NlDbxUsLNESOOH4pJxEoACmTl8LcRQ/aI/m&#xA;riqI/Q+lenwNpCVO5qikkjuSRUn364qsi0e2G07yXaj+7S4bmqr2XjQBqfzNVvfFWmtZrORZLJWk&#xA;g3EtmGFKU2aLmQFIO3GoWh8cVSzTfJXkddaPmiz0a1j1yR5GfU/SUXPqMDHLyk+1XqpxVkLuiIzu&#xA;wVFBLMTQADckk4qgdI1/Q9ahefSNQt9QhicxySW0qSqrjsShNPH5b4qj8VSfzN5gh0XTLu+mdYre&#xA;xtpr69uGVpBFb26lnPBSGdjT4VBFd/kVWJR/mt5QsNX+peaBf6NriLHItpqdusno28zpElx6unm6&#xA;toYpJZRHzklB5fCcVTybzb5W1Pynf+ZrYXF5ZaTFcTSrFFNbXo+rxerJEkcwt5Ud0pxB48gQa0Nc&#xA;VY7p/wCb/wCWN6mpxw20x07RjcfpG6SyM8ESW0iL6rC3E0gikV/USThx4KWYrtVVkmgecNHvrq4s&#xA;dPufr0No4SVyJVlg53E9oqSiVE5UuLOWP7RbYFhQhiqyfFXYq7FXz5rfkr84tb8xatqel+cprLS5&#xA;L+8jtbL63dxenHDcPCFCxqUAHp7UxWky/Lzy9+aXlvz1pf8AiTzRJrGm6iLi3No1xcTgMkDzK1Jg&#xA;AKen1G+K09W80v8AWbaLQ4z/AKRrBMDqOq2gp9bkPWgER4Bv53Qd8Va893UNp5I8wXU81xbQ2+m3&#xA;cslxZSiC6RUgdi0EpDCOQU+BqbHFWK/kVqGiy+TnsbPzD+n9QtLy8OoyyaiNTnUtdzJEWmqpMbpF&#xA;WN/TjEg+PgCxGKvRsVdirsVdiry7z9p0d/54aBriW0caTC8V3bv6csTrczUdW3HzDAqRsRTMfMaI&#xA;bIDZT8qaLqGjtqNxd3UN6t+0dwt7A08azSOXaV3tWlmto3NVPOELz7jYZGctkxCb3NyJIiK75RKV&#xA;tgCRaH/5MPQ/+jv/AKh3w6X6z7kZeT0qbzHoEOswaJLqNuusXSs8GnGVfrDKil2YRV5cQorWlM2D&#xA;jpjiqC1pqaXcLUAzL6CkmgDTERqSfAF98VeY/l7d/nTqPmnX7vXp5Lby7YanqNrY2d1BHC89qg/0&#xA;R4IxaRuwqwPrm5YMAV9Ovx4qxrQvzD/5yEhvNJ0/U/Lk9w97DpENxqL6e7W8cl16r3M8ixG2MTJH&#xA;LGJuRKpJEV4oJAwVTDTvzJ/PZbXTYG8o/pGaW1s5J7yW1uLI+tNbxzTRSI7AI8bWt5E70C83tzxA&#xA;PF1Vtx+YP563NprM1hoolTThpT6Wy6RfWM2oSXN0n1uL0r2WQxRwxrJFJUV6ShkUjFWYWl3+aUus&#xA;aS2mJpkvlcuZNXaeO5tNRYzw+v8A3EvMQgSSgMhq46eOKq35o+X/ADTr2i2EVjbQzR2WoQXt/p6y&#xA;q5u7aJXV7cRzxpA5LOrASsFqteoGEV1Vidr5n0G/u5pNUSXy/renxkHWrQ/VZYVQ1WC8inCtGeJ5&#xA;COdHiYVZGPYKnnlLW/zh1fUNI1GWPSZfKMwulnlUTwXsoiMkdvOyuJEWObgki+nWobwxVmU1tHql&#xA;7e6bqlvC9tLY+jc2vJpUnhuWdGWTkiCgEZFP8o4q8jXVv+cfLu8vNO1Cyvbi6BvrK+N7Jf6hcuNM&#xA;v7NWiNJrq6mRpoYZIgoZeCPXj8a4qjvJXmn/AJxv8s6fdJoUUGkxqLm2kmuLa6ee4gQ3MkgiuJll&#xA;kuIH+oSkBHYcgEoJGVSqh/MUH/OOGneX9a0y406Wazt1ht9Q0+yj1ISznRobsQqroU9RYls7lWm9&#xA;T0+SN6j1XZVl/krR9DttC1fzJpMqTL5i1J9Wt5VikhWQK6xW0SrN8TiQRVD/AGWZy6fCVOKqnmSP&#xA;86W836c2hy6QnlFZ1+uowk+vNHT4ufqAx8f+MdGxVlH/ADtX/Lj/AMlsVXR/4m9RfU+penUc+Pq8&#xA;uNd6V74qx/Q/95rv/to6l/1Hz4GQYt+al55us7bTLjyhALjzFG92bCIqshr9Sm5FEYqruqVZVPU9&#xA;j0JQWV/llJNeaDb6jq7yy+apLeCPW1uF9OWCX0w5hWPhHxiqxZaD4utW64oT7zRf3GneWtWv7Y0u&#xA;LSzuJ4TxZ6PHEzKeKJKzbjoEY+xxVgX5D+fPNnnLR77UNfVwgdDYN+jprOJ4mLjnFcyPwul+GlVj&#xA;Qr3HxUCr1DFXYq7FXYq8w883KW/n0NJF60L6VCkqGhqrXEw6HY16UzGz8w2Q5NpqFm2mBLQ/uIVR&#xA;EXcUVaKPtb0265jzls2Qj3Jfdaxa2lvJc3U8cFvEOUk0rBEUeJZiAMpErbKRPk3S9a1PzTY67HYS&#xA;W2j2SzlLm7BgadpYzGohhYerw3rzdVBH2eWZmnwmJstOSYOzAtI0Key81QeZLn8vrjX9Vls7a41S&#xA;5kszpv1fUriX0NStoYI7VILtEFwkkcklahXb13345bSmnmHV/PF5ouh61oX5cnS5JY7mTU9JuLG2&#xA;nYm2kW6VNovrCNJb2U1uA8SVe4TgWYKwVTXy9501nTNZsfJ+q+RuF3dmy0q511VSzj1Cd4fVvZ44&#xA;kt40aOKKGeVvTcgEIu3OqqvWYrtbKR7e8kKxVra3MpqpQgfA0h/bVqj4tyKdTWiqKtr21uef1eVZ&#xA;eBAYqa9RUH3B8cValvrKKYQS3EcczDksbOoYjxAJriqHubxLl1tLKXlKWX15IiD6UYILcmFaFh8K&#xA;jrvXsTiqLt7eG3iEUK8UFTSpJJJqSSakkk1JPXFWFee7/wA66d5i0m60FLy/sPq8wu9IhWFbaW4N&#xA;1awQme5NrdTxKI7qWR+B+zHUdGqqxPW/OWpatNaX0n5YSXmrWTARXGoWtwxtzGbN5wkn1J3KqbqY&#xA;I0fLk0PJA1dlUX5d/NH8wvMXmPRrGfyXqPlqya8P6Rnuo55Q9v8AVbk8eRtEijCzJFyYyqalQvIF&#xA;qKvUL+z9dBJEAt5D8VvKSV3BDcCw34PSjDwxVgOuflH+U2tIX1ryzJLPxmEgH13mPrF099LSWB6G&#xA;txK7ghtuRUUU8cVRsf5R/lN9XjvBpMDWsFZoJXnnaKJTPFdsY+UhSNfXtlchaCvOv95JyVdL5B/K&#xA;67a8uJrAtJqLTyTxyS3iu/1uO6imEULOGVJF1G5PGJQvKRnA5HliqzVtA8uWHlDVtGt7yDy3Ddaf&#xA;fnSFupzGLONlYTXSJLJWGOOS6WoQqI1KqOFaYqxaXyn+Z+iS6r/h3XdC8pW10Gv7Ty7GY5bG1jis&#xA;zb3MoMlpC/ATrbzFkVEVmfkrE1dVLvO/5a+Ytfgttf13zhpcNlBYwWGvahG/1W3Z4JXs7kPIS8TH&#xA;0NQ1GPkPS+NkXgu5CrJvI3/K3bnzRDd6pr9lq/lG5e6vIrnTltpLc24X0rO2SZYopHd3leSQqCFE&#xA;SDn8bBlWIT/nlp+i+aNT8rfoqW4u4dUvoxP68UUbNJdyyD4pKBft03ONJtE+R/zesPO/5i6Dptrp&#xA;s1pJYvd3Ekkjo6kC0ljoOPu+NLb13XUFjfWWuREIY3Sz1Dt6lrO/BS3b9zM6yBj9lfU/mxQo/mIY&#xA;x5A8ymXj6Y0q9L8xVaC3evL2xVI/yKS1X8rtINqweGR7yUOsbwhjJeTOzCORndQWY0DGtOu+Ks9x&#xA;V2KuxV2Kse82eTLPzAkUyzvYarbKy2uoQhWIV/tRSxt8MsLftI3zUq1GEZQEuaQaYO3kf8wIS9lD&#xA;a6a7XBAbVEuJkhUIdne1dGkTb7MaSMO3MDfMaWmvrs2jLTKPLn5ZaLpk8V/qcja1rETc4ru5UCKF&#xA;v+Xa3FY4qdmPKTxc5fjxRhya5TJQn5u69590bStLuPJWnyanqDXwW8tEjMitbNBKh5twfgEmeOSu&#xA;1eNOhOWMWHz/AJofmxZWHlyD/CN/e3sFtaz69c+hcp9ZkOmrJNEyxWMqQs93NxX0iaNGQ4jQg4qi&#xA;NO/MP805k13TpPK+pxzHSpdQ0fVp4QfSuBpsTx2hjW2iSaX61zrsKseIWgoFUND+Z/5j6Zqc2m2/&#xA;lXV/M1q0kT6d5k1GymsWW2dIPrMc8MFjEw4SLPxKxBjRPgfZmVen+RvMmoeZPLNrq+o6Pc6DdztM&#xA;sml3gdZoxFM8aMwkSF/3iKHFUHX6cVTe4sbad1kkUiVRRZUZo3A68eaFWp7VxV0NjaQq6xxD96QZ&#xA;Wb4mcjYF2arN9JxVWVVRQqgKo6AbDFW8VeWecPzA83+XNe1aaHQtd11bdgmlaRptjysJYPQt2M09&#xA;4IJpvVaeaVVWNiAI/iQfbKqFb84fzJhurq1f8tNRuWtjNwngeVI5uN41tGsRktwDWOkhZmHw1YDj&#xA;iqjb/nr5ze8htrv8uNR08XcsUFnLeTNAjy3RK28ZaS3VefNo/UCluC+o2/pkMq9jxV2Koc6bpxm9&#xA;Y2sJmry9Uxry5ePKla4qiMVeb/m9+TSfmO9gZdam0lLGG5gCwRlzILoJzD/vEBSsSErTenXFUs1z&#xA;8lfNupeYrrWofPd5ZSTR3MNssS3nO3S5uVuD6TLfogoqLFx4emUUHgH+PFUTZfk3r1ouuIvm6e4g&#xA;1K7hv9Osrm3eS0spodRGomkIuE5h3Xi3EoTUmvSiqF/5Ul5rpqrDz1cxSX18dTso4IbiCCzuZhdt&#xA;cGKOK9VuEkt+ZAvMfYXn6m9VWfaF5QsbLRNPstUWHWdRtbaKC71a4gQzXMkSBGmk5GRuTkVNWJ9z&#xA;iqZ2ukaVZyGW0soLeUjiXiiRG4nelVANNsVW63YHUNGv7AGhu7eWAHbYyIVB3+eKsQ/Me51zUvyw&#xA;ub7SUtmiudOmm1K3unmiVrSaxl5BGgjnk5o7o4VQOXGnIVxVQ/5x/aI/lNoohh9CJWvESEuZXUJe&#xA;zLSWUpCJJBT43VFVmqVHGmKvQ8VdirC/zO03zDf2mlR6RBqFzDHdStqEOlXw064MbWVxHEfWM9r8&#xA;K3LxMRyPSvFqYqxCDXP+cl7fTbN5PLunXd7CZre4t/UgUTLHNbiK5aT62ODSwtN8Kg0ZakbqMVTb&#xA;Uz+aWm3eq3WjaTPqerTXk3oXF1dRvpjWJRmtY4bQ3tt6MiMsccsnp1+2/wC82XFUk8qSf85D6Joe&#xA;nadcaVDqLJbSSX19e3CXl59Ze/YcByvLdXCWhDKDIATtzXpiqLfVv+ciLTT75rXQbC71J7+7+rtM&#xA;yem9spgS0cp+kAIFaP1TxQsaqOSgu0mKvTPL0uuy6TG2uxRQ6orzJMLcUidY5nSKVF5zFBLEqycC&#xA;7Fa0J2xVMcVdirsVdirsVdirsVdirsVdirTRoxVmUMyHkhIqVNCtR4GhIxVvFXYq7FXYq7FXYq7F&#xA;XYq7FXYqp3VzDa20tzM3CGBGklY9AqDkx+4Yqk1noi3vkeDQ771IVudMSyujGQsiB7cRvxJDAMKm&#xA;lRiqJ8seXNP8t6Jb6Np7TPa23Mo9xIZpSZZGlYvI27Es53OKppirsVdirT8uDcRVqGgJIFfmK0xV&#xA;4/5e/L386dKbT9Js/MthovlS1ikjFpYww3FzDWSZ0pJcWSpO3xR83Kpy+I8eXxFVMdD8ufn8vme0&#xA;udc81ae/l/1EmvrKzgjWSnHm9vEZLUsYxJ+7Dlw5j32ffFXqGKuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KvnjXfIn5wa55j1fU9L853FjpcuoXiWtkL69h9NIbiSEKFiHBQOG1&#xA;O2NrSZ/l15a/NHyz570o+Y/NMusabqIuLdrR7q5uAGSB5lbjOOIoY+o3xWnrPmmT6xBBoUfxTawx&#xA;hlUUqtmtDdyHwHpt6YP87p44qneKuxV2KuxV2KuxV2KqNxeWltx+sTxw868fUdUrTrSpHjiql+md&#xA;I/5brf8A5Gp/XFXfpnSP+W63/wCRqf1xV36Z0j/lut/+Rqf1xV36Z0j/AJbrf/kan9cVd+mdI/5b&#xA;rf8A5Gp/XFXfpnSP+W63/wCRqf1xV36Z0j/lut/+Rqf1xV36Z0j/AJbrf/kan9cVREM0M0YkhdZI&#xA;2+y6EMpoabEYqvxVBjWtHIBF/bkHcESpSn34q3+mdI/5brf/AJGp/XFXfpnSP+W63/5Gp/XFXfpn&#xA;SP8Alut/+Rqf1xV36Z0j/lut/wDkan9cVd+mdI/5brf/AJGp/XFXfpnSP+W63/5Gp/XFXfpnSP8A&#xA;lut/+Rqf1xVfBqOn3EnpQXMU0lC3CN1ZuIIBNAem4xVEYq7FWGaH/vNd/wDbR1L/AKj58DIJL53s&#xA;/MF7e6HaeXtQj0rWZ5rpLS/mi9dImNlNU+nyXfjWh3od6HphQWX+UdAvdM023l1i5OoeYZbeGLU7&#xA;8sXV3iShWKqpxjDFiBxBNatViTihPsVdirsVdirsVdirsVS3UP8AjpWv/GGf/icWKt4q88tfzVvk&#xA;8zajoWqaEIjYtehLqyvI5o+Gn2ttdyvMbpLBYVZL+FFPJvjLcuKjmVUvsf8AnInyffRXk1ppupzQ&#xA;WUbu86LZvE5ge1S4VZVujHSD6/G0kjMIwoZg5AxVGT/nr5Xhvriyk07UhJamZ5GCWxX6pb3M1pNe&#xA;Ai4r6STWrrxp6p6iMjFWtO/Oi31K1N5baDewWrRaLPBJeSW8bPFrmoGxiYrDJcFaBTKviBQ8Nqqo&#xA;nXPzp8q6Lqepade290ZtLdI5mhNpMrSSwXE0Ma8LhmR5fqbxokoRubJUAODiqJ8ofm15c823Onwa&#xA;Lb3Uw1BLuUTH6uI4Y7P0OTS0mY/H9biCqgZgWo4QqwCrNsVVNG/3hP8AxmuP+T74qjcVSTSv+OXZ&#xA;/wDGCP8A4gMVSPzj5o1jQ7vQ4LDTbe/XWLt7J3nu3tTE628t0GCpb3PMGO2k7r8XEdCSqrG4vz38&#xA;tSQoRpmoC6ntbO+s9PD6e9zNDqE0MEBCR3j+kWa7iNJimzbVocVUm/5yC8pji66ZqjQG3e+ab07V&#xA;eNlGkEjXRje4Sb0it0pSiVeh4g0xVefzysH1KfS7fy5qrX9nNpkN9FKbFEhOrzxxWoMi3MiszpMH&#xA;ULUdmZTWiqba3+amk6FZa5fapavHZ6JqiaVJJHNbhn52cF56oW4ktgaC44+mhdzSoB7KpGP+cjfI&#xA;DfYivXY2st4ECQBuEFl9dkXi0wPJQkkLdllRlYrVCyr062lkmtopZIXt5JEV3t5SheMsKlHMbSJy&#xA;XoeLEeBOKug/47EH/MPP/wAThxVNcVdir5+uPzy0/RfNOpeVhpMtzdw6pfRib1ooY2aS7lkG8lAv&#xA;26bnGk2ifI35u2Pnn8xNC06002a0axe7uJJXdZFp9Vlip8Hu/XGlt7xih2KuxV2KuxV2KuxV2Kpb&#xA;qfJLy2m4O8axyoxjRpCGZoyKhAx/ZOKqP1tP99T/APSPN/zRiqXzaV5dne4kn0dJXu1ljumewZjK&#xA;lwkccyyExfGJI4Y1cH7QVQdgMVQK+S/IC2ptF8rWS2hLMbcaUojq5jZjw9HjuYIyf9VfAYqh9M8h&#xA;eR7CKRf0Gl3LJfzao91daeJZjdzTyTiQv6IPKIzFI2+0q0FcVR8/lrydcW5tp/L9vLbm3jsjC+m8&#xA;kNrC/qRQcTFT0o3+JU6A7gYqlt3+X/kuQWqWWjR6ZFBeWt7cJZacITcGwq1tHIywg8Y34sPYcehO&#xA;KpzpukeXNLKHTdHjsTGJFjNtYNDxE7K8oHCJaeo0as3iQCemKph9bT/fU/8A0jzf80YqjNIR1shz&#xA;UoWkmcKwKni8rMtQdxscVRmKpDYLqUNjbQyadOHjiRHHO3O6qAf924q3cWzXLQtcaQ8zW7+rbtJ9&#xA;WcxyFGjLpWQ8W4SMtR2JHfFUsi8neXIbn61F5RtY7nhDF66W1ir8Lb0zAnINXjF6EfAfs8Fp9kYq&#xA;lb/lZ5KbVrHUl8oW8T6ekywW0dtp6wF5zCfWZK/3sf1ZRG4PwgnFUztvJnlq1tJbK28oWkFnN6Ym&#xA;torawSJxDIZouSKwU8JSXWvRtxviqzUPI/lXUryW91HybZ3t5cFWnubi1sJZZGReCl3dmZiq7Cp6&#xA;YqhdG/LzQNP0u1srjy6mpS2y3Km8u4bF5WN87vdftUVZmlbki7UNOmKsn9S+/wCrfP8A8FB/1VxV&#xA;dZpeNqkcslpJBEkEqmR2iI5M8RAojueintiqSfmb+ZWneQNL0/U9RtpLi0vLwWcrRV5RcoJZEfiF&#xA;flyljSOm32612oVUh/5X75Ri07y7c3iyw3OswQ3N9bRw3U4s4pNPGoSsJIrdluPQWWIScN1Vw7cR&#xA;iqBT81vy01Ma48+nWN1r2nWL6pFa+k0pu7aPT4r31RPLbpwDeoY19Qcvhrx7BVEaV+bP5c6FrN3o&#xA;vmCHT/LHmW3lhgmt7NZLiForiGGeKX60lrbhY/39G9VV4lWP2fixVNbf89Py2eGGSfVTD9Zu2sbb&#xA;/Rb6jzBto6yW8f7wIVaVafu+QBNCCVWZaJrWma3pNrq2lzfWNPvYxLbTcXTkjdDxcK4+RGKo3FXY&#xA;q7FXYq7FXYqlmphnvbaL1JEjMczkRu8dSrRgVKFT+0cVUvqaf79uP+kif/mvFWMa95+8kaDrX6F1&#xA;TU7uHUhbreyQoNQmEdszmP15ZIVkjjjDCjO7AL3pirJ/qaf79uP+kif/AJrxV0SGC9tOEspEkjI6&#xA;vLJICPSdujsw6qMVSjVPMvl3RLGwm1m6vBPewNOsdst/dSFIlRp5TFaCVkij9ReTlQi8huKjMIzm&#xA;SaLJUsvNfkC+kWKy8y2lzK0yWqxw6oHY3EgYpDxWYn1GEbUXqaHwwcc/NdkJq/nvyBpGoTadqOry&#xA;wX0BmWS353rPyt7eG6kChOXMiG6iYca1rQVYEAiUyuyYW3mDyVdMUttft53EnolY9SLn1fVjg4UW&#xA;Y/F608cdOvJlXqRg45rQTvSyxtKMzNxlmQFiWPFJnVak1JoBmXjNxDEoPyz5jg1+0vLmGFoVs9Qv&#xA;dNZXIJZ7C5e2ZxTszR1GTVDadb+rp9tLJNcM7xIzt9Ym3JUEn7eKoj6mn+/bj/pIn/5rxV31NP8A&#xA;ftx/0kT/APNeKu+pp/v24/6SJ/8AmvFWNeXfPXkvzHfiw0bU7q5uTbi6Sv1+JGiMcEtUllCRsyx3&#xA;kLMqtyXmtQMVZL9TT/ftx/0kT/8ANeKu+pp/v24/6SJ/+a8Vd9TT/ftx/wBJE/8AzXirdmhi1aJF&#xA;klZHgmLLJLJIKq8QBo7Nv8RxVGaho+k6kI11Gyt70QtzhFxEkoRv5l5g0PyxVLJ/IHkO4YPP5b0u&#xA;VgqRhnsrdiEiUJGtSnRFACjsMVVovJnk+KR5ItC0+OSSE2sjrawKzW7IIzCxCbxlFC8elBTFUPH+&#xA;XnkCONY4/LOlJGkbwoi2NsFEUoIkjACfZcO3IdDU4qqyeRvJMs73Enl/TXuJJRPJM1nAXaYFmEhY&#xA;pUuC7Hl13OKppYafYadZw2On20VnZW68ILW3RYoo1H7KIgCqPkMVV8VdirsVdirsVdiqU6tc28Go&#xA;WjTypEphnALsFBPKLxxVS/Sul/8ALZB/yMT+uKsS1LyJ+X2p+eYvOepSQX2pW9mtjBbXLW81tGI5&#xA;TMkyI6MyzKxNHDbDFWW/pXS/+WyD/kYn9cVajvbOfULFIJ45XErEqjqxp6Mm9AcVSPU9C0bWYNLu&#xA;xrk2j6lZ2cln9ZsZbZZTb3QiM8Di4jnUBmt0PJVDqV+FhvXAJIJZMZg/I/8ALK21DRr211a7thob&#xA;xtZ20V5CsJSHUJ9SSGReFWjE9ztvWiJQ1BJPiSWkde/lJ+WV5rlrrU15NJe2k1nPC01+1yS9k8jj&#xA;nJctNLIJVl9OXm5qiqopTcccqpaQKflfodt5r0jU01ybUo4dSu9Y1S71K9jlmeR4beOC2UIkfKJZ&#xA;LWGReX2fSUeFDxmlehnRtC1/Q5LLVbO31TTZp5nNvcRpPCxW4dlbiwZTQ7jMvH9IQWP/AJdflR5d&#xA;8ptd3a6RpsWqvqGoTWd7aQIJI7K6uZJLeD1OCMvCBlQqNhSgqMmhNtL1TTBplmDeQAiCOo9RP5B7&#xA;4qiv0rpf/LZB/wAjE/rirv0rpf8Ay2Qf8jE/rirv0rpf/LZB/wAjE/rirFfI/kvyJ5Njl/RU8Ul1&#xA;OkEMl/cPbtcmG2tobaOL1UWNvT42yvx6cyx74qyr9K6X/wAtkH/IxP64q79K6X/y2Qf8jE/rirv0&#xA;rpf/AC2Qf8jE/rirrK9s59ahWCeOVhbTkhHViB6kPgcVTvFXYq7FXYq7FXYq7FXYq7FXYq7FXYqg&#xA;b+6u47iCC3MamRJHZpFL/YKCgAZP58VUfX1f/f1v/wAiX/6q4q719X/39b/8iX/6q4q719X/AN/W&#xA;/wDyJf8A6q4q719X/wB/W/8AyJf/AKq4q719X/39b/8AIl/+quKu9fV/9/W//Il/+quKu9fV/wDf&#xA;1v8A8iX/AOquKu9fV/8Af1v/AMiX/wCquKovTriW4tRJLx9QPIjcQQD6cjJUAlqV4+OKonFUmtL7&#xA;V7i0hnMtupljV+PouacgDT+9xVV9fV/9/W//ACJf/qrirvX1f/f1v/yJf/qrirvX1f8A39b/APIl&#xA;/wDqrirvX1f/AH9b/wDIl/8AqrirvX1f/f1v/wAiX/6q4q719X/39b/8iX/6q4q719X/AN/W/wDy&#xA;Jf8A6q4qutbu/OoJbzvE8bxSSAxxshBRkHd3/nxVMsVdirsVdirsVdirsVdirsVdirsVdiqW6h/x&#xA;0rX/AIwz/wDE4sVbxV2KvIbz8sfP91qIWK8tdPsIb3U5kvLO/u4ryW21bWrbUZYz6UEJgZbaB4vg&#xA;mbkW7DFUP5Y/K38zNM8oalpmq6pZatqt3qFjq0Ej3V0kCy2+qi/nhoYXCrLxLessfMs/FgVRDiqn&#xA;L5c/N1fPFq17qqWljrOoBzpmm3up3kUFhC31u7kkluBEIy7QQW6+mEWkrhFXkcVZF+V3kj8xNE1K&#xA;5vvOWv8A6WJtI7a0hhuruWFX9aWSaZ4p6IXkBjPL9n4kXigUYq9IxV2Kqmjf7wn/AIzXH/J98VRu&#xA;KpJpX/HLs/8AjBH/AMQGKorFWC/m15N8weadGtbXQ2tVuYjerJ9dlkhThe6ZdWHINHFcEtG12H4l&#xA;d6UqMVYlqH5UfmZNq6X8XmESpDqn6Sit57++oqCXUVNvCwVjbLLaXdvA3pU48WYA8RyVTjWfJP5j&#xA;SeY7uXSLiytdJvdetdXnuhf6hBdfVY7e0t7i3+r28aQuXW0YfvHdaNsFYcsVYhoXkb879Wso9TTz&#xA;Q0dpeWF1BGl1c6hBcI6Ws9lZzrGtUAnAt7qRmX1FcFloWcMq96treO2toreMu0cKLGjSu8rkKKAv&#xA;JIWd223ZiSe5xVUxVTg/47EH/MPP/wAThxVNcVdirsVdirsVdirsVdirsVdirsVdiqGu7Fbl45PV&#xA;eGSMMqvHxrxehIIdXH7IxVR/RT/8t0/3Q/8AVLFXfop/+W6f7of+qWKu/RT/APLdP90P/VLFXfop&#xA;/wDlun+6H/qlirv0U/8Ay3T/AHQ/9UsVd+in/wCW6f7of+qWKu/RT/8ALdP90P8A1SxV36Kf/lun&#xA;+6H/AKpYqirW2S2gEKEsAWYs1KlnYsxNABuTiqriqWxaL6USRR3k6xxqFQUhNAooOseKr/0U/wDy&#xA;3T/dD/1SxV36Kf8A5bp/uh/6pYq79FP/AMt0/wB0P/VLFXfop/8Alun+6H/qlirv0U//AC3T/dD/&#xA;ANUsVd+in/5bp/uh/wCqWKu/RT/8t0/3Q/8AVLFV9tpqw3IuGnlmdUaNRJ6YADlSfsIn8gxVGYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FX//Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Chih Wang</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <xmpTPg:MaxPageSize
    stDim:w="464.000000"
    stDim:h="298.000000"
    stDim:unit="Points"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="CALIBRI"
      stFnt:fontFamily="CALIBRI"
      stFnt:fontType="Unknown"
      stFnt:versionString="Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895"
      stFnt:composite="False"
      stFnt:fontFileName="MyriadPro-Regular.otf"/>
     <rdf:li
      stFnt:fontName="CALIBRI,Bold"
      stFnt:fontFamily="CALIBRI,Bold"
      stFnt:fontType="Unknown"
      stFnt:versionString="Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895"
      stFnt:composite="False"
      stFnt:fontFileName="MyriadPro-Regular.otf"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 1 
/Lookup <~
z^TFEr~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 45 
/Lookup <~
!WiK)!s8`-"9Su2"9]&3"U,86"pGG9#6te?#RD"B#RM(C$4.CH$k+!R%Lj?W&.Tc^&J-&b&eZ>f'+uVl
'bi%r()AD#(`"b)(`+k+)&P(.)]:F3)]L^9*#pm;*$%!=+!!EC+<NiK+sB8Q,9]JU,U>k[-72:a-RVXh
.On9q.kFX"/hC-*/hU<-0/$N00J?`40f!/;1,EA>1,NJ@2)StG2E,FP3&tjV3]_<^4$7Wc~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 63 
/Lookup <~
!!!$"!W`B'!WiK)!s/]-"9]#2"U,86"pPP;#6te?#RM(C#mq@H$4.FI$k+!R%1X?X%M'Q[&J-&b&J6/d
&eZDh'+uYm'GDkp'br5!(De_)(`+k+(`>(/)]CO5)B:X8*#q!>*?I<C+<NiK+X'2Q+sKDT,:#bZ,pc4b
-RV^j.4S9s.P"L!.kOm(/h^K10/6f60f!5=0f*A@1c8qH1cB(K2)f=O2`YgW3'23^3]qNb4$@ih4?e)l
4?n5o5!a`"5=0u'5t-P06:Zq76Um%96q<=>6qNRD77rjI7SK6P85>]X8Pu2b8l;Jh92_\k9iS1t:0+V(
~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -298 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 298 li
464 298 li
464 0 li
cp
clp
gsave
0 298 mo
464 298 li
464 0 li
0 0 li
0 298 li
clp
396.09 5.83982 mo
393.17 5.83982 393.17 8.65978 393.5 8.49983 cv
393.5 49.7498 li
393.17 49.5398 li
393.17 52.3598 396.09 52.3598 395.75 51.9998 cv
415.25 51.9998 li
415.03 52.3598 li
415.03 52.3598 417.95 52.3598 418.25 49.7498 cv
418.25 8.49983 li
417.95 8.65978 li
417.95 8.65978 417.95 5.83982 415.25 5.49983 cv
395.75 5.49983 li
396.09 5.83982 li
false sop
/3 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /3 /CSD get_res sepcs
.498 sep
ef
396.63 6.43025 mo
393.88 6.43025 393.88 9.18016 394.25 9.25021 cv
394.25 49.0003 li
393.88 49.0302 li
393.88 51.7703 396.63 51.7703 396.5 52.0003 cv
414.5 52.0003 li
414.49 51.7703 li
414.49 51.7703 417.24 51.7703 417.5 49.0003 cv
417.5 9.25021 li
417.24 9.18016 li
417.24 9.18016 417.24 6.43025 414.5 6.25021 cv
396.5 6.25021 li
396.63 6.43025 li
.772549 .690639 .638117 .874083 cmyk
ef
415.259 31.161 mo
409.906 26.176 404.26 20.2102 399.666 13.7409 cv
415.259 13.7409 li
415.259 31.161 li
.0196078 .0156863 0 .815686 cmyk
f
gsave
390.445 48.348 mo
417.778 48.348 li
417.778 7.71797 li
390.445 7.71797 li
390.445 48.348 li
clp
393.5 45.2408 mo
390.445 45.2408 li
390.445 45.2372 li
393.5 44.2188 li
393.5 45.2408 li
/4 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /4 /CSD get_res sepcs
.498039 sep
f
393.5 45.2408 mo
393.5 45.2408 li
393.5 44.2188 li
393.5 44.2188 li
393.5 45.2408 li
417.578 15.8255 mo
417.5 15.7476 li
417.5 15.5527 li
417.578 15.8255 li
1 /4 /CSD get_res sepcs
.74902 sep
f
416.741 32.5236 mo
416.495 32.2999 416.248 32.0747 416 31.8466 cv
416 13.1998 li
416.08 13.2798 li
416 12.9998 li
399.146 12.9998 li
398.975 12.7536 398.806 12.5063 398.639 12.2588 cv
415.259 12.2588 li
415.259 7.71797 li
415.262 7.71797 li
416.559 12.2588 li
417.124 12.2588 li
416.785 13.0495 li
417.5 15.5527 li
417.5 15.7476 li
416.741 14.9888 li
416.741 32.5236 li
416 13.1998 mo
415.94 13.1399 li
416 12.9998 li
416 13.1998 li
.0196078 .0156863 0 .964706 cmyk
f
416 31.8466 mo
415.754 31.6204 415.506 31.3915 415.259 31.161 cv
415.259 13.7409 li
399.666 13.7409 li
399.491 13.4949 399.318 13.2472 399.146 12.9998 cv
416 12.9998 li
415.94 13.1399 li
416 13.1998 li
416 31.8466 li
416.08 13.2798 mo
416 13.1998 li
416 12.9998 li
416.08 13.2798 li
.0117647 .00784314 0 .905882 cmyk
f
393.5 12.7716 mo
392.841 12.2588 li
393.5 12.2588 li
393.5 12.7716 li
1 /4 /CSD get_res sepcs
.498039 sep
f
393.5 12.7718 mo
393.5 12.7716 li
393.5 12.2588 li
393.5 12.2588 li
393.5 12.7718 li
1 /4 /CSD get_res sepcs
.74902 sep
f
grestore
407.75 10.7499 mo
403.25 10.7499 li
403.25 10.7498 li
407.75 10.7498 li
407.89 10.3998 li
408.03 10.2598 li
407.75 9.99977 li
408.03 9.72982 li
407.89 9.59984 li
407.75 9.24986 li
403.25 9.24986 li
403.25 9.24986 li
403.25 9.24986 li
403.25 9.24986 li
407.75 9.24986 li
408.06 9.38994 li
408.2 9.52991 li
408.5 9.24986 li
408.5 9.99989 li
408.2 10.3599 li
408.06 10.4999 li
407.75 10.7499 li
403.25 10.7498 mo
403.06 10.4999 li
402.92 10.3599 li
403.249 10.0005 li
403.09 10.2598 li
403.231 10.3998 li
403.25 10.7498 li
402.92 9.52991 mo
403.06 9.38994 li
403.25 9.24995 li
403.25 9.24996 li
402.92 9.52991 li
.0196078 .0156863 0 .964706 cmyk
f
403.25 10.7498 mo
403.25 10.7498 li
403.25 10.7498 li
403.25 10.7498 li
403.249 10.0005 mo
403.25 9.99977 li
403.09 9.72982 li
403.231 9.59984 li
403.25 9.24996 li
403.25 9.24986 li
403.25 9.24986 li
403.25 9.99989 li
403.249 10.0005 li
403.25 9.24995 mo
403.25 9.24986 li
403.25 9.24995 li
.0196078 .0156863 0 .666667 cmyk
f
407.75 10.7498 mo
403.25 10.7498 li
403.25 10.7498 li
403.231 10.3998 li
403.09 10.2598 li
403.249 10.0005 li
403.25 9.99989 li
403.25 9.24986 li
407.75 9.24986 li
407.89 9.59984 li
408.03 9.72982 li
407.75 9.99977 li
408.03 10.2598 li
407.89 10.3998 li
407.75 10.7498 li
403.25 9.24996 mo
403.25 9.24995 li
403.25 9.24986 li
403.25 9.24986 li
403.25 9.24996 li
.0117647 .00784314 0 .682353 cmyk
f
gsave
395 6.24997 mo
394.73 6.10001 li
394.61 6.161 394.5 6.22001 394.25 6.24997 cv
394.401 6.27901 li
394.3 6.34999 394.2 6.42003 394.25 6.24997 cv
394.12 6.49994 li
394.03 6.56999 393.95 6.65002 394.25 7 cv
393.88 6.74004 li
393.809 6.81903 393.75 6.89999 393.5 7 cv
393.691 6.99001 li
393.63 7.08004 393.58 7.16901 393.5 7 cv
393.53 7.24997 li
393.44 7.43095 393.37 7.60995 393.5 7.75003 cv
393.321 7.77001 li
393.269 7.93995 393.241 8.09002 393.5 8.49995 cv
393.5 49.75 li
393.2 50.04 li
393.22 50.2 393.259 50.34 393.5 50.5 cv
393.44 50.8501 li
393.49 50.9701 393.559 51.081 393.5 51.25 cv
393.63 51.18 li
393.691 51.27 393.77 51.3589 393.5 51.25 cv
393.84 51.45 li
393.92 51.53 394.01 51.61 394.25 52 cv
394.09 51.68 li
394.179 51.7401 394.269 51.81 394.25 52 cv
394.36 51.8601 li
394.45 51.92 394.54 51.971 395 52 cv
395.16 52.22 li
395.33 52.27 395.491 52.3001 395.75 52 cv
395.63 52.32 li
395.9 52.36 396.09 52.36 395.75 52 cv
415.25 52 li
415.49 52.32 li
415.63 52.3001 415.79 52.27 416 52 cv
415.96 52.22 li
416.13 52.169 416.309 52.1 416.75 52 cv
416.49 52.01 li
416.75 52 li
416.759 51.8601 li
416.849 51.81 416.94 51.7401 416.75 52 cv
417.03 51.68 li
417.11 51.61 417.2 51.53 417.5 51.25 cv
417.27 51.45 li
417.35 51.3589 417.43 51.27 417.5 51.25 cv
417.49 51.18 li
417.56 51.081 417.63 50.9701 417.5 50.5 cv
417.68 50.8501 li
417.74 50.73 417.78 50.61 417.5 50.5 cv
417.82 50.48 li
417.86 50.34 417.901 50.2 418.25 49.75 cv
417.919 50.04 li
417.94 49.89 417.95 49.721 418.25 49.75 cv
418.25 33.25 li
417.95 33.61 li
409.89 26.44 400.58 16.7301 395 6.24997 cv
394.85 6.05994 li
394.809 6.08096 394.77 6.09002 395 6.24997 cv
393.5 8.49995 mo
393.22 8.22001 li
393.169 8.48996 393.169 8.67 393.5 8.49995 cv
393.5 49.75 mo
393.169 49.54 li
393.169 49.721 393.179 49.89 393.5 49.75 cv
393.5 50.5 mo
393.3 50.48 li
393.34 50.61 393.38 50.73 393.5 50.5 cv
415.03 52.36 mo
415.03 52.36 415.219 52.36 415.25 52 cv
415.03 52.36 li
394.63 52.01 mo
394.809 52.1 394.99 52.169 395 52 cv
394.63 52.01 li
clp
gsave
392.42 53.11 mo
418.698 53.11 li
418.698 5.30805 li
392.42 5.30805 li
392.42 53.11 li
eclp
gsave
392.42 53.11 mo
418.699 53.11 li
418.699 5.30701 li
392.42 5.30701 li
392.42 53.11 li
clp
415.03 52.36 mo
415.03 52.3598 li
415.031 52.3598 415.032 52.3598 415.034 52.3597 cv
415.032 52.36 415.03 52.36 415.03 52.36 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 413.166 248.987 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
415.03 52.3598 mo
415.25 52 li
415.222 52.3275 415.063 52.3571 415.034 52.3597 cv
415.032 52.3598 415.031 52.3598 415.03 52.3598 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 413.166 248.987 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~It)rtIt)rtIf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
395.81 52.3375 mo
395.76 52.3375 395.697 52.33 395.63 52.32 cv
395.701 52.1301 li
395.778 52.1007 395.801 52.0545 395.75 52 cv
395.75 52 li
395.75 52 li
395.75 51.9999 395.75 51.9999 395.75 51.9998 cv
396.5 51.9998 li
396.5 51.9999 396.5 52 396.5 52 cv
395.75 52 li
396.005 52.27 395.962 52.3375 395.81 52.3375 cv
415.49 52.32 mo
415.489 52.3192 li
415.514 52.3156 415.539 52.3117 415.565 52.3074 cv
415.54 52.3127 415.514 52.3165 415.49 52.32 cv
395.336 52.2519 mo
395.275 52.2519 395.218 52.2371 395.16 52.22 cv
395.091 52.1248 li
395.226 52.1522 395.349 52.1644 395.453 52.1644 cv
395.503 52.1644 395.548 52.1616 395.588 52.1564 cv
395.493 52.2284 395.412 52.2519 395.336 52.2519 cv
416.384 52.0911 mo
416.506 52.0449 416.631 51.9907 416.755 51.9272 cv
416.75 52 li
416.601 52.0337 416.482 52.0639 416.384 52.0911 cv
416.75 52 mo
416.785 51.9527 416.81 51.9163 416.828 51.8887 cv
416.84 51.8818 416.853 51.8746 416.866 51.8674 cv
416.75 52 li
415.25 52 mo
414.5 52 li
414.5 51.9998 li
415.25 51.9998 li
415.25 52 li
394.25 52 mo
394.269 51.81 394.179 51.7401 394.09 51.68 cv
394.25 52 li
394.01 51.61 393.92 51.53 393.84 51.45 cv
393.5 51.25 li
393.589 51.2859 393.64 51.3003 393.666 51.3003 cv
393.72 51.3003 393.671 51.2403 393.63 51.18 cv
393.5 51.25 li
393.558 51.0846 393.493 50.9748 393.443 50.8577 cv
393.709 51.4084 394.131 51.7479 394.544 51.9423 cv
394.451 51.9183 394.405 51.8903 394.36 51.8601 cv
394.25 52 li
393.222 50.1576 mo
393.211 50.1193 393.205 50.0802 393.2 50.04 cv
393.203 50.0374 li
393.208 50.0782 393.215 50.1183 393.222 50.1576 cv
418.25 49.7504 mo
418.25 49.7503 li
418.25 49.75 li
418.25 49.75 418.25 49.75 418.25 49.75 cv
418.25 49.7498 418.25 49.7498 418.25 49.7498 cv
418.25 33.2503 li
418.25 33.25 li
418.25 49.75 li
418.25 49.75 li
418.25 49.7502 418.25 49.7503 418.25 49.7504 cv
393.171 49.6174 mo
393.169 49.5925 393.169 49.5664 393.169 49.54 cv
393.17 49.5406 li
393.17 49.5665 393.17 49.5919 393.171 49.6174 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[27.662 0 0 -21.8528 392.42 266.743 ]ct
snap_to_device
<<
/T 1
/W 20 
/H 16 
/M[20 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!2&J5Te&J5Te&J5Te&J5Te!!!!2&J5Te
&J5Te&J5Te&J5Te!!!!2&J5Te&J5Te&J5Te&J5Te!!!!2&J5Te&J5Te&J5Te&J5Te!!!!2&J5Te&J5Te
&J5Te&J5Te!!!!2&J632+sJ3T+sJ3T+sJ3T!!!!2&J632+sJ3T+sJ3T+sJ3T!!!!2&J632+sJ3T+sJ3T
+sJ3T!!!!2&J632+sJ3T+sJ3T+sJ3T!!!!2&J6321G^gC1G^gC1G^gC!!!!2&J6321G^gC1G^gC1G^gC
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
415.489 52.3192 mo
415.25 52 li
415.25 51.9998 li
414.5 51.9998 li
414.49 51.7703 li
414.49 51.7703 417.24 51.7703 417.5 49.0003 cv
417.5 45.2408 li
417.778 45.2408 li
417.778 45.2299 li
417.5 44.9518 li
417.5 42.745 li
417.778 42.0497 li
417.778 41.5532 li
417.5 41.8314 li
417.5 33.208 li
417.65 33.3428 417.8 33.4769 417.95 33.61 cv
418.25 33.2503 li
418.25 49.7498 li
418.25 49.7498 li
418.227 49.7478 418.206 49.7468 418.186 49.7468 cv
417.948 49.7468 417.938 49.9015 417.919 50.04 cv
418.25 49.7503 li
418.25 49.7504 li
417.901 50.2001 417.86 50.3401 417.82 50.48 cv
417.5 50.5 li
417.5 50.5 li
417.5 50.5 li
417.63 50.9701 417.56 51.081 417.49 51.18 cv
417.5 51.25 li
417.5 51.25 li
417.5 51.25 li
417.2 51.53 417.11 51.61 417.03 51.68 cv
416.866 51.8674 li
416.853 51.8746 416.84 51.8818 416.828 51.8887 cv
416.864 51.8314 416.868 51.8122 416.854 51.8122 cv
416.838 51.8122 416.799 51.8381 416.759 51.8601 cv
416.755 51.9272 li
416.631 51.9907 416.506 52.0449 416.384 52.0911 cv
416.189 52.1445 416.073 52.1862 415.96 52.22 cv
416 52 li
415.827 52.2228 415.688 52.2822 415.565 52.3074 cv
415.539 52.3117 415.514 52.3156 415.489 52.3192 cv
417.5 51.25 mo
417.43 51.27 417.35 51.3589 417.27 51.45 cv
417.5 51.25 li
395.453 52.1644 mo
395.349 52.1644 395.226 52.1522 395.091 52.1248 cv
395 52 li
394.772 51.9856 394.635 51.9659 394.544 51.9423 cv
394.131 51.7479 393.709 51.4084 393.443 50.8577 cv
393.442 50.8551 393.441 50.8526 393.44 50.8501 cv
393.5 50.5 li
393.451 50.5944 393.415 50.6298 393.387 50.6298 cv
393.347 50.6298 393.324 50.5566 393.3 50.48 cv
393.5 50.5 li
393.32 50.3803 393.252 50.2717 393.222 50.1576 cv
393.215 50.1183 393.208 50.0782 393.203 50.0374 cv
393.5 49.75 li
393.417 49.7863 393.355 49.8018 393.308 49.8018 cv
393.201 49.8018 393.176 49.7194 393.171 49.6174 cv
393.17 49.5919 393.17 49.5665 393.17 49.5406 cv
393.5 49.75 li
393.5 45.2408 li
394.25 45.2408 li
394.25 49.0003 li
393.88 49.0302 li
393.88 51.7684 396.626 51.7703 396.5 51.9998 cv
395.75 51.9998 li
395.75 51.9999 395.75 51.9999 395.75 52 cv
395.691 52.0678 395.638 52.1187 395.588 52.1564 cv
395.548 52.1616 395.503 52.1644 395.453 52.1644 cv
395.701 52.1301 mo
395.75 52 li
395.801 52.0545 395.778 52.1007 395.701 52.1301 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[27.662 0 0 -21.8528 392.42 266.743 ]ct
snap_to_device
<<
/T 1
/W 20 
/H 16 
/M[20 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)s(LkpkCLkpkCLkpkCLkpkCIt)s(LkpkC
LkpkCLkpkCLkpkCIt)s(LkpkCLkpkCLkpkCLkpkCIt)s(LkpkCLkpkCLkpkCLkpkCIt)s(LkpkCLkpkC
LkpkCLkpkCIt)s(Lkq.SOH>QcOH>QcOH>QcIt)s(Lkq.SOH>QcOH>QcOH>QcIt)s(Lkq.SOH>QcOH>Qc
OH>QcIt)s(Lkq.SOH>QcOH>QcOH>QcIt)s(Lkq.SR@0J2R@0J2R@0J2It)s(Lkq.SR@0J2R@0J2R@0J2
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
414.5 52 mo
396.5 52 li
396.5 52 396.5 51.9999 396.5 51.9998 cv
396.626 51.7703 393.88 51.7684 393.88 49.0302 cv
394.25 49.0003 li
394.25 45.2408 li
415.259 45.2408 li
415.259 48.3484 li
415.259 48.348 li
416.502 45.2408 li
417.5 45.2408 li
417.5 49.0003 li
417.24 51.7703 414.49 51.7703 414.49 51.7703 cv
414.5 51.9998 li
414.5 52 li
404.375 50.2325 mo
404.797 50.5906 405.3 50.7901 405.85 50.7901 cv
405.85 50.79 li
406.468 50.7899 407.026 50.5415 407.389 50.1017 cv
407.839 49.7342 408.09 49.176 408.09 48.5601 cv
407.851 48.3422 li
407.851 48.3421 407.851 48.3419 407.851 48.3418 cv
408.09 48.56 li
408.09 48.56 li
408.09 48.4016 408.071 48.2495 407.909 48.2328 cv
407.949 48.151 407.983 48.0667 408.01 47.98 cv
407.75 48.25 li
407.75 48.25 li
407.75 48.25 li
407.75 48.25 li
407.75 48.2502 407.75 48.2505 407.75 48.2507 cv
407.75 48.2501 li
408.09 47.3301 407.09 46.3301 405.85 46.3301 cv
405.5 46.0001 li
404.732 46.2882 403.872 47.0866 403.666 48.103 cv
403.632 48.2036 403.579 48.2824 403.437 48.2824 cv
403.387 48.2824 403.326 48.2725 403.25 48.25 cv
403.62 48.5596 li
403.62 48.5598 403.62 48.56 403.62 48.5601 cv
403.25 48.2501 li
403.437 49.0298 403.786 49.671 404.244 50.1142 cv
404.286 50.1563 404.33 50.1958 404.375 50.2325 cv
405.684 50.6525 mo
405.5 50.5001 li
405.5 50.5001 405.5 50.5002 405.5 50.5002 cv
405.684 50.6525 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[26.2789 0 0 -9.5606 392.42 254.451 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 7 
/M[19 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I
$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47(G#mgnE#mgnE#mgnE#mgqG$4."F#mgnE#mgnE
#mgnE#l~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!~>
<~mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2
mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBQ4n*f`6n*f`6n*f`6n*f]4mdKW5n*f`6n*f`6
n*f`6mf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.85 50.7901 mo
405.3 50.7901 404.797 50.5906 404.375 50.2325 cv
404.62 50.4332 404.902 50.5505 405.185 50.5505 cv
405.291 50.5505 405.396 50.5342 405.5 50.5 cv
405.5 50.5002 li
405.5 50.5002 405.5 50.5001 405.5 50.5001 cv
405.684 50.6525 li
405.849 50.79 li
405.849 50.79 405.849 50.79 405.85 50.79 cv
405.85 50.7901 li
404.244 50.1142 mo
403.786 49.671 403.437 49.0298 403.25 48.2501 cv
403.62 48.5601 li
403.62 48.56 403.62 48.5598 403.62 48.5596 cv
403.62 48.56 li
403.62 49.183 403.877 49.7469 404.244 50.1142 cv
407.389 50.1017 mo
407.723 49.6969 407.891 49.1299 407.787 48.4451 cv
407.809 48.4113 407.831 48.377 407.851 48.3422 cv
408.09 48.5601 li
408.09 49.176 407.839 49.7342 407.389 50.1017 cv
404.999 49.2774 mo
404.792 49.2055 404.608 49.1101 404.455 49.0003 cv
404.771 49.0003 li
405.044 49.2346 li
404.999 49.2774 li
407.689 48.579 mo
407.689 47.9652 li
407.488 47.7634 li
407.143 47.4171 li
407.136 47.411 li
406.988 47.2636 li
406.997 47.2726 li
406.536 46.811 li
405.248 46.811 li
405.056 46.9726 li
404.715 47.2592 li
404.687 47.2891 li
404.55 47.4361 li
404.543 47.443 li
404.061 47.9876 li
404.061 48.5595 li
404.013 48.4574 403.991 48.3528 404 48.25 cv
403.7 47.98 li
403.689 48.0221 403.679 48.0642 403.666 48.103 cv
403.872 47.0866 404.732 46.2882 405.5 46.0001 cv
405.85 46.3301 li
407.09 46.3301 408.09 47.3301 407.75 48.2501 cv
407.75 48.2507 li
407.765 48.3166 407.777 48.3813 407.787 48.4451 cv
407.756 48.4906 407.724 48.5353 407.689 48.579 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -6.829 402.102 253.085 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 5 
/M[5 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!r~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bq>~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.85 50.79 mo
405.684 50.6525 li
405.5 50.5002 li
405.688 50.5344 405.867 50.5506 406.038 50.5506 cv
406.589 50.5506 407.047 50.3814 407.389 50.1017 cv
407.026 50.5415 406.468 50.7899 405.85 50.79 cv
404.375 50.2325 mo
404.33 50.1958 404.286 50.1563 404.244 50.1142 cv
404.287 50.1553 404.33 50.1948 404.375 50.2325 cv
408.09 48.56 mo
407.851 48.3418 li
407.872 48.306 407.891 48.2696 407.909 48.2328 cv
408.071 48.2495 408.09 48.4016 408.09 48.56 cv
403.62 48.5596 mo
403.25 48.25 li
403.326 48.2725 403.387 48.2824 403.437 48.2824 cv
403.579 48.2824 403.632 48.2036 403.666 48.103 cv
403.636 48.2509 403.62 48.4034 403.62 48.5596 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -5.4632 402.102 251.719 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~_o'C0_o'C0_o'C0_o'C0_o'C0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.849 50.79 mo
405.684 50.6525 li
405.85 50.79 li
405.849 50.79 405.849 50.79 405.849 50.79 cv
406.038 50.5506 mo
405.867 50.5506 405.688 50.5344 405.5 50.5002 cv
405.5 50.5 li
405.396 50.5342 405.291 50.5505 405.185 50.5505 cv
404.902 50.5505 404.62 50.4332 404.375 50.2325 cv
404.33 50.1948 404.287 50.1553 404.244 50.1142 cv
403.877 49.7469 403.62 49.183 403.62 48.56 cv
403.62 48.5596 li
403.62 48.4034 403.636 48.2509 403.666 48.103 cv
403.679 48.0642 403.689 48.0221 403.7 47.98 cv
404 48.25 li
403.991 48.3528 404.013 48.4574 404.061 48.5595 cv
404.061 49.0003 li
404.455 49.0003 li
404.608 49.1101 404.792 49.2055 404.999 49.2774 cv
404.556 49.6913 li
404.891 50.049 li
405.508 50.049 li
405.714 49.8093 li
405.816 49.6898 li
405.897 49.6898 li
406.157 50.049 li
406.794 50.049 li
406.995 49.8495 li
407.082 49.7631 li
407.689 49.3807 li
407.689 48.579 li
407.724 48.5353 407.756 48.4906 407.787 48.4451 cv
407.891 49.1299 407.723 49.6969 407.389 50.1017 cv
407.047 50.3814 406.589 50.5506 406.038 50.5506 cv
407.787 48.4451 mo
407.777 48.3813 407.765 48.3166 407.75 48.2507 cv
407.851 48.3422 li
407.831 48.377 407.809 48.4113 407.787 48.4451 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -5.4632 402.102 251.719 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~`l?$<`l?$<`l?$<`l?$<`l?$<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.5 49.75 mo
405.849 49.42 li
405.545 49.42 405.255 49.3668 404.999 49.2774 cv
405.044 49.2346 li
404.771 49.0003 li
404.455 49.0003 li
404.272 48.8691 404.135 48.7172 404.061 48.5595 cv
404.061 47.9876 li
404.543 47.443 li
404.55 47.4361 li
404.687 47.2891 li
404.715 47.2592 li
405.056 46.9726 li
405.248 46.811 li
406.536 46.811 li
406.997 47.2726 li
406.988 47.2636 li
407.136 47.411 li
407.143 47.4171 li
407.488 47.7634 li
407.689 47.9652 li
407.689 48.579 li
407.269 49.1069 406.53 49.5054 405.5 49.75 cv
405.62 48.3107 mo
406.085 48.3107 li
406.024 48.2495 li
405.964 48.1897 li
405.751 48.1897 li
405.666 48.2611 li
405.62 48.3107 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -6.829 402.102 253.085 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 5 
/M[5 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~91qoN91qoN91qoN91qoN91qoN='&I)<r~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
406.794 50.049 mo
406.157 50.049 li
405.897 49.6898 li
405.816 49.6898 li
405.714 49.8093 li
405.508 50.049 li
404.891 50.049 li
404.556 49.6913 li
404.999 49.2774 li
405.255 49.3668 405.545 49.42 405.849 49.42 cv
405.5 49.75 li
406.53 49.5054 407.269 49.1069 407.689 48.579 cv
407.689 49.3807 li
407.082 49.7631 li
406.995 49.8495 li
406.794 50.049 li
404.455 49.0003 mo
404.061 49.0003 li
404.061 48.5595 li
404.135 48.7172 404.272 48.8691 404.455 49.0003 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -4.0974 402.102 250.353 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~4?P_g4?P_g4?P_g4?P_~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
393.432 7.61617 mo
393.413 7.50365 393.467 7.37731 393.53 7.24997 cv
393.5 7 li
393.533 7.06966 393.561 7.0955 393.586 7.09549 cv
393.623 7.09549 393.655 7.04293 393.691 6.99001 cv
393.5 7 li
393.75 6.89999 393.809 6.81903 393.88 6.74004 cv
393.884 6.74291 li
393.652 7.02469 393.51 7.33528 393.432 7.61617 cv
394.123 6.49413 mo
394.25 6.24997 li
394.227 6.32806 394.236 6.35552 394.262 6.35552 cv
394.292 6.35551 394.346 6.3174 394.401 6.27901 cv
394.25 6.24997 li
394.5 6.22001 394.61 6.161 394.73 6.10001 cv
394.733 6.10149 li
394.493 6.20898 394.291 6.34375 394.123 6.49413 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 392.42 292.693 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
407.851 48.3418 mo
407.75 48.25 li
407.8 48.2371 407.842 48.2313 407.879 48.2313 cv
407.889 48.2313 407.899 48.2318 407.909 48.2328 cv
407.891 48.2696 407.872 48.306 407.851 48.3418 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 406.251 251.719 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~$47+I$47+I$3~>
<~#6tJ=#6tJ=#6~>
<~!!!!!!!!!!!!~>
<~mdBN2mdBN2mJ~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
406.085 48.3107 mo
405.62 48.3107 li
405.666 48.2611 li
405.751 48.1897 li
405.964 48.1897 li
406.024 48.2495 li
406.085 48.3107 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 404.868 253.085 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!r~>
<~!WiE)!WiE)!W~>
<~!!!!!!!!!!!!~>
<~qYL'bqYL'bq>~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
407.851 48.3422 mo
407.75 48.2507 li
407.75 48.2505 407.75 48.2502 407.75 48.25 cv
407.75 48.25 li
407.851 48.3418 li
407.851 48.3419 407.851 48.3421 407.851 48.3422 cv
407.75 48.25 mo
408.01 47.98 li
407.983 48.0667 407.949 48.151 407.909 48.2328 cv
407.899 48.2318 407.889 48.2313 407.879 48.2313 cv
407.842 48.2313 407.8 48.2371 407.75 48.25 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 406.251 251.719 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!r~>
<~!WiE)!WiE)!W~>
<~!!!!!!!!!!!!~>
<~_o'C0_o'C0_Z~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
417.5 44.9518 mo
416.869 44.3214 li
417.5 42.745 li
417.5 44.9518 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -5.4632 415.933 257.182 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE~>
<~#6tJ=#6tJ=#6tJ=~>
<~!!!!!!!!!!!!!!!~>
<~n*f`6n*f`6n*f`6~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
393.5 44.2188 mo
393.5 12.7718 li
394.25 13.3552 li
394.25 43.9688 li
393.5 44.2188 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -34.145 392.42 287.23 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 25 
/M[3 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!~>
<~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)q~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
394.25 43.9688 mo
394.25 13.3552 li
394.259 13.3623 li
394.259 43.9657 li
394.25 43.9688 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -32.7792 392.42 285.864 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 24 
/M[3 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I
$47+I$47+I~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2
mdBN2mdBN2~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
415.259 43.7589 mo
395.741 43.7589 li
395.741 13.7409 li
399.666 13.7409 li
404.26 20.2102 409.906 26.176 415.259 31.161 cv
415.259 43.7589 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[23.5127 0 0 -32.7792 393.803 285.864 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 24 
/M[17 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2"U,&5"9\i1
"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2"U,&5
"9\i1"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2
"U,&5"9\i1"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\f/
!s8W/"U,&5"9\i1"9\i0!s8W-"U,&5"U"r2"9\i1!s8W-!sJi3"U,#3"9\i1"9S`.!s8]1"U,&4"9\i1
"9\f/!s8W/"U,&5"9\i1"9\i0!s8W-~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W."9\i1!s8W-
!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W."9\i1
!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W.
"9\i1!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-
!s8W."9\i1!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-
!s8W-!s8W."9\i1!s8W-!s8W-!s8T+~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~d*U7je'ldpe'ldpe'ldpe'QIje'ldpe'ldpe'ldpe'l[je'ldpe'ldpe'ldpe'ldmd*pIme'ldpe'ldp
e'ldpd*U7je(3+$f%/F'f%/F'f$Mdme'ln!f%/F'f%/F'f%/3pe'ldsf%/F'f%/F'f%/F!d*pImf%/F'
f%/F'f%/F'd*U7je(3+'g"G'3g"G'3g!J*pe'ln!g"G'3g"G'3g"Fa!e'ldsf%Ja0g"G'3g"G'*d*pIm
f%/O-g"G'3g"G'3d*U7je(3+'g"G'3g"G'3g!J*pe'ln!g"G'7h;-oCh;-H)e'ldsf%Ja0h;-oCh;-o6
d*pImf%/O-g"kK?h;-oCd*U7je(3+'g"G3;h;-oCh9aNte'ln!g"G'7h;-oCh;-H)e'ldsf%Ja0h;.#I
i8EP?d*pImf%/O-g"kKBi8EPOd*U7je(3+'g"G3;i8EPOi6]j"e'ln!g"G'7h;I5Li8Du/e'ldsf%Ja0
h;.#Ii8EP?d*pImf%/O-g"kKBi8EYU~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
416.741 42.5905 mo
416.741 32.5236 li
416.995 32.754 417.248 32.9824 417.5 33.208 cv
417.5 41.8314 li
416.741 42.5905 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -12.2922 415.933 266.743 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 9 
/M[3 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#mgnE#mgnE#mgnE#mgnE#mgnE#m^eB#RC\~>
<~#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP8~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~n*f`6n*f`6n*oi9nF5r:nF5r:nF?&=naZ,~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
393.299 8.56624 mo
393.173 8.56624 393.183 8.41708 393.22 8.22001 cv
393.379 8.37929 li
393.4 8.45995 393.434 8.50638 393.473 8.50638 cv
393.482 8.50639 393.491 8.50424 393.5 8.49983 cv
393.5 8.49983 li
393.411 8.54588 393.345 8.56625 393.299 8.56624 cv
393.358 8.24274 mo
393.256 8.0158 393.282 7.89858 393.321 7.77001 cv
393.397 7.76151 li
393.358 7.94749 393.348 8.11431 393.358 8.24274 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 392.42 292.693 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
394.25 12.2588 mo
393.5 12.2588 li
393.5 8.49995 li
393.5 8.49999 393.5 8.50002 393.5 8.50006 cv
393.5 8.49983 li
393.491 8.50424 393.482 8.50639 393.473 8.50638 cv
393.434 8.50638 393.4 8.45995 393.379 8.37929 cv
393.5 8.49995 li
393.437 8.40014 393.391 8.31577 393.358 8.24274 cv
393.348 8.11431 393.358 7.94749 393.397 7.76151 cv
393.5 7.75003 li
393.461 7.70851 393.44 7.66356 393.432 7.61617 cv
393.51 7.33528 393.652 7.02469 393.884 6.74291 cv
394.25 7 li
393.95 6.65002 394.03 6.56999 394.12 6.49994 cv
394.123 6.49413 li
394.291 6.34375 394.493 6.20898 394.733 6.10149 cv
395 6.24997 li
394.77 6.09002 394.809 6.08096 394.85 6.05994 cv
395 6.24997 li
395.086 6.41117 395.172 6.57194 395.26 6.73276 cv
393.896 7.44927 393.956 9.19459 394.25 9.25021 cv
394.25 12.2588 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -8.1948 392.42 292.693 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~It)rtIt)rtIt)rtIt)rtIt%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
398.639 12.2588 mo
394.25 12.2588 li
394.25 9.25021 li
393.956 9.19459 393.896 7.44927 395.26 6.73276 cv
396.279 8.60391 397.414 10.4489 398.639 12.2588 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -8.1948 392.42 292.693 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 6 
/M[5 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~$47+H#mq"H#mgqG$4."G$47(G$47+H#mq"H#mg~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6t~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~mdBN3n*]W3n*f]4mdKW4mdBQ4mdBN3n*]W3n*^~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
417.778 45.2408 mo
417.5 45.2408 li
417.5 44.9518 li
417.778 45.2299 li
417.778 45.2408 li
394.25 45.2408 mo
393.5 45.2408 li
393.5 44.2188 li
394.25 43.9688 li
394.25 45.2408 li
417.5 42.745 mo
417.5 41.8314 li
417.778 41.5532 li
417.778 42.0497 li
417.5 42.745 li
394.25 13.3552 mo
393.5 12.7718 li
393.5 12.2588 li
394.25 12.2588 li
394.25 13.3552 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[26.2789 0 0 -35.5108 392.42 287.23 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 26 
/M[19 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~^V@P$_o'C0_o'C0_o'C0_o'C,^V@\(_o'C0_o'C0_o'C0_o'7(^Vdt,_o'C0_o'C0_o'C0_nWt$_o'C0
_o'C0_o'C0_o'C0^V@P$_o'C0_o'C0_o'C0_o'C,^V@\(_oTp?aN2HDaN2HDaN2-2^Vdt,aN2HDaN2HD
aN2HDaM5L)_o'C5aN2HDaN2HDaN2HD^V@P$_o'R:aN2HDaN2HDaN2H;^V@\(_oTpCbfn;Tbfn;Tbfmi:
^Vdt,aN2TLbfn;Tbfn;TbeLp-_o'C5aNVlPbfn;Tbfn;T^V@P$_o'R:bfn;Tbfn;Tbfn;G^V@\(_oTpC
bfn;Tbfn;Tbfmi:^Vdt,aN2TLbg=_`d*U.dd(d?1_o'C5aNVlPd*U.dd*U.d^V@P$_o'R:bfn;Xd*U.d
d*U.S^V@\(_oTpCbfnG\d*U.dd*TPB^Vdt,aN2TLbg=_`d*U.dd(d?1_o'C5aNVlPd*U:leC<!t^V@P$
_o'R:bfn;Xd+$RpeC<!_^V@\(_oTpCbfnG\eC<!teC;7J^Vdt,aN2TLbg=_deC<!teA&c5_o'C5aNVlP
d*U:leC<!t^V@P$_o'R:bfn;Xd+$Rpg"G&n^V@\(_oTpCbfnG\eC<"$g"?~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
415.259 48.348 mo
415.259 48.348 li
415.259 45.2408 li
394.25 45.2408 li
394.25 43.9688 li
394.259 43.9657 li
394.259 13.3623 li
394.25 13.3552 li
394.25 12.2588 li
398.639 12.2588 li
398.806 12.5063 398.975 12.7536 399.146 12.9998 cv
395 12.9998 li
395.18 13.1399 li
395.04 13.2798 li
395 12.9998 li
395 44.4998 li
416 44.4998 li
415.94 44.4398 li
416 44.3799 li
416 44.4998 li
416.08 44.2998 li
416 44.3799 li
416 31.8466 li
416.248 32.0747 416.495 32.2999 416.741 32.5236 cv
416.741 42.5905 li
417.5 41.8314 li
417.5 42.745 li
416.869 44.3214 li
417.5 44.9518 li
417.5 45.2408 li
416.502 45.2408 li
415.259 48.348 li
395 44.4998 mo
395 44.4998 li
395.04 44.2998 li
395.18 44.4398 li
395 44.4998 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[26.2789 0 0 -39.6082 392.42 287.23 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 29 
/M[19 0 0 -29 0 29 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mKN"]mJu\KmKN"]oDnagme6&PmKDqXme6&Pq?6HomK!7[nb;GTmKDqXrq>mV!!VfpmKDqXrq>mVmKN"]
o)S[grq>mVmKN"]mK!7[nb;namKEOlp&j^_rq>mVqZZBjoE4L]rq>mVrrr?)mKE.amK!7[nb;namKE.a
nc8Ugrq>mVqZZBjoE4L]rq?9apA"LgmKELkpB0g`rq?9apA"LgmKE.amK!7[r:fp[rWW9)mKE.amK!7[
r:fp[qZZBjoE4U`rW)rkr:fp[qZZBjoE4L]rq?9apA"LgmKEIjp]Kparq?9apA"LgmKE.amK!7[r:fp[
r<<3)mKE.amK!7[r:fp[qZZBjoE4R_rrE&lr:fp[qZZg!qZH]uoE4L]rq?9ar:p0bqZZg!qZH]uquc`s
mK!7[r:g-aqt^*mq?6ZtqZQNnmK!7[r:g-aqt^-n!!W3%qZH]uoE4L]rq?9ar:p0bqZZg!qZH]uoE4O^
!!*#lr:g-aqt^*mq?6ZtqZQWqrW;Kfrq?9ar:p9erqcKqq?6ZtqZQcur<*$#mK!7[r:g-arqZQiJ,~>

%%EndBinary
grestore
np
416 44.4998 mo
416 44.3799 li
416.08 44.2998 li
416 44.4998 li
416 44.4998 mo
395 44.4998 li
395.18 44.4398 li
395.04 44.2998 li
395 44.4998 li
395 12.9998 li
395.04 13.2798 li
395.18 13.1399 li
395 12.9998 li
399.146 12.9998 li
399.318 13.2472 399.491 13.4949 399.666 13.7409 cv
395.741 13.7409 li
395.741 43.7589 li
415.259 43.7589 li
415.259 31.161 li
415.506 31.3915 415.754 31.6204 416 31.8466 cv
416 44.3799 li
415.94 44.4398 li
416 44.4998 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[23.5127 0 0 -34.145 393.803 285.864 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*!s8W-
!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*
!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)
!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*
!WiE)!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!W~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3&
!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)!<E3%
!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)
!<E3%!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~kND*ol07Hsl07Hsl07Hsl0%6ol07Hsl07Hsl07Hsl07Bol07Hsl07Hsl07Hsl07HqkNV6ql07Hsl07Hs
l07HskND*ol07Hsl07Hsl07Hsl0%6ol07KulK[["lK[["lK[Qql07HtlK[["lK[["lK[ZtkNV6qlK[["
lK[["lK[["kND*ol0@R!lK[["lK[["lK@?pl07Kum-O**m-O**m-Noul07HtlKmm(m-O**m-O*%kNV6q
lK[a&m-O**m-O**kND*ol0@R#m-O**m-O**m-!Qrl07Kum-O**m-O**m-Noul07HtlKmm(mHs<.mHs<(
kNV6qlK[a&m-X3-mHs<.kND*ol0@R#m-O-,mHs<.mH<Zsl07Kum-O*+mHs<.mHs*"l07HtlKmm(mHs<.
mHs<(kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`6n)rlul07Kum-O*+mI0N4n*fH&l07HtlKmm(
mHsB2n*f`.kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`8nG~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
394.9 52.1034 mo
394.829 52.1034 394.729 52.0599 394.63 52.01 cv
394.697 52.0082 li
394.784 52.0422 394.87 52.07 394.953 52.0922 cv
394.938 52.0999 394.92 52.1034 394.9 52.1034 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 393.803 248.987 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
394.953 52.0922 mo
394.87 52.07 394.784 52.0422 394.697 52.0082 cv
395 52 li
394.997 52.0489 394.98 52.0779 394.953 52.0922 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 393.803 248.987 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~It)rtIt)rtIf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
417.68 50.8501 mo
417.5 50.5 li
417.78 50.61 417.74 50.73 417.68 50.8501 cv
417.5 50.5 mo
417.5 50.5 li
417.5 50.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 415.933 250.353 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~It)rtIt)rtIf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
395 44.5 mo
416 44.5 li
416 13 li
395 13 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
gsave
33.5 86.5 mo
33.15 86.18 li
38.0751 91.7599 44.821 95.56 52.288 96.9799 cv
83.7499 79.7499 li
64.25 68.5 li
33.5 86.5 li
52.25 97 mo
52.288 96.9799 li
52.25 97 li
clp
33.15 97 mo
83.75 97 li
83.75 68.5 li
33.15 68.5 li
cp
level3{
gsave
clp
[1 0 0 -1 -22 313 ]ct
/0 
<<
/ShadingType 2 
/BBox [55.15 216 105.75 244.5 ] 
/ColorSpace /0 /CSA get_res
/Coords [80.35 215.27 80.35 244.95 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzz!!!$"!<<0$!<E6%!<E9&!WiK)!WiN*!s/W+!s8`-!s8c.!s8f/"9Sr1"9]&3"9])4"9],5"U,>8"U
,A9"pPS<"pPV=#6th@#RD%C#RD(D#mh:G#mh=H$47OK$OR[M$O[gP$k+$S%1F0U%1O9W%LjEY%LsN[%h
9Z]%hBc_&.]oa&.g#c&J-/e&J68g&eQGj&eZPl'+u\n',)ep'GDqr'GN%t'bi2!()8D$()8G%(D\Y((D
\_*(`+q-(`5%/)&P11)&Y:3)AtF5)B(O7)]C[9)]Lg<*#gs>*#q'@*#q*A*?@<D*Z[HF~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 -22 313 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\l3"U,&5"U,)
7"pP;;#6tJ=#6tM?#RC\A#RC_C#mgqG$47+I$47.K$O[@O$k*OQ$k*RS%1NaU%1NaV%LrsY%LrsZ%hB0
]%hB0^&.fBa&.fBb&J5Te&J5Tf&eYfi&eYfj',)#m',)#n'GM5r'bqGu'bqGu()@Z$()@Z$(Ddl((Ddl
((`4),(`4),)&X;0)&X;0)B'M4)B'M4)]K_8)]K_8)]K_8*#oq<*??.@~>
<~zzzzzz!!**$!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8Z/"9\i1"9\l3"U,&5"U,)
7"pP;;#6tJ=#6tM?#RC\A#RC_C#mgnE#mgqG$47.K$O[=M$O[@O$k*OQ$k*OR%1NaU%1NaV%LrsY%Lrs
Z%hB0]%hB0^&.fBa&.fBb&J5Te&J5Tf&eYfi&eYfj',)#m',)#n'GM5q'GM5q'bqGu'bqGu()@Z$(Ddl
((Ddl((`4),(`4),)&X;0)&X;0)B'M4)B'M4)]K_8)]K_8*#oq<*#oq<~>
<~zzz!!**$!<E3%!<N<(!WrN,!sA`0"9\i1"9er4"U5/8"pYA<#7(S@#RLeD#mq"H$4@4L$O[@O$k*RS%1
NdW%Ls![%hB3_&.fEc&J5Wg&eYik',)&o'GM8s'bqK"()@]&(`4,.)&X>2)B'P6)]Kb:*#oq=*??.A*Z
c@E+!2RI+<VdM+X&!Q+sJ3U,9nEY,UF``-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P+/hSb/0/
#"50ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ioY3]];_4$,Mc4?P_g4Ztqk5!D.o~>
0 ]
>>
80.35 215.27 80.35 244.95 [55.15 216 105.75 244.5 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
.36 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
52.25 97 mo
83.75 79.75 li
64.25 68.5 li
33.5 86.5 li
33.15 86.18 li
38.075 91.76 44.821 95.56 52.288 96.98 cv
1 /3 /CSD get_res sepcs
0 sep
@
gsave
33.5 86.5119 mo
33.5 86.5 li
33.161 86.13 li
33.273 86.258 33.386 86.386 33.5 86.5119 cv
33.5 130.75 mo
33.161 130.82 li
38.16 136.15 44.911 139.68 52.288 140.8 cv
52.25 140.5 li
52.25 97 li
52.288 96.9799 li
44.979 95.602 38.365 91.914 33.5 86.5119 cv
33.5 130.75 li
clp
gsave
32.411 141.55 mo
53.038 141.55 li
53.038 85.38 li
32.411 85.38 li
32.411 141.55 li
eclp
gsave
11.7844 197.721 mo
32.4111 197.721 li
32.4111 141.55 li
11.7844 141.55 li
11.7844 197.721 li
clp
11.7844 141.55 mo
32.4111 141.55 li
32.4111 197.721 li
11.7844 197.721 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 298 ]ct
[20.6266 0 0 -56.1708 11.7844 156.45 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
32.4111 197.721 mo
53.0378 197.721 li
53.0378 141.55 li
32.4111 141.55 li
32.4111 197.721 li
clp
32.4111 141.55 mo
53.0377 141.55 li
53.0377 197.721 li
32.4111 197.721 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 298 ]ct
[20.6266 0 0 -56.1708 32.4111 156.45 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
53.0378 197.721 mo
73.6643 197.721 li
73.6643 141.55 li
53.0378 141.55 li
53.0378 197.721 li
clp
53.0377 141.55 mo
73.6644 141.55 li
73.6644 197.721 li
53.0377 197.721 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 298 ]ct
[20.6266 0 0 -56.1708 53.0377 156.45 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
11.7844 141.55 mo
32.4111 141.55 li
32.4111 85.3792 li
11.7844 85.3792 li
11.7844 141.55 li
clp
11.7844 85.3792 mo
32.4111 85.3792 li
32.4111 141.55 li
11.7844 141.55 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 298 ]ct
[20.6266 0 0 -56.1708 11.7844 212.621 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
32.4111 141.55 mo
53.0378 141.55 li
53.0378 85.3792 li
32.4111 85.3792 li
32.4111 141.55 li
clp
52.288 140.8 mo
44.911 139.68 38.16 136.15 33.161 130.82 cv
33.5 130.75 li
33.5 86.5119 li
38.365 91.914 44.979 95.602 52.288 96.9799 cv
52.25 97 li
52.25 140.5 li
52.288 140.8 li
36.252 102.88 mo
40.007 106.01 44.412 108.339 49.175 109.71 cv
49.25 109.75 li
49.25 106 li
49.175 106.23 li
44.529 104.861 40.218 102.611 36.5 99.603 cv
36.5 103 li
36.252 102.88 li
42.2364 101.04 mo
42.4976 101.075 42.7649 101.093 43.0324 101.093 cv
43.2999 101.093 43.5674 101.075 43.8292 101.04 cv
43.8292 101.04 li
43.8794 101.007 li
43.8858 100.947 li
43.3226 99.3354 42.3067 98.3999 41.2373 98.3977 cv
41.237 98.3976 41.2367 98.3977 41.2364 98.3977 cv
40.781 98.3977 40.3221 98.5707 39.8978 98.9265 cv
39.88 98.9493 li
39.8086 99.0939 39.7736 99.2413 39.7736 99.3865 cv
39.7841 100.187 40.7829 100.849 42.2369 101.04 cv
42.2364 101.04 li
36.5 99.25 mo
36.252 99.4 li
36.5 99.603 li
36.5 99.25 li
33.5 86.5119 mo
33.386 86.386 33.273 86.258 33.161 86.13 cv
33.5 86.5 li
33.5 86.5119 li
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 298 ]ct
[20.6266 0 0 -56.1708 32.4111 212.621 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
53.0378 141.55 mo
73.6643 141.55 li
73.6643 85.3792 li
53.0378 85.3792 li
53.0378 141.55 li
clp
53.0377 85.3792 mo
73.6644 85.3792 li
73.6644 141.55 li
53.0377 141.55 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 298 ]ct
[20.6266 0 0 -56.1708 53.0377 212.621 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
grestore
grestore
52.2881 96.98 mo
44.8081 95.57 38.0561 91.74 33.1611 86.13 cv
33.5001 86.5 li
33.5001 130.75 li
33.1611 130.82 li
38.1601 136.15 44.9111 139.68 52.2881 140.8 cv
52.2501 140.5 li
52.2501 97 li
.326848 .461494 .829587 .102419 cmyk
@
gsave
52.25 97 mo
52.25 140.5 li
83.7499 123.25 li
83.7499 79.7499 li
52.25 97 li
clp
51.526 141.5 mo
84.3 141.5 li
84.3 78.727 li
51.526 78.727 li
cp
gsave
/5 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 63 
/Lookup <~
!!**$!!*-&!!*-'!<NE+!s8i1"9f,5"pYS;#6tb>#RM(C#mh7F$4.CH$O[dO$k4-U%1X?X&.]i_&.fo`
&J62e&eQDi'+uVl'GMtr()AG$(D\S&(Dnh+)&Y./)&b:2)]C[9*#ps=*ZdED+!<cJ+<`uM+sTJU,9o_Z
,pc1a-7;Rh-n%ml.4\?t/1jp'/MC6,0/$T20/6i70f!2<0f3D@1,WVC2)].K2E5LQ2`Y^T3')'[3BM9^
3BVEa4$Ioi4?n,l4[FMs5!sl$5XU/(5spA-6:Qb36Ulq66V*4<77rXB7SK$J7noBQ85>TU8l2)]92_Je
~>
>>
/CSD add_res
grestore
/109727584.0 
<<
/ID /109727584.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 24 46 ] 
/XStep 24 
/YStep 46 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 46 mo
24 46 li
24 0 li
0 0 li
cp
false sop
/5 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 298 ]ct
[24 0 0 46 0 252 ]ct
snap_to_device
<<
/T 1
/W 24 
/H 46 
/M[24 0 0 -46 0 46 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~J.LR73$]7K"!9j<:q1$o'Kh1>@So+\5^GMN7Uo<*jC!9pO@Wn[3@'-$3L!-I;Rp2rF?LSeAlC^ce8[,\
:1mM9jS!IS)Gk*H3[G>Q58hm`<4ZWrO"V@"C/m<k9P%!@N%7o>j`\19T8TdO4!g340<e*g[_$+Zh/'H!
"a<&)f'RMo>\E&sjnAY&^0YY$d7+o]LVsN'3%D_9*KS9P7/4CD]M"U8Aog:TV@6%gctIN(b[gWAVpoI(
,#'C`H6V!XG$?P1G-E+EDKf<I%bF?,&+FgK4r3lsK+E!J>eWaYNOGI73aFqBE')A&CP.&LkB&Z7kO6Hb
Y:#[\)Xqoh@@q2Ah<=3FlN)L5fBO4JG]gi@kP+iN4YMtI$:'\(#R\?XMkHDgE,6O!_%4`=X9()W/-pi(
Mus6=TS,H=Je6-=r@hW$9bW*J'I<c+i+u[8`A#dUnH!X2C'I-^*%%;/;=&WL78VaW"A"&.'-KbA,-V0k
J38l4`Gj`C.=fioK,M)4,df,D&_'o(J7'3#/kQ`i>QFh'*3CL,Bm9UXbu3o&nK8q~>
/LZWDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/109727584.0 /Pattern get_res
[1.3656 0 0 -1.36459 51.5259 141.5 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
52.25 97 mo
52.25 140.5 li
83.75 123.25 li
83.75 79.75 li
52.25 97 li
cp
1 /3 /CSD get_res sepcs
0 sep
@
1.5 lw
83.75 79.75 mo
64.25 68.5 li
33.5 86.5 li
33.5 130.75 li
33.161 130.82 li
38.16 136.15 44.911 139.67 52.288 140.8 cv
52.25 140.5 li
83.75 123.25 li
83.75 79.75 li
1 /3 /CSD get_res sepcs
1 sep
@
gsave
41.252 113.29 mo
40.49 113.57 40.1851 114.66 40.571 115.72 cv
40.957 116.78 41.888 117.411 42.65 117.13 cv
43.412 116.86 43.7169 115.77 43.331 114.71 cv
43.005 113.816 42.292 113.228 41.619 113.228 cv
41.495 113.228 41.372 113.248 41.252 113.29 cv
clp
40.8218 118.6 mo
44.9908 117.08 li
43.0798 111.83 li
38.9108 113.35 li
cp
gsave
grestore
/109727780.0 
<<
/ID /109727780.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~_o'C0_o'C0YHP.5YHP.5R$a8.R$a8EI=6NlI=7KdC2.KuC42JQ:JXb^C42JQ1G^g_C42JQ(`5&)C42JQ
~>
<~.Olnt.Olnt+<VdL+<VdL'GM5q'GM6(%1NaU%1O!o$47+I$4R[l"U,&5$4R[l!s8W/$4R[l!<E9+$4R[l
~>
<~]tM+m]tM+mUnjf^Unjf^M2@(GM2@(bDJj?0DJk<,?!U`A?#GLp6UO4.?#GLp.k<,;?#GLp',)l`?#GLp
~>
<~"pP89"pP89!WiE)!WiE)!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/109727780.0 /Pattern get_res
[.521194 -.189697 -.238846 -.656235 40.8218 118.6 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
.36 lw
43.3311 114.71 mo
42.9451 113.65 42.0141 113.02 41.2521 113.29 cv
40.4901 113.57 40.1851 114.66 40.5711 115.72 cv
40.9571 116.78 41.8881 117.41 42.6501 117.13 cv
43.4121 116.86 43.7171 115.77 43.3311 114.71 cv
cp
@
.6 lw
36.251 122.3 mo
40.105 125.56 44.508 127.89 49.175 129.13 cv
36.251 124.97 mo
40.105 128.23 44.508 130.56 49.175 131.8 cv
36.251 127.64 mo
40.105 130.9 44.508 133.22 49.175 134.47 cv
@
36.1948 95.7598 mo
39.9028 98.9498 44.3238 101.29 49.1178 102.58 cv
49.4748 102.51 49.6988 102.17 49.6188 101.82 cv
49.5628 101.58 49.3678 101.4 49.1178 101.34 cv
44.4228 100.1 40.0888 97.8298 36.4538 94.7098 cv
36.2788 94.5598 36.0078 94.5698 35.8468 94.7398 cv
35.7628 94.8298 35.7228 94.9498 35.7368 95.0598 cv
35.7648 95.3498 35.9348 95.6098 36.1948 95.7598 cv
ef
.36 lw
36.1948 95.7598 mo
39.9028 98.9498 44.3238 101.29 49.1178 102.58 cv
49.4748 102.51 49.6988 102.17 49.6188 101.82 cv
49.5628 101.58 49.3678 101.4 49.1178 101.34 cv
44.4228 100.1 40.0888 97.8298 36.4538 94.7098 cv
36.2788 94.5598 36.0078 94.5698 35.8468 94.7398 cv
35.7628 94.8298 35.7228 94.9498 35.7368 95.0598 cv
35.7648 95.3498 35.9348 95.6098 36.1948 95.7598 cv
cp
@
gsave
39.943 98.9799 mo
39.509 99.86 40.54 100.75 42.246 100.97 cv
42.7631 101.04 43.303 101.04 43.82 100.97 cv
43.262 99.373 42.262 98.468 41.238 98.467 cv
40.8 98.467 40.357 98.633 39.943 98.9799 cv
clp
gsave
39.095 101.77 mo
44.57 101.77 li
44.57 97.721 li
39.095 97.721 li
39.095 101.77 li
eclp
gsave
33.6199 105.819 mo
39.0951 105.819 li
39.0951 101.77 li
33.6199 101.77 li
33.6199 105.819 li
clp
33.62 101.77 mo
39.0952 101.77 li
39.0952 105.819 li
33.62 105.819 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[5.47522 0 0 -4.0487 33.62 196.23 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
39.0951 105.819 mo
44.5705 105.819 li
44.5705 101.77 li
39.0951 101.77 li
39.0951 105.819 li
clp
39.0951 101.77 mo
44.5705 101.77 li
44.5705 105.819 li
39.0951 105.819 li
39.0951 101.77 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[5.47522 0 0 -4.0487 39.0952 196.23 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
33.6199 101.77 mo
39.0951 101.77 li
39.0951 97.7213 li
33.6199 97.7213 li
33.6199 101.77 li
clp
33.62 97.7213 mo
39.0952 97.7213 li
39.0952 101.77 li
33.62 101.77 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[5.47522 0 0 -4.0487 33.62 200.279 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
39.0951 101.77 mo
44.5705 101.77 li
44.5705 97.7213 li
39.0951 97.7213 li
39.0951 101.77 li
clp
43.0324 100.953 mo
42.7712 100.953 42.5099 100.935 42.2552 100.901 cv
42.2547 100.901 li
40.824 100.719 39.9033 100.052 39.9136 99.3865 cv
39.9137 99.2679 39.9409 99.1471 39.9993 99.0242 cv
40.4002 98.6924 40.8214 98.5378 41.2373 98.5376 cv
41.2386 98.5376 41.2399 98.5376 41.2412 98.5376 cv
42.2025 98.5376 43.167 99.3823 43.7246 100.912 cv
43.4967 100.939 43.2645 100.953 43.0324 100.953 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.10641 0 0 -3.03653 39.7796 199.773 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'G1c]"p>VP%13:B'G1c]"pPbR%13FL'G1c`%1O!`&J5Te~>
<~%1<FH"To2A#R:M8%1<FH"U,>C#R:S>%1<FI#RCkI$O[=M~>
<~/LDMV&IL*:*Z5Os/LDMV&J6TA*Z5h5/LDM[*Zcm[-71&d~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
33.6199 97.7213 mo
39.0951 97.7213 li
39.0951 93.6726 li
33.6199 93.6726 li
33.6199 97.7213 li
clp
33.62 93.6726 mo
39.0952 93.6726 li
39.0952 97.7213 li
33.62 97.7213 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[5.47522 0 0 -4.0487 33.62 204.327 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
39.0951 97.7213 mo
44.5705 97.7213 li
44.5705 93.6726 li
39.0951 93.6726 li
39.0951 97.7213 li
clp
39.0952 93.6726 mo
44.5704 93.6726 li
44.5704 97.7213 li
39.0952 97.7213 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[5.47522 0 0 -4.0487 39.0952 204.327 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
43.8197 100.97 mo
43.7538 100.993 li
43.2003 99.4103 42.2169 98.5353 41.2373 98.5376 cv
40.8174 98.5378 40.392 98.6954 39.9877 99.0338 cv
39.9427 98.9802 li
40.0056 99.0112 li
39.9429 99.1386 39.9137 99.2637 39.9136 99.3865 cv
39.9033 100.052 40.824 100.719 42.2547 100.901 cv
42.2552 100.901 li
42.5099 100.935 42.7712 100.953 43.0324 100.953 cv
43.2937 100.953 43.5551 100.935 43.8104 100.901 cv
43.8197 100.97 li
43.7538 100.993 li
43.8197 100.97 li
43.8292 101.04 li
43.5674 101.075 43.2999 101.093 43.0324 101.093 cv
42.7649 101.093 42.4976 101.075 42.2364 101.04 cv
42.2369 101.04 li
40.7829 100.849 39.7841 100.187 39.7736 99.3865 cv
39.7736 99.2413 39.8086 99.0939 39.88 98.9493 cv
39.8978 98.9265 li
40.3224 98.5705 40.7816 98.3974 41.2373 98.3977 cv
42.3067 98.3999 43.3226 99.3354 43.8858 100.947 cv
43.8794 101.007 li
43.8292 101.04 li
43.8197 100.97 li
1 /3 /CSD get_res sepcs
0 sep
f
gsave
36.252 99.4 mo
36.5 99.603 li
36.5 99.25 li
36.252 99.4 li
36.5 103 mo
36.252 102.88 li
40.007 106.01 44.412 108.339 49.175 109.71 cv
49.25 109.75 li
49.25 106 li
49.175 106.23 li
44.529 104.861 40.218 102.611 36.5 99.603 cv
36.5 103 li
clp
gsave
35.502 110.46 mo
49.925 110.46 li
49.925 98.657 li
35.502 98.657 li
35.502 110.46 li
eclp
gsave
35.502 110.46 mo
49.9251 110.46 li
49.9251 98.6568 li
35.502 98.6568 li
35.502 110.46 li
clp
49.25 109.75 mo
49.175 109.71 li
44.412 108.339 40.007 106.01 36.252 102.88 cv
36.5 103 li
36.5 99.603 li
40.218 102.611 44.529 104.861 49.175 106.23 cv
49.25 106 li
49.25 109.75 li
36.5 99.603 mo
36.252 99.4 li
36.5 99.25 li
36.5 99.603 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[13.4313 0 0 -10.9545 36.0088 198.869 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 56 
/H 47 
/M[56 0 0 -47 0 47 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 56 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 56 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 56 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 56 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
s!IUfq]YkYq]#DMq\SZ9s!.C`q]5SQq\]2GkS*tiqa^NM!'U9Dq`+I0q_.@ig]6aCs!IUfq]YkYq]#GN
!#bYMmM>gIq]PbVr#5GLq\JB/s%N;[qa13Dq`+I0q_.atp+G,#mK*>7q]kt]r#Y_Sq\f8ImM>gIruh7_
q]5SQq\]2GkS*tiqa^NMr&sp:q_\1'mOmo-mf;bVs!IUfq]YkYq]#DMq\SZ9s!.C`q]5SQq\]2GrY+T2
s%N;[qa13Dq`+I0q_.@hciEnBs!IUfq]YkYq]#DMq\SZ9s!.C`q]5SQq\]2GkS*tiqa^NMr&sp:q_\1'
mOcN\s!Iajr?_Igr?2+]rZD(YruCnTq\\l?r>>PZruh7bruq=^ru:qXq\o>Lq\J`;r>,E,s%!#Zs$ZfO
s#g9Eq`4O2q_/"%o.Bnor;c^.q]FW3r=f2Xs!.Igs!.IbruV.]q],JPq\\l?!#Y\Ps!.Odr?M=cr>ttX
rZ1kSq\f8HneM*=s%NG_rCR#WrB^HGr]^3>q_e7)nh'enr;c^.ru_1]h&6/)s!Iajr?_Igr?2+]rZD"W
q]#DLne_6As!.Odr?M=cr>ttXrZ1kSru(bQq\J`;r>,E,s%!#Zs$ZfOs#g9Eq`4O2q_7Rmr@e*Lq\/iK
k8F"3r=f2Xs!.Igs!.IbruV.]q],JPq\\l>r>>PZruh7bruq=^ru:qXq\o>Lq\J`:r=o<+!_c*SrCR#W
rB^HGr]^3>q_e7)ngs_kr;c^.q]FW3r=f2Xs!.Igs!.IbruV.]q],JPq\\l>r>>PZruh7bruq=^ru:qX
q\o>Lq\J`:r>#?+s%!#Zs$ZfOs#g9Eq`4O2q_7Rlr@RsJq\/iKh&6/)s!Iajr?_Igr?2+]rZD"Wq]#DL
p_N`Br>>PZruh7bruq=^ru:qXq\o>Lq\J`:r>#?+s%!#Zs$ZfOs#g9Eq`4O2q_7Rlr@RsJ!#,8Dq]FW3
r=f2Xs!.Igs!.I_ru:qRq\8o@q[iN4q\&iEs!.Odr?M=cr>bhTrY>JJr"T#@q[`H2q[i]@s%NG_rCR#W
rBC6Br\s^0q_%appa,ecr@RsJq\/i\mR$V6q_7s^s!Iajr?_Igr>knWrYPGGq\/i<p^[06r>>PZruh7b
ruq=\ru(eOq\8o?q[`H2r=Ju?r>#?+s%!#Zs$ZfLs#U-<q_J%$q^M:dq^DCpr;c^.q_7%sq_7s^s!Iaj
r?VFg!$hF_ru:qRq\8o@q[iN4q\&iEs!.Odr?M=cr>bhTrYGAFq\&c:p^R*3r>#?+s%!#Zs$ZfLs#U-<
r%\7-q_%appa,ecr@RsJq\/i\j$NVsr=f2Xs!.Igs!.I_ru:qRq\8o@q[ic;rXSl9q[i]As!.Odr?M=c
r>bhTrYGAFq\&c:r!iT5q[i]?s%NG_rCR#WrBC6Br\s^0q_%apr$D:eq^2=os"+*Kq\/i\j$NVsr=f2X
s!.Igs!.I_ru:qRq\8o@q[iZ8r=/W8r>,DXruh7bruq@]!ZW'qrYGAFq\&c:r!iT5q[i]?s%NG_rCR#W
rBC6Br\s^0q_%apr$D:eq^27mr;c^.q_7\0mm?n*r=f2Xs!.Igs!.I_ru:qRq\8o@q[iZ8r=/W8r>,DX
ruh7bruq=\ru(eOq\8o?q[`T6!"Ai8q[i]?s%NG_rCR#WrBC6Br\s^0q_%apr$D:eq^27mr;c^.q_7%s
q_7s^s!Iajr?_Igr>knWrYPGGq\&c;r!rZ7q[i]As!.Odr?M=cr>bhTrYGJIrY,8CrY#)=p^R*3r=o9*
s%!#Zs$ZfL!]iA"s#'d0r[n!rq^)4as!.Idq^27mr;c^.q_7nCqcresqbR)Cr=f2Xs!.Igs!.I_ru:qR
q\8o?!"f&>r!rZ7q[i]As!.Odr?M=cr>bhTrYGJIrY,8CrY#)=p^R*3r=o9*s%!#Zs$ZfLs#U-:r\4='
q^MCgrZM4cr?D+cr@ImIq\/l]!&4:GqcresqbR)Cr=f2Xs!.Igs!.I_ru:qRq\8o?q[iZ8r=/W8r>,DX
ruh7bruq=\ru(eOrY5>FrXo/C!##/>p^R*3r=o9*s%!#Zs$ZfLs#U-:r\4='q^MCgrZM4cr?D+cr@ImI
q\/i\qbR)ooi_2g!)NJGr=f2Xs!.Igs!.I_ru:qRq\8o?q[iZ8r=&Q7r>,DXruh7bruq=\ru(eOrY5>F
rXo,Bq[`T6r=&Q6r=f3)s%!#Zs$ZfLs#U-:r\4='q^MCgrZM4cr?(n^r@.[Fq\/i\qbR)ooi_/fq_7s^
s!Iajr?_Igr>knWrYPGGq\&c;r!rZ6q[i]As!.Odr?M=cr>bhTrYGJIrY,8CrY#)=r!iT5q[`W=s%NG_
rCR#WrBC6Br\a[/r[n!rr[%OirZM4cr?(n^r@.[Fq\/i\qbR)ooi_/fq_7s^s!Iajr?_Igr>knWrYPGG
q\&c;r!rZ6rXf&?r>,DXruh7bruq=\ru(eOrY5>FrXo,Bq[`T6r=&Q6r=f3)s%!#Zs$ZfLs#U-:r\4='
q^MCgrZM4cr?(n^r@.[Fr=f2Eq_7nCqcresqbR)Cr=f2Xs!.Igs!.I_ru:qRq\8o?q[iZ8r=&Q7r>,DX
ruh7bruq=\ru(eOrY,>GrtGADrY#)=r!iT5q[`W=s%NG_rCR#WrBC6Br\a[/r[n!rq^)4as!.Iaq]u+h
r;c^.q_7nCqcrkus&o4pq_7s^s!Iajr?_Igr>knWrYPPJrY,8CrXf&=rX\u;rsnu9q[i]As!.Odr?M=c
r>bhTrYGJIrY,8CrXf&<rXSo9rseo8q[WZ?rY,<*s%!#Zs$ZfLs#U-:r\4=%r[7[frYth\rZ;(ar?(n^
r@.[Fq\/i\qbR)rqe#_4qbR)Cr=f2Xs!.Igs!.OaruM+YrYPPJrY,8CrXf&=rX\u;rsnu9q[i]As!.Od
r?M=cr>bhTrYGJIrY,8CrXf&<rXSo9rseo8q[`W=s%NG_rCR#WrBC6Br\a[/r[\!r!%7agrYth\rZ;(a
r?(n^r@.[Fq\/i\qbR)rqe#_4qbR)Cr=f2Xs!.Igs!.I_ru:qRrY5>FrXo,@rXSo<rXJl;r=&Q6r>#>W
ruh7bruq=\ru(eOrY5>FrXo,@rXJi:rXAf9r<rK4r=]-(s%!#Zs$ZfLs#U-:r\4=%r[7[frYth\rZ;(a
r?(n]r@%^HrW)g/q_7nCqd954qd94rq_7s^s!Iajr?_Igr>knWrYPPJrY,8CrXf&=rX\u;rsnu9q[`W?
s!.Odr?M=cr>bhTrYGJIrY,8CrXf&<rXSo9rseo7q[WQ;s%NG_rCR#WrBC6Br\a[/r[[sqrZM1ZrZ_=_
s!.Iaq]l%gr;c^.q_7nCqd9>7rau%7qbR)Cr=f2Xs!.Igs!.I_ru:qRrY5>FrXo,@rXSo<rXJl;r=&Q6
r>#>Wruh7bruq=\ru(eOrY5>FrXo,@rXJi:rXAf9r<rK4r=]-(s%!#Zs$ZfLs#U-:r\4=%r[7[frYth\
rZ;(ar?(n]r@.[Fq\/i\qbR)rqe#_4qbR)Cr=];\-6j`]r[%Rhr>knWrYPPJrY,8CrXf&=rX\u;rsnu9
q[`W?s!.Odr?M=cr>bhTrYGJIrY,8CrXf&<rXSo9rseo7q[WQ;s%NG_rCR#WrBC6Br\X[0s"OF&r[7[f
rYth\rZ;(ar?(n]r@.[Fq\/i\qbR)rqe#_4qbR)Cr=f2Xs!.Igs!.I_ru:qRq\8o?r=Ju?r!rZ6q[`W?
s!.Odr?M=cr>bhTrYGAFq\&c:r!iT4q[WQ;s%NG_rCR#WrBC6Br\a[/r\"'sq^)4as!.Iar?M=er@.[F
q\/i\qbQZ`qbR)Cr=f2Xs!.Igs!.I_ru:qRq\8o?q[iZ8r=&Q6r>#>Wruh7b!$M=cr>bhTrYGAFq\&c:
r!iT4rsnu:r=T''s%!#Zs$ZfLs#U-:r\4=(q^MCgrZM4cr?)%ar?D1fr;c^.q_7nCs&nkpqbR)Cr=f2X
s!.Igs!.I_ru:qRq\8o?q[iZ8r=&Q6r>#>Wruh7bruq=\ru(eOq\8o?q[`]9rXJf6rsnu:r=T''s%!#Z
s$ZfLs#U-:r\4=(q^MCgrZM4cr?)%ar?D1fr;c^.q_7nCmofN`q_8$`rtGDZs!.Igs!.I_ru:qRq\8o?
q[iZ8r=&Q6r>#>Wruh7bruq=\ru(eOq\8o?q[`T6r<rW8r=/];s%NG_rCR#Wr]UBI3]d6tr\4=(q^MCg
rZM4cr?)%ar?D1fr;c^.q_7nCmofN`q_7s^s!Iajr?_Igr>knWrYPGGrY#2Cq[iZ8r=&Q6r>#>Wruh7b
ruq=\ru(eOq\8o?q[`T6r<rW8r=/];s%NG_rCR#WrBC6Br\a[/r\"'sq^)4a![Ap3rZD.br?D1fr;c^.
q_7nCmofN`q_7s^s!Iajr?_Igr>knWrYPGGq\&c;r!rZ6q[`W?s!.Odr?M=cr>bhTrYGAFq\&c:r!iT4
rsnu:r=T''s%!#Zs$ZfLs#U-:r\4=(q^MCgrZM4cr?)%ar?D1fr;c^.q_/"Gr(lcaqbR)Cr=f2Xs!.Ig
s!.I_ru:qRq\8o@q[iZ8r=&Q6r>#>Wruh7bruq=\ru(eOq\8o?!"\u<r!iT4rsnu:r=T''s%!#Zs$ZfL
s#U-<q_J%$q^MFhr?;1cr?D1fr;c^.q_7%sq_7s^s!Iajr?_Igr>bkW!#tnRq\8o@q[iZ8r=&]:r=/]=
s!.Odr?M=cr>bhTrYGAFq\&c:r!iT4rsnu:r=T''s%!#Zs$ZfLs#U-<q_J(%!&"-tr$D:bs!.Ibr?_CB
q\/i\j$NVsr=f2Xs!.Igs!.I_ru:qRq\8o@q[iZ8rX8i:%hJUJr=f2Uruh7bruq=\ru(eOq\8o?q[`T6
r<rW8r=/];s%NG_rCR#WrBC6Br\s^0q_%apr$D:bs!.Ibr?_CBq\/i\j$NVsr=f2Xs!.Igs!.I_ru:qR
q\8o@q[iZ8r=&]:r=/]=s!.Odr?M=cr>bhTrYGAFq\&c:r!iT4rsnu:r=T''s%!#Zs$ZfLs#U-<q_J%$
q^MFhr?;1cr?2%br;c^.q_7J*og8O0r=f2Xs!.Igs!.I_ru:qRq\8o@q[iZ8r=&]:r=/]=s!.Odr?M=c
r>bhTrYGAFq\&c:r!iT4!Y,\LrXJf<s%NG_rCR#WrBC6Br\s^0q_%apr$D:bs!.Ibr?_CBq\/i\j$NVs
r=f2Xs!.Igs!.I_ru:qRq\8o@q[iZ8r=&]:r=/]=s!.Odr?M=cr>bhTrYGAFq\&c:r!iT4rsnu:r=T''
s%!#Zs$ZfLs#U-<rA+C.q_%apr$D:bs!.Ibr?_CBq\/i\j$NVsr=f2Xs!.Igs!.I_ru:qRq\8o@q[``;
r=8c7rt#&;r=f2Uruh7bruq=\ru(eOq\8o?q[`T6r<rW8r=/];s%NG_rCR#WrBC6Br\s^0q_%apr$D:b
s!.Ib!%%Ujr;c^.q_7%sq_7s^s!Iajr?_Igr?D.]q],JPq\]5Hq\8u@r=],Truh7bruqCbruh4[q\o>L
q\K)Dq[rc;r=K!&s%!#Zs$ZfPr'(!<q_e7)r%.^mr?M7dr;c^.n/:F-r=f2Xs!.Igs!.Idr#beUq]#DL
r"f/Dr=Su@s!.Odr?M=cr?2"Yq\o>Lq\K)Dq[rc;r=K!&s%!#Zs$ZfPr'(!<q_e7)r%.^mr?M7dr;c^.
f,=N#!%%ao,:!.5s!.Idr#beUq]#DLr"f/Dr=Su@s!.Odr?M=cr?2"Yq\o>Lq\K)Dq[rc;r=K!&s%!#Z
s$ZfPs$$EGq`4O2q_7q!q^;=er?V=Aq\.R!r=f2Xs!.Igs!.Idr#beUq]#DLr"f/Dr=Su@s!.Odr?M=c
r?2"Yq\o>Lq\K)Dq[rc;r=K!&s%!#Zs$ZfPr'(!<q_e7)r%.dos!Rair?V=Aq\.R!r=a\~>

%%EndBinary
grestore
np
grestore
grestore
grestore
36.252 100.95 mo
39.941 104.17 44.368 106.51 49.175 107.78 cv
49.25 107.5 li
49.25 106.75 li
49.175 106.91 li
44.412 105.54 40.007 103.21 36.252 100.08 cv
36.5 100 li
36.5 100.75 li
cp
1 /3 /CSD get_res sepcs
1 sep
ef
36.5 99.25 mo
36.5 103 li
36.252 102.82 li
40.007 105.95 44.412 108.27 49.175 109.64 cv
1 /3 /CSD get_res sepcs
0 sep
@
49.25 109.75 mo
49.25 106 li
49.175 106.29 li
44.425 104.89 40.026 102.57 36.252 99.46 cv
1 /3 /CSD get_res sepcs
1 sep
@
396.09 85.0498 mo
393.17 85.0498 393.17 87.8698 393.5 87.9998 cv
393.5 128.5 li
393.17 128.75 li
393.17 131.57 396.09 131.57 395.75 131.5 cv
415.25 131.5 li
415.03 131.57 li
415.03 131.57 417.95 131.57 418.25 128.5 cv
418.25 87.9998 li
417.95 87.8698 li
417.95 87.8698 417.95 85.0498 415.25 84.9998 cv
395.75 84.9998 li
396.09 85.0498 li
1 /3 /CSD get_res sepcs
.498 sep
ef
396.63 85.6401 mo
393.88 85.6401 393.88 88.3901 394.25 88.7501 cv
394.25 128.5 li
393.88 128.24 li
393.88 130.98 396.63 130.98 396.5 130.75 cv
414.5 130.75 li
414.49 130.98 li
414.49 130.98 417.24 130.98 417.5 128.5 cv
417.5 88.7501 li
417.24 88.3901 li
417.24 88.3901 417.24 85.6401 414.5 85.7501 cv
396.5 85.7501 li
396.63 85.6401 li
.772549 .690639 .638117 .874083 cmyk
ef
415.259 110.37 mo
410.038 105.505 404.538 99.6856 400.007 93.2408 cv
415.259 93.2408 li
415.259 110.37 li
.0196078 .0156863 0 .815686 cmyk
f
gsave
393.787 124.741 mo
417.092 124.741 li
417.092 91.6089 li
393.787 91.6089 li
393.787 124.741 li
clp
416.741 111.734 mo
416.495 111.51 416.248 111.285 416 111.056 cv
416 92.4997 li
416.08 92.4898 li
415.94 92.3498 li
416 92.4997 li
399.493 92.4997 li
399.324 92.2536 399.156 92.0067 398.99 91.7588 cv
415.954 91.7588 li
415.988 91.7545 li
415.989 91.7588 li
416 91.7588 li
416 91.8493 li
416.033 92.1104 li
416.464 91.8259 li
416.604 91.9659 li
416.557 92.1031 li
416.628 92.0746 li
416.688 92.2246 li
417.092 93.2347 li
417.092 93.2408 li
416.741 93.2408 li
416.741 111.734 li
.0196078 .0156863 0 .964706 cmyk
f
416 111.056 mo
415.754 110.83 415.506 110.601 415.259 110.37 cv
415.259 93.2408 li
400.007 93.2408 li
399.834 92.9946 399.663 92.7478 399.493 92.4997 cv
416 92.4997 li
416 111.056 li
416 92.4997 mo
415.94 92.3498 li
416.08 92.4898 li
416 92.4997 li
.0117647 .00784314 0 .905882 cmyk
f
grestore
408.06 89.7098 mo
407.893 89.5969 li
408.03 89.4702 li
407.75 89.5001 li
407.75 89.4997 li
407.75 88.7502 li
408.03 88.9402 li
407.89 88.8102 li
407.75 88.7502 li
403.25 88.7502 li
403.25 88.7498 li
402.92 88.7398 li
403.06 88.5998 li
403.25 88.7498 li
407.75 88.7498 li
408.06 88.5998 li
408.2 88.7398 li
408.5 88.7498 li
408.5 89.4997 li
408.2 89.5698 li
408.06 89.7098 li
403.06 89.7098 mo
402.92 89.5698 li
403.146 89.5219 li
403.192 89.5641 li
403.06 89.7098 li
403.25 89.5002 mo
403.249 89.5 li
403.25 89.4998 li
403.25 89.4999 li
403.25 89.5002 li
.0196078 .0156863 0 .964706 cmyk
f
407.89 89.6002 mo
407.75 89.5002 li
407.75 89.5001 li
407.893 89.5969 li
407.89 89.6002 li
403.231 89.6002 mo
403.192 89.5641 li
403.25 89.5002 li
403.25 89.5002 li
403.231 89.6002 li
403.146 89.5219 mo
403.09 89.4702 li
403.249 89.5 li
403.146 89.5219 li
407.75 89.5002 mo
407.75 89.5002 li
403.25 89.5002 li
403.25 89.4999 li
403.25 89.4997 li
407.75 89.4997 li
407.75 89.5002 li
403.25 89.5002 mo
403.25 89.5002 li
403.25 89.4998 mo
403.25 88.7502 li
403.25 89.4997 li
403.25 89.4998 li
403.09 88.9402 mo
403.25 88.7502 li
403.231 88.8102 li
403.09 88.9402 li
.0196078 .0156863 0 .666667 cmyk
f
407.893 89.5969 mo
407.75 89.5001 li
408.03 89.4702 li
407.893 89.5969 li
403.192 89.5641 mo
403.146 89.5219 li
403.249 89.5 li
403.25 89.5002 li
403.192 89.5641 li
403.25 89.4999 mo
403.25 89.4998 li
403.25 89.4997 li
403.25 89.4999 li
407.75 89.4997 mo
403.25 89.4997 li
403.25 88.7502 li
407.75 88.7502 li
407.75 89.4997 li
408.03 88.9402 mo
407.75 88.7502 li
407.89 88.8102 li
408.03 88.9402 li
.0117647 .00784314 0 .682353 cmyk
f
gsave
395 85 mo
394.85 85.27 li
394.809 85.29 394.77 85.299 395 85 cv
394.73 85.3099 li
394.61 85.37 394.5 85.4299 394.25 85.7499 cv
394.401 85.49 li
394.3 85.56 394.2 85.63 394.25 85.7499 cv
393.88 85.95 li
393.817 86.0209 393.763 86.092 393.577 86.38 cv
393.5 86.5 li
393.53 86.46 li
393.44 86.6399 393.37 86.82 393.5 87.25 cv
393.22 87.431 li
393.169 87.701 393.169 87.8699 393.5 88 cv
393.5 128.5 li
393.169 128.75 li
393.169 128.93 393.179 129.1 393.5 129.25 cv
393.2 129.25 li
393.22 129.41 393.259 129.55 393.5 130 cv
393.44 130.06 li
393.49 130.181 393.559 130.29 393.5 130.75 cv
393.63 130.39 li
393.691 130.48 393.77 130.569 393.5 130.75 cv
393.84 130.66 li
393.92 130.74 394.01 130.82 394.25 130.75 cv
394.09 130.89 li
394.179 130.95 394.269 131.02 394.25 130.75 cv
394.36 131.07 li
394.45 131.13 394.54 131.18 395 131.5 cv
394.63 131.22 li
394.809 131.31 394.99 131.38 395 131.5 cv
395.16 131.43 li
395.33 131.48 395.491 131.51 395.75 131.5 cv
395.63 131.53 li
395.9 131.57 396.09 131.57 395.75 131.5 cv
415.25 131.5 li
415.49 131.53 li
415.63 131.51 415.79 131.48 416 131.5 cv
415.96 131.43 li
416.13 131.38 416.309 131.31 416.75 131.5 cv
416.49 131.22 li
416.58 131.18 416.67 131.13 416.75 130.75 cv
416.759 131.07 li
416.849 131.02 416.94 130.95 416.75 130.75 cv
417.03 130.89 li
417.11 130.82 417.2 130.74 417.5 130.75 cv
417.27 130.66 li
417.35 130.569 417.43 130.48 417.5 130.75 cv
417.49 130.39 li
417.56 130.29 417.63 130.181 417.5 130 cv
417.68 130.06 li
417.74 129.94 417.78 129.82 417.5 130 cv
417.82 129.69 li
417.86 129.55 417.901 129.41 418.25 129.25 cv
417.919 129.25 li
417.94 129.1 417.95 128.93 418.25 128.5 cv
418.25 112.75 li
417.95 112.82 li
409.89 105.65 400.58 95.94 395 85 cv
394.25 85.7499 mo
394.12 85.71 li
394.03 85.78 393.95 85.8599 394.25 85.7499 cv
393.614 86.3201 mo
393.691 86.1999 li
393.614 86.3201 li
393.5 86.5 mo
393.577 86.38 li
393.614 86.3201 li
393.5 86.5 li
393.5 87.25 mo
393.321 86.9799 li
393.269 87.15 393.241 87.3 393.5 87.25 cv
393.5 130 mo
393.3 129.69 li
393.34 129.82 393.38 129.94 393.5 130 cv
415.03 131.57 mo
415.25 131.5 li
415.03 131.57 li
clp
gsave
392.42 132.32 mo
418.698 132.32 li
418.698 84.518 li
392.42 84.518 li
392.42 132.32 li
eclp
gsave
392.42 132.32 mo
418.699 132.32 li
418.699 84.5169 li
392.42 84.5169 li
392.42 132.32 li
clp
395.898 131.557 mo
395.848 131.557 395.746 131.547 395.63 131.53 cv
395.684 131.517 li
395.698 131.517 395.711 131.518 395.723 131.518 cv
395.777 131.518 395.794 131.511 395.759 131.502 cv
395.944 131.54 395.964 131.557 395.898 131.557 cv
415.49 131.53 mo
415.463 131.527 li
415.759 131.478 416.172 131.374 416.591 131.153 cv
416.558 131.188 416.524 131.205 416.49 131.22 cv
416.75 131.5 li
416.529 131.405 416.374 131.375 416.253 131.375 cv
416.132 131.375 416.045 131.405 415.96 131.43 cv
416 131.5 li
415.951 131.495 415.905 131.493 415.861 131.493 cv
415.717 131.493 415.597 131.515 415.49 131.53 cv
415.249 131.5 mo
395.751 131.5 li
395.75 131.5 395.75 131.5 395.75 131.5 cv
415.25 131.5 li
415.249 131.5 li
395 131.5 mo
395 131.5 li
394.753 131.328 394.613 131.234 394.522 131.175 cv
394.569 131.2 394.617 131.223 394.663 131.245 cv
395 131.5 li
394.993 131.42 394.911 131.362 394.804 131.306 cv
395.059 131.409 395.295 131.465 395.471 131.493 cv
395.356 131.482 395.26 131.459 395.16 131.43 cv
395 131.5 li
395 131.5 mo
395 131.5 li
395 131.5 li
416.759 131.07 mo
416.759 131.059 li
416.786 131.042 416.813 131.025 416.84 131.008 cv
416.82 131.034 416.79 131.053 416.759 131.07 cv
394.095 130.893 mo
394.093 130.892 394.092 130.891 394.09 130.89 cv
394.09 130.89 li
394.092 130.891 394.093 130.892 394.095 130.893 cv
417.03 130.89 mo
417.018 130.884 li
417.106 130.817 417.194 130.744 417.278 130.663 cv
417.5 130.75 li
417.483 130.749 417.466 130.749 417.45 130.749 cv
417.19 130.749 417.105 130.824 417.03 130.89 cv
417.5 130.75 mo
417.465 130.615 417.427 130.57 417.389 130.57 cv
417.382 130.57 417.376 130.571 417.369 130.573 cv
417.411 130.53 417.451 130.485 417.491 130.438 cv
417.5 130.75 li
393.5 130.75 mo
393.724 130.6 393.708 130.513 393.661 130.436 cv
393.731 130.533 393.806 130.622 393.885 130.702 cv
393.869 130.689 393.854 130.674 393.84 130.66 cv
393.5 130.75 li
393.5 130.75 mo
393.555 130.321 393.499 130.198 393.45 130.085 cv
393.504 130.195 393.564 130.297 393.629 130.392 cv
393.5 130.75 li
393.224 129.384 mo
393.212 129.336 393.205 129.294 393.2 129.25 cv
393.203 129.25 li
393.209 129.296 393.216 129.34 393.224 129.384 cv
418.085 129.338 mo
418.094 129.309 418.103 129.28 418.111 129.25 cv
418.25 129.25 li
418.185 129.28 418.131 129.309 418.085 129.338 cv
393.171 128.828 mo
393.169 128.802 393.169 128.776 393.169 128.75 cv
393.351 128.612 li
393.17 128.75 li
393.17 128.776 393.17 128.802 393.171 128.828 cv
418.25 128.5 mo
418.25 128.5 418.25 128.5 418.25 128.5 cv
418.25 112.75 li
418.25 112.75 li
418.25 128.5 li
418.25 128.5 418.25 128.5 418.25 128.5 cv
393.5 87.9999 mo
393.169 87.8699 393.169 87.701 393.22 87.431 cv
393.359 87.341 li
393.336 87.6975 393.404 87.9621 393.5 87.9998 cv
393.5 87.9998 li
393.366 87.2555 mo
393.255 87.2319 393.281 87.112 393.321 86.9799 cv
393.39 87.0842 li
393.38 87.1428 393.372 87.2001 393.366 87.2555 cv
393.43 86.8964 mo
393.418 86.7009 393.47 86.5805 393.53 86.46 cv
393.5 86.5 li
393.614 86.3201 li
393.577 86.38 li
393.763 86.092 393.817 86.0209 393.88 85.95 cv
393.915 85.9312 li
393.662 86.2343 393.511 86.5777 393.43 86.8964 cv
394.038 85.7948 mo
394.037 85.7784 394.077 85.7431 394.12 85.71 cv
394.125 85.7115 li
394.095 85.7388 394.066 85.7665 394.038 85.7948 cv
394.301 85.5664 mo
394.33 85.5395 394.365 85.5147 394.401 85.49 cv
394.395 85.5002 li
394.363 85.5216 394.331 85.5438 394.301 85.5664 cv
394.65 85.3527 mo
394.677 85.3366 394.703 85.3233 394.73 85.3099 cv
395 85 li
394.845 85.2018 394.812 85.2633 394.82 85.2758 cv
394.761 85.2998 394.704 85.3256 394.65 85.3527 cv
394.854 85.2618 mo
395 85 li
395 85 li
395.031 85.0601 395.062 85.1208 395.093 85.1809 cv
395.01 85.205 394.93 85.2321 394.854 85.2618 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[27.662 0 0 -49.1688 392.42 214.849 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMtSn.Fa^h>m$W_>s6@r"6dGn.F7Pli?Me_>sQIo-3r0b5hMRo-29Vq>gL,o-2$OrXn`Gl2]K;
rXo/SoeXGbrXo/Ss"jC*_>sQIs!%+lg]6L;rXo/SoeXGbrXo/SoeZOH`W5uMs!%FupdEC-o`4t's!%Fu
pdDt!rXo/Sr\O=;mf:i;rXo/Sr\O=;_>sTJ!YHV#r\O=;_>sQIs!%Fus$Z]`i;hj;rXo/Sr\ORBqGkB4
rXo/Sr\ORBqc*Vr_>sQIs!%Fus$Z]`dfAk;rXo/Sr\ORBqGkB4rXo/Sr\ORBr`/o/oDm2;rXo/Sr\ORB
r`/o/`;ol;rXo/Sr\ORBr`/o/_>sQIs!%Fus$ZidrFY0lh#REds!%Fus$Zids(;:T_>sQIs!%Fu!^oFV
s&K)2s*)<[rXo/Sr\ORBr`/u1s*&t~>

%%EndBinary
grestore
np
415.463 131.527 mo
415.25 131.5 li
415.249 131.5 li
415.25 131.5 li
395.75 131.5 li
395.75 131.5 395.75 131.5 395.751 131.5 cv
395.75 131.5 li
395.753 131.501 395.756 131.501 395.759 131.502 cv
395.794 131.511 395.777 131.518 395.723 131.518 cv
395.711 131.518 395.698 131.517 395.684 131.517 cv
395.75 131.5 li
395.717 131.501 395.685 131.502 395.654 131.502 cv
395.587 131.502 395.527 131.499 395.471 131.493 cv
395.295 131.465 395.059 131.409 394.804 131.306 cv
394.75 131.278 394.69 131.25 394.63 131.22 cv
394.663 131.245 li
394.617 131.223 394.569 131.2 394.522 131.175 cv
394.443 131.123 394.402 131.098 394.36 131.07 cv
394.25 130.75 li
394.261 130.9 394.237 130.945 394.199 130.945 cv
394.17 130.945 394.133 130.919 394.095 130.893 cv
394.093 130.892 394.092 130.891 394.09 130.89 cv
394.25 130.75 li
394.185 130.769 394.131 130.777 394.086 130.777 cv
393.993 130.777 393.934 130.744 393.885 130.702 cv
393.806 130.622 393.731 130.533 393.661 130.436 cv
393.651 130.421 393.64 130.405 393.63 130.39 cv
393.629 130.392 li
393.564 130.297 393.504 130.195 393.45 130.085 cv
393.447 130.076 393.443 130.068 393.44 130.06 cv
393.5 130 li
393.38 129.94 393.34 129.82 393.3 129.69 cv
393.5 130 li
393.325 129.673 393.257 129.51 393.224 129.384 cv
393.216 129.34 393.209 129.296 393.203 129.25 cv
393.5 129.25 li
393.226 129.122 393.178 128.979 393.171 128.828 cv
393.17 128.802 393.17 128.776 393.17 128.75 cv
393.351 128.612 li
393.5 128.5 li
393.5 88 li
393.5 88 393.5 88 393.5 87.9999 cv
393.5 87.9998 li
393.404 87.9621 393.336 87.6975 393.359 87.341 cv
393.5 87.25 li
393.466 87.2566 393.436 87.2598 393.411 87.2598 cv
393.394 87.2598 393.379 87.2583 393.366 87.2555 cv
393.372 87.2001 393.38 87.1428 393.39 87.0842 cv
393.5 87.25 li
393.457 87.1078 393.436 86.993 393.43 86.8964 cv
393.511 86.5777 393.662 86.2343 393.915 85.9312 cv
394.25 85.7499 li
394.143 85.7892 394.084 85.8042 394.057 85.8042 cv
394.044 85.8042 394.039 85.8008 394.038 85.7948 cv
394.066 85.7665 394.095 85.7388 394.125 85.7115 cv
394.25 85.7499 li
394.218 85.6724 394.248 85.6157 394.301 85.5664 cv
394.331 85.5438 394.363 85.5216 394.395 85.5002 cv
394.25 85.7499 li
394.445 85.5009 394.554 85.4094 394.65 85.3527 cv
394.704 85.3256 394.761 85.2998 394.82 85.2758 cv
394.821 85.2776 394.823 85.2784 394.826 85.2784 cv
394.832 85.2784 394.841 85.2745 394.85 85.27 cv
394.854 85.2618 li
394.93 85.2321 395.01 85.205 395.093 85.1809 cv
395.209 85.4069 395.326 85.6317 395.446 85.8567 cv
393.891 86.5129 393.943 88.4518 394.25 88.7501 cv
394.25 123.838 li
393.787 124.738 li
393.787 124.741 li
394.25 124.741 li
394.25 128.5 li
393.88 128.24 li
393.88 130.364 395.533 130.842 396.215 130.842 cv
396.413 130.842 396.529 130.802 396.5 130.75 cv
414.5 130.75 li
414.49 130.98 li
414.49 130.98 417.24 130.98 417.5 128.5 cv
417.5 112.418 li
417.65 112.553 417.8 112.687 417.95 112.82 cv
418.25 112.75 li
418.25 128.5 li
418.25 128.5 418.25 128.5 418.25 128.5 cv
417.95 128.93 417.94 129.1 417.919 129.25 cv
418.111 129.25 li
418.103 129.28 418.094 129.309 418.085 129.338 cv
417.886 129.462 417.853 129.576 417.82 129.69 cv
417.5 130 li
417.603 129.934 417.663 129.908 417.694 129.908 cv
417.748 129.908 417.718 129.984 417.68 130.06 cv
417.5 130 li
417.63 130.181 417.56 130.29 417.49 130.39 cv
417.491 130.438 li
417.451 130.485 417.411 130.53 417.369 130.573 cv
417.337 130.585 417.303 130.622 417.27 130.66 cv
417.278 130.663 li
417.194 130.744 417.106 130.817 417.018 130.884 cv
416.75 130.75 li
416.875 130.882 416.878 130.957 416.84 131.008 cv
416.813 131.025 416.786 131.042 416.759 131.059 cv
416.75 130.75 li
416.75 130.75 li
416.7 130.986 416.647 131.095 416.591 131.153 cv
416.172 131.374 415.759 131.478 415.463 131.527 cv
417.5 130 mo
417.5 130 li
417.5 130 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[27.662 0 0 -49.1688 392.42 214.849 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;o:TdK&n>m=3(Tm=4^-dfAcb`;fmfmXN1UrdXEnjT+6>rdXEn`;omeon`O%`;omen;,Zrmf<?:n;,$`
rdXp'o8r_Ic2dinreU0-aT28>rdXp'o8pokrdXp'o8r5;g]7>'reUT9opNc!rdXp's,d8KpR/u#rdXp'
s,coAg]6U>rdXp's,coA`;omereUT9opPaYaT2<ireUT9rgEPTc2dV>rdXp's,d5Jpn>Y,rdXp's,d5J
pn@-Vf)Yf"reUT9rgEPT`;omes+g`4OHBI0pn>Y,rdXp's,d5Js.T:hi;hs>rdXp's,d5Js.T:h`;ome
reUT9rgEe[ql0Xr`;omereUT9rgEe[qPr!Eo)Sc>reUT9rgEe[qPqL7rdXp's,d5Js.TFlrNc%qdK'8r
reUT9rgEe[ri5q&`;omereUT9rgEe[ri5q&`;omereUT9rgEe[ri5q&joF<>rdXp's,d5Js.TFls0D[:
`;omereUT9rg<h]TrS-ms0D[:`;omereUT9rgEe[ri6"(s1<d~>

%%EndBinary
grestore
np
414.49 130.98 mo
414.5 130.75 li
396.5 130.75 li
396.529 130.802 396.413 130.842 396.215 130.842 cv
395.533 130.842 393.88 130.364 393.88 128.24 cv
394.25 128.5 li
394.25 124.741 li
416.879 124.741 li
416.735 123.903 li
416.919 123.718 li
416.788 123.292 li
416.741 123.139 li
416.741 111.734 li
416.995 111.964 417.248 112.192 417.5 112.418 cv
417.5 128.5 li
417.24 130.98 414.49 130.98 414.49 130.98 cv
405.528 130 mo
405.518 130 405.509 130 405.5 130 cv
405.85 130 li
405.842 130 405.835 130 405.828 130 cv
405.849 130 li
406.466 130 407.024 129.753 407.387 129.35 cv
407.408 129.332 407.428 129.313 407.448 129.293 cv
407.685 129.341 li
407.689 129.341 li
407.689 129.017 li
407.949 128.661 408.09 128.232 408.09 127.77 cv
407.75 127.75 li
407.75 127.75 407.75 127.75 407.75 127.75 cv
408.09 127.77 li
408.09 127.77 li
408.09 127.633 408.076 127.501 407.968 127.31 cv
407.983 127.27 407.997 127.23 408.01 127.19 cv
407.799 127.035 li
407.778 126.901 407.741 126.772 407.689 126.651 cv
407.689 126.06 li
407.365 126.162 li
407.002 125.778 406.455 125.54 405.85 125.54 cv
405.5 125.5 li
405.089 125.519 404.651 125.747 404.302 126.11 cv
404.061 126.024 li
404.061 126.403 li
403.874 126.669 403.732 126.981 403.664 127.321 cv
403.618 127.467 403.535 127.611 403.25 127.75 cv
403.62 127.77 li
403.62 127.77 403.62 127.77 403.62 127.77 cv
403.25 127.75 li
403.435 128.377 403.779 128.941 404.231 129.347 cv
404.591 129.75 405.061 130 405.5 130 cv
405.528 130 li
407.769 127.677 mo
407.819 127.465 407.829 127.26 407.803 127.067 cv
407.874 127.158 407.927 127.238 407.968 127.31 cv
407.917 127.439 407.85 127.563 407.769 127.677 cv
394.25 123.838 mo
394.25 88.7501 li
393.943 88.4518 393.891 86.5129 395.446 85.8567 cv
396.514 87.8698 397.707 89.8406 398.99 91.7588 cv
395 91.7588 li
395 92.1029 li
394.922 92.0177 li
394.86 91.7709 li
394.727 91.8042 li
394.706 91.7806 li
394.656 91.822 li
394.259 91.9212 li
394.259 123.306 li
394.268 123.362 li
394.308 123.623 li
394.32 123.702 li
394.25 123.838 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[26.2789 0 0 -47.803 392.42 213.483 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 35 
/M[19 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mL&@emJu\CmL&@eoDnagmdBKMmK`.[mdBKMq?QZumJu\CmL&@emJu\C!"/`5nHnUgmK!7SnaHGanHnUg
o)S[grpK=FrX/0%mK`.[rpK=FrX/0%q$6TumK!7SnaHGanHnUgmK!7SnaHJb!"/6&qZl`tmK!7SrpTLK
rX/0%qZl`tnc8UgrpKdSo^MhenHo'toEO^`rpKdSo^MhenHo'trW`*$mK!7SrpTLKrX/Q0p'CO#oEO^`
rpKdSs7#aPrX/Q0p'CO#oEO^`rpKdSs7#aPrX/Q0p'CO#oEOgcrW)rcrpTmVp@8+hr!E'&qZl`tmK!7S
rpTmVp@8+hr!E'&qZm'(p]g-drpKdSs7#aPrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX&W3r<`H/o*>0t
q$$0drpKdSs7$$Xq=FRmr!E?.o*>0tq$$6frrE&drpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgU
rX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpg$[qt0jprsAZ2rWr*#r!)s#
mK!7SrpTmVrpg$[qt0jpr!E?.o*>0tq$$3e!!*#drpTmVrpg$[qt0jpr!E?.o*>0tq$$0drpKdSs7$$X
s7?-[rX/Q0rWr*#r!!-)q??9erpKdSs7$$Xs7?-[rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^
rq66trX&T2rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!33*qZm$'r!!'&mK!7SrpTmV
rpg$[rq-3_rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!*9-"pOl/r!*0)rWW9(
mK!7SrpTmVrpg$[rq$9bp%J@lr!E?.r!*9-"pOl/r!*'&rWMWhrpKdSs7$$Xs7?6^!ql6[J,~>

%%EndBinary
grestore
np
405.85 130 mo
405.5 130 li
405.509 130 405.518 130 405.528 130 cv
405.828 130 li
405.835 130 405.842 130 405.85 130 cv
407.387 129.35 mo
407.404 129.331 407.421 129.311 407.437 129.291 cv
407.448 129.293 li
407.428 129.313 407.408 129.332 407.387 129.35 cv
404.231 129.347 mo
403.779 128.941 403.435 128.377 403.25 127.75 cv
403.62 127.77 li
403.62 127.77 li
403.62 127.77 li
403.62 128.386 403.871 128.944 404.231 129.347 cv
407.689 129.017 mo
407.689 128.878 li
407.829 128.547 407.862 128.162 407.75 127.75 cv
408.09 127.77 li
408.09 128.232 407.949 128.661 407.689 129.017 cv
406.296 127.811 mo
406.25 127.811 li
405.439 127.811 li
405.439 127.714 li
405.462 127.689 li
405.466 127.69 li
405.5 127.69 li
406.256 127.69 li
406.31 127.744 li
406.31 127.797 li
406.296 127.811 li
407.689 127.781 mo
407.689 126.651 li
407.741 126.772 407.778 126.901 407.799 127.035 cv
407.75 127 li
407.769 127.023 407.787 127.045 407.803 127.067 cv
407.829 127.26 407.819 127.465 407.769 127.677 cv
407.743 127.713 407.717 127.747 407.689 127.781 cv
404.061 127.519 mo
404.013 127.361 403.991 127.187 404 127 cv
403.7 127.19 li
403.689 127.234 403.678 127.277 403.664 127.321 cv
403.732 126.981 403.874 126.669 404.061 126.403 cv
404.061 127.519 li
406.841 126.327 mo
406.76 126.247 li
406.431 126.285 li
406.21 126.311 li
405.533 126.311 li
404.919 126.251 li
404.865 126.309 li
404.302 126.11 li
404.651 125.747 405.089 125.519 405.5 125.5 cv
405.85 125.54 li
406.455 125.54 407.002 125.778 407.365 126.162 cv
406.841 126.327 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -6.829 402.102 173.875 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 5 
/M[5 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!r~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bq>~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.849 130 mo
405.828 130 li
405.784 130 405.74 129.998 405.696 129.995 cv
406.399 129.957 406.976 129.718 407.387 129.35 cv
407.024 129.753 406.466 130 405.849 130 cv
405.528 130 mo
405.5 130 li
405.061 130 404.591 129.75 404.231 129.347 cv
404.643 129.718 405.144 129.957 405.696 129.995 cv
405.641 129.998 405.585 130 405.528 130 cv
408.09 127.77 mo
407.75 127.75 li
407.75 127.75 407.75 127.75 407.75 127.75 cv
407.75 127.75 li
407.757 127.726 407.763 127.701 407.769 127.677 cv
407.85 127.563 407.917 127.439 407.968 127.31 cv
408.076 127.501 408.09 127.633 408.09 127.77 cv
403.62 127.77 mo
403.25 127.75 li
403.535 127.611 403.618 127.467 403.664 127.321 cv
403.635 127.466 403.62 127.616 403.62 127.77 cv
407.968 127.31 mo
407.927 127.238 407.874 127.158 407.803 127.067 cv
407.802 127.056 407.8 127.046 407.799 127.035 cv
408.01 127.19 li
407.997 127.23 407.983 127.27 407.968 127.31 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -5.4632 402.102 172.509 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~_o'C0_o'C0_o'C0_o'C0_o'C0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.828 130 mo
405.528 130 li
405.585 130 405.641 129.998 405.696 129.995 cv
405.74 129.998 405.784 130 405.828 130 cv
405.696 129.995 mo
405.144 129.957 404.643 129.718 404.231 129.347 cv
403.871 128.944 403.62 128.386 403.62 127.77 cv
403.62 127.77 li
403.62 127.616 403.635 127.466 403.664 127.321 cv
403.678 127.277 403.689 127.234 403.7 127.19 cv
404 127 li
403.991 127.187 404.013 127.361 404.061 127.519 cv
404.061 128.5 li
404.985 128.5 li
404.556 128.901 li
404.957 129.33 li
405.343 129.243 li
405.577 129.19 li
406.158 129.19 li
406.714 129.339 li
406.875 129.179 li
407.437 129.291 li
407.421 129.311 407.404 129.331 407.387 129.35 cv
406.976 129.718 406.399 129.957 405.696 129.995 cv
407.689 128.878 mo
407.689 127.781 li
407.717 127.747 407.743 127.713 407.769 127.677 cv
407.763 127.701 407.757 127.726 407.75 127.75 cv
407.75 127.75 li
407.862 128.162 407.829 128.547 407.689 128.878 cv
407.803 127.067 mo
407.787 127.045 407.769 127.023 407.75 127 cv
407.799 127.035 li
407.8 127.046 407.802 127.056 407.803 127.067 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -5.4632 402.102 172.509 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~`l?$<`l?$<`l?$<`l?$<`l?$<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
407.689 129.341 mo
407.685 129.341 li
407.448 129.293 li
407.537 129.207 407.617 129.115 407.689 129.017 cv
407.689 129.341 li
407.689 126.651 mo
407.612 126.471 407.501 126.306 407.365 126.162 cv
407.689 126.06 li
407.689 126.651 li
404.061 126.403 mo
404.061 126.024 li
404.302 126.11 li
404.216 126.2 404.135 126.298 404.061 126.403 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -6.829 402.102 173.875 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 5 
/M[5 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!r~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~84Z9B84Z9B84Z9B84Z9B84Z9B<)cgr;u~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
407.448 129.293 mo
407.437 129.291 li
407.541 129.166 407.626 129.027 407.689 128.878 cv
407.689 129.017 li
407.617 129.115 407.537 129.207 407.448 129.293 cv
405.849 128.63 mo
405.009 128.63 404.275 128.223 404.061 127.519 cv
404.061 126.403 li
404.135 126.298 404.216 126.2 404.302 126.11 cv
404.865 126.309 li
404.919 126.251 li
405.533 126.311 li
406.21 126.311 li
406.431 126.285 li
406.76 126.247 li
406.841 126.327 li
407.365 126.162 li
407.501 126.306 407.612 126.471 407.689 126.651 cv
407.689 127.781 li
407.321 128.224 406.706 128.517 405.865 128.517 cv
405.748 128.517 405.626 128.512 405.5 128.5 cv
405.849 128.63 li
405.439 127.811 mo
406.25 127.811 li
406.296 127.811 li
406.31 127.797 li
406.31 127.744 li
406.256 127.69 li
405.5 127.69 li
405.466 127.69 li
405.462 127.689 li
405.439 127.714 li
405.439 127.811 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -6.829 402.102 173.875 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 5 
/M[5 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~91qoN91qoN91qoN91qoN91qoN='&I)<r~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
406.714 129.339 mo
406.158 129.19 li
405.577 129.19 li
405.343 129.243 li
404.957 129.33 li
404.556 128.901 li
404.985 128.5 li
404.061 128.5 li
404.061 127.519 li
404.275 128.223 405.009 128.63 405.849 128.63 cv
405.5 128.5 li
405.626 128.512 405.748 128.517 405.865 128.517 cv
406.706 128.517 407.321 128.224 407.689 127.781 cv
407.689 128.878 li
407.626 129.027 407.541 129.166 407.437 129.291 cv
406.875 129.179 li
406.714 129.339 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -5.4632 402.102 172.509 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~4?P_g4?P_g4?P_g4?P_g4?P_g~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
415.259 123.259 mo
395.837 123.259 li
395.741 123.163 li
395.741 93.2408 li
400.007 93.2408 li
404.538 99.6856 410.038 105.505 415.259 110.37 cv
415.259 123.259 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[23.5127 0 0 -32.7792 393.803 206.654 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 24 
/M[17 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2"U,&5"9\i1
"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2"U,&5
"9\i1"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2
"U,&5"9\i1"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\f/
!s8W/"U,&5"9\i1"9\i0!s8W-"U,&5"U"r2"9\i1!s8W-!sJi3"U,#3"9\i1"9S`.!s8]1"U,&4"9\i1
"9\f/!s8W/"U,&5"9\i1"9\i0!s8W-~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W."9\i1!s8W-
!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W."9\i1
!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W.
"9\i1!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-
!s8W."9\i1!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-
!s8W-!s8W."9\i1!s8W-!s8W-!s8T+~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~d*U7je'ldpe'ldpe'ldpe'QIje'ldpe'ldpe'ldpe'l[je'ldpe'ldpe'ldpe'ldmd*pIme'ldpe'ldp
e'ldpd*U7je(3+$f%/F'f%/F'f$Mdme'ln!f%/F'f%/F'f%/3pe'ldsf%/F'f%/F'f%/F!d*pImf%/F'
f%/F'f%/F'd*U7je(3+'g"G'3g"G'3g!J*pe'ln!g"G'3g"G'3g"Fa!e'ldsf%Ja0g"G'3g"G'*d*pIm
f%/O-g"G'3g"G'3d*U7je(3+'g"G'3g"G'3g!J*pe'ln!g"G'7h;-oCh;-H)e'ldsf%Ja0h;-oCh;-o6
d*pImf%/O-g"kK?h;-oCd*U7je(3+'g"G3;h;-oCh9aNte'ln!g"G'7h;-oCh;-H)e'ldsf%Ja0h;.#I
i8EP?d*pImf%/O-g"kKBi8EPOd*U7je(3+'g"G3;i8EPOi6]j"e'ln!g"G'7h;I5Li8Du/e'ldsf%Ja0
h;.#Ii8EP?d*pImf%/O-g"kKBi8EYU~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
394.25 124.741 mo
393.787 124.741 li
393.787 124.738 li
394.25 123.838 li
394.25 124.741 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 392.42 176.606 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~^V@Ou^V@Ou^A~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
416.879 124.741 mo
394.25 124.741 li
394.25 123.838 li
394.32 123.702 li
394.308 123.623 li
394.268 123.362 li
394.259 123.306 li
394.259 91.9212 li
394.656 91.822 li
394.706 91.7806 li
394.727 91.8042 li
394.86 91.7709 li
394.922 92.0177 li
395 92.1029 li
395 91.7588 li
398.99 91.7588 li
399.156 92.0067 399.324 92.2536 399.493 92.4997 cv
395 92.4997 li
395.04 92.4898 li
395.18 92.3498 li
395 92.4997 li
395 123.25 li
395.04 123.51 li
395.18 123.65 li
395 124 li
416 124 li
415.94 123.65 li
416.08 123.51 li
416 123.25 li
416 111.056 li
416.248 111.285 416.495 111.51 416.741 111.734 cv
416.741 123.139 li
416.788 123.292 li
416.919 123.718 li
416.735 123.903 li
416.879 124.741 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[26.2789 0 0 -35.5108 392.42 208.02 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 26 
/M[19 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U"r2"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1
"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\i2"U,&5"U"r2"9\i1"9\i1"9\l3
"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\i2"U,&5"U"r2
"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1
"9\i2"U,&5"U"r2"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\f/!s8W-"U,&5
"U,#3"9\i1"9S`.!s8W/"U,&5"U"r2"9\i1!s8W-!s8]1"U,&5"9\i1"9\i0!s8W-!sJi3"U,&4"9\i1
"9\f/!s8W-"U,&5"U,#3"9\i1"9S`.!s8W/"U,&5"U"r2"9\i1!s8W-!s8~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-
!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/
"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8W."9\i1"9S`.
!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-
!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1
"9\f/!s8W-!s8W-!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-
!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!WiE+"9\i1"9S`.!s8W-!s8W,!Wi~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~p@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FVp\4FVp\4FVp\4CTp@n=Up\4FVp\4FVp\4FVp\+=Sp\4FV
p\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FVp\4FVp\4FVp\4CTp@n=Up\4FVp\4FV
p\4FVp\+=Sp\4FVp\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FWq"XXZq"XXZq"XRV
p@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"XXZq"XXZp@e4Sp\4FVq"XXZq"XXZq"XXXp@e7Tp\4FW
q"XXZq"XXZq"XRVp@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"XXZq"XXZp@e4Sp\4FVq"XXZq"XXZ
q"XXXp@e7Tp\4FWq"XXZq"XXZq"XRVp@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"X[\q>'j^p@e4S
p\4FVq"XXZq"aa]q>'j[p@e7Tp\4FWq"XXZq>'j^q>'aXp@n=Up\4IXq"XX[q>'j^q=aOUp\4FVp\=OY
q"X[\q>'j^p@e4Sp\4FVq"XXZq"aa]qYL'^p@e7Tp\4FWq"XXZq>'j_qYC~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
416 124 mo
395 124 li
395.18 123.65 li
395.04 123.51 li
395 123.25 li
395 92.4997 li
399.493 92.4997 li
399.663 92.7478 399.834 92.9946 400.007 93.2408 cv
395.741 93.2408 li
395.741 123.163 li
395.837 123.259 li
415.259 123.259 li
415.259 110.37 li
415.506 110.601 415.754 110.83 416 111.056 cv
416 123.25 li
416.08 123.51 li
415.94 123.65 li
416 124 li
395 92.4997 mo
395 92.4997 li
395.18 92.3498 li
395.04 92.4898 li
395 92.4997 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[23.5127 0 0 -34.145 393.803 206.654 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*!s8W-
!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*
!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)
!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*
!WiE)!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!W~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3&
!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)!<E3%
!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)
!<E3%!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~kND*ol07Hsl07Hsl07Hsl0%6ol07Hsl07Hsl07Hsl07Bol07Hsl07Hsl07Hsl07HqkNV6ql07Hsl07Hs
l07HskND*ol07Hsl07Hsl07Hsl0%6ol07KulK[["lK[["lK[Qql07HtlK[["lK[["lK[ZtkNV6qlK[["
lK[["lK[["kND*ol0@R!lK[["lK[["lK@?pl07Kum-O**m-O**m-Noul07HtlKmm(m-O**m-O*%kNV6q
lK[a&m-O**m-O**kND*ol0@R#m-O**m-O**m-!Qrl07Kum-O**m-O**m-Noul07HtlKmm(mHs<.mHs<(
kNV6qlK[a&m-X3-mHs<.kND*ol0@R#m-O-,mHs<.mH<Zsl07Kum-O*+mHs<.mHs*"l07HtlKmm(mHs<.
mHs<(kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`6n)rlul07Kum-O*+mI0N4n*fH&l07HtlKmm(
mHsB2n*f`.kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`8nG~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
395 123.25 mo
416 123.25 li
416 92.5 li
395 92.5 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
396.09 164.26 mo
393.17 164.26 393.17 167.08 393.5 166.75 cv
393.5 208 li
393.17 207.96 li
393.17 210.781 396.09 210.781 395.75 211 cv
415.25 211 li
415.03 210.781 li
415.03 210.781 417.95 210.781 418.25 208 cv
418.25 166.75 li
417.95 167.08 li
417.95 167.08 417.95 164.26 415.25 164.5 cv
395.75 164.5 li
396.09 164.26 li
1 /3 /CSD get_res sepcs
.498 sep
ef
396.63 164.85 mo
393.88 164.85 393.88 167.6 394.25 167.5 cv
394.25 207.25 li
393.88 207.451 li
393.88 210.191 396.63 210.191 396.5 210.25 cv
414.5 210.25 li
414.49 210.191 li
414.49 210.191 417.24 210.191 417.5 207.25 cv
417.5 167.5 li
417.24 167.6 li
417.24 167.6 417.24 164.85 414.5 164.5 cv
396.5 164.5 li
396.63 164.85 li
.772549 .690639 .638117 .874083 cmyk
ef
415.259 189.581 mo
409.88 184.57 404.204 178.56 399.598 171.991 cv
415.259 171.991 li
415.259 189.581 li
.0196078 .0156863 0 .815686 cmyk
f
gsave
394.259 203.822 mo
417.242 203.822 li
417.242 170.509 li
394.259 170.509 li
394.259 203.822 li
clp
416.741 190.944 mo
416.495 190.72 416.248 190.495 416 190.267 cv
416 172 li
416.08 171.7 li
415.94 171.56 li
416 171.25 li
399.085 171.25 li
398.917 171.003 398.75 170.757 398.585 170.509 cv
416.898 170.509 li
416.742 171.314 li
416.906 171.478 li
416.741 172.097 li
416.741 190.944 li
.0196078 .0156863 0 .964706 cmyk
f
416 190.267 mo
415.754 190.04 415.506 189.811 415.259 189.581 cv
415.259 171.991 li
399.598 171.991 li
399.426 171.745 399.255 171.497 399.085 171.25 cv
416 171.25 li
415.94 171.56 li
416.08 171.7 li
416 172 li
416 190.267 li
.0117647 .00784314 0 .905882 cmyk
f
grestore
408.5 169 mo
408.2 168.78 li
408.06 168.92 li
407.75 169 li
403.25 169 li
403.25 169 li
407.75 169 li
408.03 168.68 li
407.89 168.81 li
407.75 169 li
407.75 168.25 li
408.03 168.151 li
407.89 168.02 li
407.75 168.25 li
403.25 168.25 li
403.231 168.02 li
403.115 168.128 li
402.92 167.95 li
403.06 167.809 li
403.25 167.5 li
407.75 167.5 li
408.06 167.809 li
408.2 167.95 li
408.5 168.25 li
408.5 169 li
403.25 169 mo
403.06 168.92 li
402.92 168.78 li
403.25 169 li
403.25 168.25 mo
403.248 168.249 li
403.25 168.25 li
403.25 168.25 li
.0196078 .0156863 0 .964706 cmyk
f
403.25 169 mo
403.25 169 li
403.25 168.25 li
403.25 168.25 li
403.25 169 li
403.25 169 mo
403.09 168.68 li
403.231 168.81 li
403.25 169 li
403.248 168.249 mo
403.09 168.151 li
403.115 168.128 li
403.248 168.249 li
.0196078 .0156863 0 .666667 cmyk
f
407.75 169 mo
407.75 169 li
407.89 168.81 li
408.03 168.68 li
407.75 169 li
407.75 169 mo
403.25 169 li
403.25 168.25 li
403.25 168.25 li
403.25 168.25 li
403.248 168.249 li
403.115 168.128 li
403.231 168.02 li
403.25 168.25 li
407.75 168.25 li
407.75 169 li
407.75 168.25 mo
407.75 168.25 li
407.75 168.25 mo
407.89 168.02 li
408.03 168.151 li
407.75 168.25 li
.0117647 .00784314 0 .682353 cmyk
f
gsave
395 164.5 mo
394.73 164.519 li
394.61 164.58 394.5 164.64 394.25 164.5 cv
394.401 164.7 li
394.3 164.769 394.2 164.84 394.25 165.25 cv
393.88 165.16 li
393.809 165.24 393.75 165.32 393.5 165.25 cv
393.691 165.41 li
393.63 165.5 393.58 165.59 393.5 166 cv
393.53 165.67 li
393.44 165.849 393.37 166.03 393.5 166 cv
393.321 166.191 li
393.269 166.361 393.241 166.51 393.5 166.75 cv
393.5 208 li
393.169 207.96 li
393.169 208.139 393.179 208.31 393.5 208.75 cv
393.3 208.89 li
393.34 209.031 393.38 209.15 393.5 209.5 cv
393.44 209.27 li
393.49 209.39 393.559 209.5 393.5 209.5 cv
393.63 209.589 li
393.691 209.69 393.77 209.78 393.5 209.5 cv
393.84 209.87 li
393.92 209.95 394.01 210.03 394.25 210.25 cv
394.09 210.09 li
394.25 210.25 li
394.36 210.281 li
394.45 210.34 394.54 210.389 395 210.25 cv
394.63 210.43 li
394.809 210.519 394.99 210.59 395 211 cv
395.16 210.64 li
395.33 210.69 395.491 210.72 395.75 211 cv
395.63 210.74 li
395.9 210.78 396.09 210.78 395.75 211 cv
415.25 211 li
415.03 210.78 li
415.03 210.78 415.219 210.78 415.25 211 cv
415.49 210.74 li
415.63 210.72 415.79 210.69 416 211 cv
415.96 210.64 li
416.13 210.59 416.309 210.519 416.75 210.25 cv
416.759 210.281 li
416.849 210.23 416.94 210.16 416.75 210.25 cv
417.03 210.09 li
417.11 210.03 417.2 209.95 417.5 209.5 cv
417.49 209.589 li
417.56 209.5 417.63 209.39 417.5 209.5 cv
417.68 209.27 li
417.74 209.15 417.78 209.031 417.5 208.75 cv
417.82 208.89 li
417.86 208.76 417.901 208.62 418.25 208.75 cv
417.919 208.46 li
417.94 208.31 417.95 208.139 418.25 208 cv
418.25 192.25 li
417.95 192.03 li
409.89 184.86 400.58 175.15 395 164.5 cv
394.85 164.48 li
394.809 164.5 394.77 164.51 395 164.5 cv
394.25 165.25 mo
394.12 164.92 li
394.03 164.99 393.95 165.07 394.25 165.25 cv
393.5 166.75 mo
393.22 166.64 li
393.169 166.911 393.169 167.08 393.5 166.75 cv
393.5 208.75 mo
393.2 208.46 li
393.22 208.62 393.259 208.76 393.5 208.75 cv
417.27 209.87 mo
417.35 209.78 417.43 209.69 417.5 209.5 cv
417.27 209.87 li
416.49 210.43 mo
416.75 210.25 li
416.49 210.43 li
clp
gsave
392.42 211.53 mo
418.698 211.53 li
418.698 163.727 li
392.42 163.727 li
392.42 211.53 li
eclp
gsave
392.42 211.53 mo
418.699 211.53 li
418.699 163.727 li
392.42 163.727 li
392.42 211.53 li
clp
416 211 mo
415.847 210.773 415.72 210.729 415.608 210.729 cv
415.567 210.729 415.528 210.735 415.49 210.74 cv
415.25 211 li
415.25 211 li
395.75 211 li
395.75 211 395.75 211 395.75 211 cv
415.25 211 li
415.25 211 li
415.224 210.812 415.082 210.785 415.041 210.781 cv
415.114 210.779 415.539 210.765 416.059 210.608 cv
416.024 210.62 415.992 210.631 415.96 210.64 cv
416 211 li
415.25 211 mo
415.25 211 li
395.75 211 mo
395.75 211 395.75 211 395.75 211 cv
395.75 211 li
395.75 211 li
395 211 mo
394.995 210.802 394.951 210.684 394.886 210.603 cv
394.971 210.641 395.053 210.675 395.131 210.704 cv
395 211 li
415.25 211 mo
415.03 210.781 li
415.03 210.781 415.03 210.781 415.031 210.781 cv
415.25 211 li
395.75 211 mo
395.704 210.95 395.662 210.909 395.621 210.874 cv
395.655 210.886 395.684 210.897 395.707 210.907 cv
395.75 211 li
395.75 211 395.75 211 395.75 211 cv
394.269 210.255 mo
394.25 210.25 li
394.232 210.234 394.216 210.218 394.2 210.204 cv
394.223 210.221 394.246 210.239 394.269 210.255 cv
394.25 210.25 mo
394.25 210.25 li
394.25 210.25 li
393.771 209.795 mo
393.5 209.5 li
393.619 209.623 393.67 209.675 393.685 209.685 cv
393.713 209.723 393.741 209.759 393.771 209.795 cv
393.607 209.573 mo
393.5 209.5 li
393.55 209.5 393.509 209.422 393.465 209.327 cv
393.509 209.414 393.556 209.496 393.607 209.573 cv
393.5 209.5 mo
393.434 209.309 393.393 209.186 393.362 209.092 cv
393.387 209.158 393.414 209.221 393.443 209.282 cv
393.5 209.5 li
418.25 208.75 mo
418.193 208.729 418.144 208.715 418.102 208.707 cv
418.109 208.684 418.116 208.662 418.123 208.639 cv
418.25 208.75 li
393.22 208.57 mo
393.211 208.535 393.205 208.498 393.2 208.46 cv
393.203 208.463 li
393.208 208.499 393.214 208.535 393.22 208.57 cv
393.171 208.039 mo
393.169 208.012 393.169 207.986 393.169 207.96 cv
393.17 207.96 li
393.17 207.987 393.17 208.013 393.171 208.039 cv
418.25 208 mo
418.25 208 418.25 208 418.25 208 cv
418.25 192.25 li
418.25 192.25 li
418.25 208 li
418.25 208 418.25 208 418.25 208 cv
393.247 166.932 mo
393.177 166.932 393.189 166.805 393.22 166.64 cv
393.381 166.703 li
393.398 166.75 393.421 166.777 393.448 166.777 cv
393.464 166.777 393.481 166.768 393.5 166.75 cv
393.5 166.75 li
393.5 166.75 li
393.37 166.879 393.291 166.932 393.247 166.932 cv
393.5 166.75 mo
393.5 166.75 li
393.5 166.75 li
393.359 166.591 mo
393.256 166.437 393.281 166.32 393.321 166.191 cv
393.406 166.1 li
393.359 166.297 393.347 166.469 393.359 166.591 cv
393.437 165.986 mo
393.407 165.938 393.463 165.804 393.53 165.67 cv
393.523 165.745 li
393.488 165.827 393.46 165.908 393.437 165.986 cv
393.615 165.553 mo
393.64 165.488 393.665 165.449 393.691 165.41 cv
393.5 165.25 li
393.567 165.269 393.621 165.277 393.665 165.277 cv
393.768 165.277 393.816 165.232 393.861 165.181 cv
393.763 165.302 393.681 165.428 393.615 165.553 cv
394.4 164.699 mo
394.25 164.5 li
394.363 164.563 394.447 164.586 394.517 164.586 cv
394.601 164.586 394.664 164.552 394.73 164.519 cv
394.737 164.518 li
394.615 164.572 394.503 164.633 394.4 164.699 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[27.662 0 0 -49.1688 392.42 134.273 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&h>m$W_>s6@r"6dGn.F7Pli?Me_>s';p]/J;rXn`GaT2/;rXn`G_>sQIo-3H"f`;!`o-2$O
rXo/Ss"jC*_>sQIs!%+lg]6L;rXo/SoeXGbrXo/SoeZOH`W5uMs!%+lc2dM;rXo/Sr\O=;_>sQIs!%Fu
pdFQNe,]I[s!%FupdDt!rt,;E+sR"BpdDt!rXo/Sr\O=;i;hj;rXo/Sr\ORBqGkB4rXo/Sr\ORBqc*Vr
_>sQIs!%Fus$Z]`dfAk;rXo/Sr\ORBqGkB4rXo/Sr\ORBqGm.fcN*qVs!%Fus$ZidrFX"KrW)p0s!%Fu
s$ZidrFWnHrXo/Sr\ORBr`/o/joF3;rXo/Sr\ORBr`/o/_>sQIs!%Fu!^oFVs&K)2s*)<[rXo/Sr\ORB
r`/u1s*&t~>

%%EndBinary
grestore
np
415.25 211 mo
395.75 211 li
396.09 210.78 395.9 210.78 395.63 210.74 cv
395.707 210.907 li
395.684 210.897 395.655 210.886 395.621 210.874 cv
395.434 210.709 395.3 210.681 395.16 210.64 cv
395.131 210.704 li
395.053 210.675 394.971 210.641 394.886 210.603 cv
394.816 210.517 394.723 210.476 394.63 210.43 cv
395 210.25 li
394.78 210.316 394.645 210.34 394.554 210.34 cv
394.454 210.34 394.407 210.312 394.36 210.281 cv
394.269 210.255 li
394.246 210.239 394.223 210.221 394.2 210.204 cv
393.997 210.018 393.914 209.944 393.84 209.87 cv
393.771 209.795 li
393.741 209.759 393.713 209.723 393.685 209.685 cv
393.687 209.687 393.688 209.687 393.689 209.687 cv
393.696 209.687 393.66 209.64 393.63 209.589 cv
393.607 209.573 li
393.556 209.496 393.509 209.414 393.465 209.327 cv
393.456 209.308 393.448 209.289 393.44 209.27 cv
393.443 209.282 li
393.414 209.221 393.387 209.158 393.362 209.092 cv
393.336 209.013 393.318 208.954 393.3 208.89 cv
393.5 208.75 li
393.492 208.75 393.484 208.751 393.476 208.751 cv
393.311 208.751 393.249 208.674 393.22 208.57 cv
393.214 208.535 393.208 208.499 393.203 208.463 cv
393.5 208.75 li
393.226 208.375 393.179 208.195 393.171 208.039 cv
393.17 208.013 393.17 207.987 393.17 207.96 cv
393.5 208 li
393.5 166.75 li
393.5 166.75 393.5 166.75 393.5 166.75 cv
393.5 166.75 li
393.5 166.75 li
393.5 166.75 393.5 166.75 393.5 166.75 cv
393.5 166.75 li
393.5 166.75 li
393.437 166.692 393.392 166.639 393.359 166.591 cv
393.347 166.469 393.359 166.297 393.406 166.1 cv
393.5 166 li
393.49 166.002 393.482 166.003 393.474 166.003 cv
393.456 166.003 393.444 165.997 393.437 165.986 cv
393.46 165.908 393.488 165.827 393.523 165.745 cv
393.5 166 li
393.545 165.768 393.581 165.638 393.615 165.553 cv
393.681 165.428 393.763 165.302 393.861 165.181 cv
393.868 165.174 393.874 165.167 393.88 165.16 cv
394.25 165.25 li
393.95 165.07 394.03 164.99 394.12 164.92 cv
394.25 165.25 li
394.2 164.84 394.3 164.769 394.401 164.7 cv
394.4 164.699 li
394.503 164.633 394.615 164.572 394.737 164.518 cv
395 164.5 li
395.108 164.706 395.217 164.911 395.328 165.117 cv
393.925 165.79 393.95 167.502 394.23 167.502 cv
394.237 167.502 394.243 167.501 394.25 167.5 cv
394.25 207.25 li
393.88 207.451 li
393.88 210.191 396.63 210.191 396.5 210.25 cv
414.5 210.25 li
414.49 210.191 li
414.49 210.191 417.24 210.191 417.5 207.25 cv
417.5 191.628 li
417.65 191.763 417.8 191.897 417.95 192.03 cv
418.25 192.25 li
418.25 208 li
418.25 208 418.25 208 418.25 208 cv
417.95 208.139 417.94 208.31 417.919 208.46 cv
418.123 208.639 li
418.116 208.662 418.109 208.684 418.102 208.707 cv
418.072 208.701 418.045 208.698 418.021 208.698 cv
417.878 208.698 417.849 208.797 417.82 208.89 cv
417.5 208.75 li
417.78 209.031 417.74 209.15 417.68 209.27 cv
417.5 209.5 li
417.539 209.467 417.56 209.454 417.568 209.454 cv
417.588 209.454 417.539 209.527 417.49 209.589 cv
417.5 209.5 li
417.5 209.5 li
417.2 209.95 417.11 210.03 417.03 210.09 cv
416.75 210.25 li
416.816 210.219 416.848 210.207 416.858 210.207 cv
416.876 210.207 416.818 210.248 416.759 210.281 cv
416.75 210.25 li
416.75 210.25 li
416.392 210.468 416.207 210.556 416.059 210.608 cv
415.539 210.765 415.114 210.779 415.041 210.781 cv
415.034 210.78 415.03 210.78 415.03 210.78 cv
415.031 210.781 li
415.03 210.781 415.03 210.781 415.03 210.781 cv
415.25 211 li
395.75 211 mo
395.75 211 li
395.75 211 395.75 211 395.75 211 cv
395.75 211 395.75 211 395.75 211 cv
395.75 211 li
393.448 166.777 mo
393.421 166.777 393.398 166.75 393.381 166.703 cv
393.5 166.75 li
393.481 166.768 393.464 166.777 393.448 166.777 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[27.662 0 0 -49.1688 392.42 134.273 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;o:TdK&n>m=3(Tm=4^-dfAcb`;fmfmXN1Um=43ti;ik,n;,$`rdXTsr.r;lrdXEnf)Y7>rdXEn`;ome
n;-i>c2dinreU0-aT28>rdXp'o8pokrdXp'o8r5;g]7>'reU0-`;omereUT9s-`VL`;omereUT9opOS8
l2^g5reUT9opNc!rdXp's,coAr;aq>rdXp's,coAc2dV>rdXp's,d5Jpn>Y,rdXp's,d5Jpn@-Vf)Yf"
reUT9rgEPT`;omes+g`4OHBI0pn>Y,rdXp's,d5Jpn?XHjT,:0reUT9rgEe[qPqL7rdXp's,d5Js.T=i
!34!<rdXp's,d5Js.T:hdfAt>rdXp's,d5Js.T:h`;omereUT9rgEe[qPs/fdK'8rreUT9rgEe[ri5q&
`;omereUT9rgEe[ri5q&`;omereUT9rgEe[ri5q&joF<>rdXp's,d5Js.TFlrNaBBrdXp's,d5J!hl<f
s/Q+)s1?5MrdXp's,d5Js.TFls0D[:J,~>

%%EndBinary
grestore
np
414.5 210.25 mo
396.5 210.25 li
396.63 210.191 393.88 210.191 393.88 207.451 cv
394.25 207.25 li
394.25 167.5 li
394.243 167.501 394.237 167.502 394.23 167.502 cv
393.95 167.502 393.925 165.79 395.328 165.117 cv
396.314 166.945 397.408 168.746 398.585 170.509 cv
395 170.509 li
394.682 171.061 li
394.656 171.036 li
394.339 171.353 li
394.305 171.602 li
394.259 171.95 li
394.259 202.75 li
394.724 202.982 li
394.704 203.053 li
394.514 203.242 li
394.62 203.349 li
394.611 203.38 li
394.791 203.491 li
395 203.228 li
395 203.491 li
415.259 203.491 li
415.259 203.819 li
416.26 203.443 li
416.34 203.413 li
416.276 203.242 li
416.466 203.383 li
416.606 203.242 li
416.585 203.209 li
416.592 203.213 li
417.242 202.01 li
417.242 202.009 li
416.741 202.009 li
416.741 190.944 li
416.995 191.174 417.248 191.402 417.5 191.628 cv
417.5 207.25 li
417.24 210.191 414.49 210.191 414.49 210.191 cv
414.5 210.25 li
405.5 209.5 mo
405.5 209.5 li
406.211 209.37 406.804 209.098 407.243 208.727 cv
407.292 208.687 407.339 208.645 407.382 208.601 cv
407.837 208.159 408.09 207.599 408.09 206.981 cv
408.09 206.98 li
408.09 206.832 408.073 206.689 407.939 206.589 cv
407.966 206.527 407.99 206.465 408.01 206.4 cv
407.808 206.478 li
407.715 205.417 406.862 204.75 405.85 204.75 cv
405.5 205.001 li
405.408 204.974 405.315 204.962 405.221 204.962 cv
404.531 204.962 403.84 205.645 403.663 206.54 cv
403.617 206.696 403.532 206.893 403.25 207.25 cv
403.25 207.251 li
403.435 207.73 403.778 208.22 404.228 208.59 cv
404.588 209.032 405.059 209.355 405.5 209.5 cv
407.812 206.825 mo
407.819 206.721 407.818 206.619 407.812 206.521 cv
407.863 206.54 407.905 206.563 407.939 206.589 cv
407.903 206.67 407.861 206.749 407.812 206.825 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[26.2789 0 0 -47.803 392.42 134.273 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 35 
/M[19 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mL&@emJu\CmL&@eoDnagmdBKMmK`.[mdBKMq?QZumJu\CmL&@emJu\C!"/`5nHnUgmK!7SnaHGanHnUg
o)S[grpK=FrX/0%mK`.[rpK=FrX/0%q$6TumK!7SnaHGanHnUgmK!7SnaHJb!"/6&qZl`tmK!7SrpTLK
rX/0%qZl`tnc8UgrpKdSo^MhenHo'toEO^`rpKdSo^MhenHo'trW`*$mK!7SrpTLKrX/Q0p'CO#oEO^`
rpKdSs7#aPrX/Q0p'CO#oEO^`rpKdSs7#aPrX/Q0p'CO#oEOgcrW)rcrpTmVp@8+hr!E'&qZl`tmK!7S
rpTmVp@8+hr!E'&qZm'(p]g-drpKdSs7#aPrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX&W3r<`H/o*>0t
q$$0drpKdSs7$$Xq=FRmr!E?.o*>0tq$$6frrE&drpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgU
rX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpg$[qt0jprsAZ2rWr*#r!)s#
mK!7SrpTmVrpg$[qt0jpr!E?.o*>0tq$$3e!!*#drpTmVrpg$[qt0jpr!E?.o*>0tq$$0drpKdSs7$$X
s7?-[rX/Q0rWr*#r!!-)q??9erpKdSs7$$Xs7?-[rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^
rq66trX&T2rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!33*qZm$'r!!'&mK!7SrpTmV
rpg$[rq-3_rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!*9-"pOl/r!*0)rWW9(
mK!7SrpTmVrpg$[rq$9bp%J@lr!E?.r!*9-"pOl/r!*'&rWMWhrpKdSs7$$Xs7?6^!ql6[J,~>

%%EndBinary
grestore
np
405.5 209.5 mo
405.5 209.5 li
405.5 209.5 405.5 209.5 405.5 209.5 cv
405.849 209.21 li
406.39 209.21 406.884 209.021 407.243 208.727 cv
406.804 209.098 406.211 209.37 405.5 209.5 cv
407.382 208.601 mo
407.752 208.229 407.922 207.735 407.75 207.25 cv
408.09 206.981 li
408.09 207.599 407.837 208.159 407.382 208.601 cv
404.228 208.59 mo
403.778 208.22 403.435 207.73 403.25 207.251 cv
403.25 207.25 li
403.25 207.25 403.25 207.25 403.25 207.25 cv
403.62 206.98 li
403.62 207.594 403.869 208.151 404.228 208.59 cv
405.998 207.31 mo
405.719 207.31 li
405.647 207.259 li
405.582 207.189 li
406.126 207.189 li
406.043 207.272 li
405.998 207.31 li
405.439 207.287 mo
405.439 207.189 li
405.5 207.189 li
405.545 207.189 li
405.439 207.287 li
405.565 207.17 mo
405.565 207.17 li
405.565 207.17 li
405.565 207.17 li
407.689 206.996 mo
407.689 206.078 li
407.314 205.886 li
407.061 205.757 li
406.795 205.49 li
406.181 205.49 li
405.974 205.745 li
405.921 205.81 li
405.792 205.81 li
405.483 205.49 li
404.89 205.49 li
404.685 205.71 li
404.625 205.775 li
404.061 206.101 li
404.061 206.887 li
404.013 206.764 403.991 206.634 404 206.5 cv
403.7 206.4 li
403.688 206.445 403.677 206.491 403.663 206.54 cv
403.84 205.645 404.531 204.962 405.221 204.962 cv
405.315 204.962 405.408 204.974 405.5 205.001 cv
405.85 204.75 li
406.862 204.75 407.715 205.417 407.808 206.478 cv
407.75 206.5 li
407.772 206.507 407.793 206.513 407.812 206.521 cv
407.818 206.619 407.819 206.721 407.812 206.825 cv
407.775 206.884 407.734 206.941 407.689 206.996 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -8.1948 402.102 94.6645 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 6 
/M[5 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!Wi~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYC~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.5 209.5 mo
405.059 209.355 404.588 209.032 404.228 208.59 cv
404.678 208.96 405.235 209.21 405.85 209.21 cv
405.5 209.5 li
407.243 208.727 mo
407.291 208.686 407.338 208.644 407.382 208.601 cv
407.339 208.645 407.292 208.687 407.243 208.727 cv
407.75 207.251 mo
407.783 207.104 407.803 206.962 407.812 206.825 cv
407.861 206.749 407.903 206.67 407.939 206.589 cv
408.073 206.689 408.09 206.832 408.09 206.98 cv
408.09 206.981 li
408.09 206.981 408.09 206.981 408.09 206.98 cv
407.75 207.251 li
403.25 207.25 mo
403.532 206.893 403.617 206.696 403.663 206.54 cv
403.635 206.682 403.62 206.829 403.62 206.98 cv
403.25 207.25 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -6.829 402.102 93.2987 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 5 
/M[5 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!r~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_Z~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.5 209.5 mo
405.5 209.5 405.5 209.5 405.5 209.5 cv
405.85 209.21 li
405.235 209.21 404.678 208.96 404.228 208.59 cv
403.869 208.151 403.62 207.594 403.62 206.98 cv
403.25 207.25 li
403.25 207.25 403.25 207.25 403.25 207.25 cv
403.62 206.98 li
403.62 206.829 403.635 206.682 403.663 206.54 cv
403.677 206.491 403.688 206.445 403.7 206.4 cv
404 206.5 li
403.991 206.634 404.013 206.764 404.061 206.887 cv
404.061 208 li
404.672 208 li
404.554 208.109 li
404.734 208.302 li
404.792 208.343 li
405.28 208.689 li
405.5 208.689 li
406.501 208.689 li
406.694 208.527 li
406.976 208.289 li
406.977 208.288 li
407.689 208 li
407.689 206.996 li
407.734 206.941 407.775 206.884 407.812 206.825 cv
407.803 206.962 407.783 207.104 407.75 207.251 cv
408.09 206.98 li
408.09 206.981 408.09 206.981 408.09 206.981 cv
407.75 207.25 li
407.922 207.735 407.752 208.229 407.382 208.601 cv
407.338 208.644 407.291 208.686 407.243 208.727 cv
406.884 209.021 406.39 209.21 405.849 209.21 cv
405.5 209.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -6.829 402.102 93.2987 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 5 
/M[5 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`W~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
407.939 206.589 mo
407.905 206.563 407.863 206.54 407.812 206.521 cv
407.811 206.506 407.81 206.492 407.808 206.478 cv
408.01 206.4 li
407.99 206.465 407.966 206.527 407.939 206.589 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 406.251 94.6645 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!r~>
<~!WiE)!WiE)!W~>
<~!!!!!!!!!!!!~>
<~_o'C0_o'O8`r~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
407.812 206.521 mo
407.793 206.513 407.772 206.507 407.75 206.5 cv
407.808 206.478 li
407.81 206.492 407.811 206.506 407.812 206.521 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 406.251 94.6645 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<~>
<~!<E3%!<E3%!<~>
<~!!!!!!!!!!!!~>
<~`l?$<`l?0Dao~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
405.5 208 mo
405.849 207.839 li
405.009 207.839 404.275 207.434 404.061 206.887 cv
404.061 206.101 li
404.625 205.775 li
404.685 205.71 li
404.89 205.49 li
405.483 205.49 li
405.792 205.81 li
405.921 205.81 li
405.974 205.745 li
406.181 205.49 li
406.795 205.49 li
407.061 205.757 li
407.314 205.886 li
407.689 206.078 li
407.689 206.996 li
407.269 207.516 406.53 207.881 405.5 208 cv
405.582 207.189 mo
405.647 207.259 li
405.719 207.31 li
405.998 207.31 li
406.043 207.272 li
406.126 207.189 li
405.582 207.189 li
405.439 207.189 mo
405.439 207.287 li
405.545 207.189 li
405.5 207.189 li
405.439 207.189 li
405.565 207.17 mo
405.565 207.17 li
405.565 207.17 li
405.565 207.17 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -4.0974 402.102 93.2987 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3~>
<~!<E3%!<E3%!<E3%!<E3~>
<~!!!!!!!!!!!!!!!!!!!~>
<~91qoN91qoN91qoN91qn~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
406.501 208.689 mo
405.5 208.689 li
405.28 208.689 li
404.792 208.343 li
404.734 208.302 li
404.554 208.109 li
404.672 208 li
404.061 208 li
404.061 206.887 li
404.275 207.434 405.009 207.839 405.849 207.839 cv
405.5 208 li
406.53 207.881 407.269 207.516 407.689 206.996 cv
407.689 208 li
406.977 208.288 li
406.976 208.289 li
406.694 208.527 li
406.501 208.689 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[6.9155 0 0 -4.0974 402.102 91.9329 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~4?P_g4?P_g4?P_g4?P_~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
415.259 202.009 mo
395.741 202.009 li
395.741 172.049 li
395.741 172.046 li
395.797 171.991 li
399.598 171.991 li
404.204 178.56 409.88 184.57 415.259 189.581 cv
415.259 202.009 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[23.5127 0 0 -32.7792 393.803 127.444 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 24 
/M[17 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2"U,&5"9\i1
"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2"U,&5
"9\i1"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\i1"9\i2
"U,&5"9\i1"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"9er4"U,#3"9\i1"9\i1"9\l3"U,&4"9\i1"9\f/
!s8W/"U,&5"9\i1"9\i0!s8W-"U,&5"U"r2"9\i1!s8W-!sJi3"U,#3"9\i1"9S`.!s8]1"U,&4"9\i1
"9\f/!s8W/"U,&5"9\i1"9\i0!s8W-~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W."9\i1!s8W-
!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W."9\i1
!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-!s8W.
"9\i1!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-!s8W-
!s8W."9\i1!s8W-!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-!sA`0"9\f/!s8W-!s8W-!s8Z/"9\i0!s8W-
!s8W-!s8W."9\i1!s8W-!s8W-!s8T+~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~d*U7je'ldpe'ldpe'ldpe'QIje'ldpe'ldpe'ldpe'l[je'ldpe'ldpe'ldpe'ldmd*pIme'ldpe'ldp
e'ldpd*U7je(3+$f%/F'f%/F'f$Mdme'ln!f%/F'f%/F'f%/3pe'ldsf%/F'f%/F'f%/F!d*pImf%/F'
f%/F'f%/F'd*U7je(3+'g"G'3g"G'3g!J*pe'ln!g"G'3g"G'3g"Fa!e'ldsf%Ja0g"G'3g"G'*d*pIm
f%/O-g"G'3g"G'3d*U7je(3+'g"G'3g"G'3g!J*pe'ln!g"G'7h;-oCh;-H)e'ldsf%Ja0h;-oCh;-o6
d*pImf%/O-g"kK?h;-oCd*U7je(3+'g"G3;h;-oCh9aNte'ln!g"G'7h;-oCh;-H)e'ldsf%Ja0h;.#I
i8EP?d*pImf%/O-g"kKBi8EPOd*U7je(3+'g"G3;i8EPOi6]j"e'ln!g"G'7h;I5Li8Du/e'ldsf%Ja0
h;.#Ii8EP?d*pImf%/O-g"kKBi8EYU~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
415.259 203.819 mo
415.259 203.491 li
395 203.491 li
395 203.228 li
394.791 203.491 li
394.611 203.38 li
394.62 203.349 li
394.514 203.242 li
394.704 203.053 li
394.724 202.982 li
394.259 202.75 li
394.259 171.95 li
394.305 171.602 li
394.339 171.353 li
394.656 171.036 li
394.682 171.061 li
395 170.509 li
398.585 170.509 li
398.75 170.757 398.917 171.003 399.085 171.25 cv
395 171.25 li
395.18 171.56 li
395.04 171.7 li
395 172 li
395 202.75 li
395.18 202.861 li
395.07 202.75 li
416 202.75 li
415.94 202.861 li
416.08 202.72 li
416 202.75 li
416 190.267 li
416.248 190.495 416.495 190.72 416.741 190.944 cv
416.741 202.009 li
417.242 202.009 li
417.242 202.01 li
416.592 203.213 li
416.585 203.209 li
416.606 203.242 li
416.466 203.383 li
416.276 203.242 li
416.34 203.413 li
416.26 203.443 li
415.259 203.819 li
395.485 203.312 mo
395.485 203.312 li
395.217 202.955 mo
395.485 203.312 li
395.217 202.955 li
395.07 202.75 mo
395 202.75 li
395.04 202.72 li
395.07 202.75 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[26.2789 0 0 -35.5108 392.42 128.81 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 26 
/M[19 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U"r2"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1
"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\i2"U,&5"U"r2"9\i1"9\i1"9\l3
"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\i2"U,&5"U"r2
"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1
"9\i2"U,&5"U"r2"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\f/!s8W-"U,&5
"U,#3"9\i1"9S`.!s8W/"U,&5"U"r2"9\i1!s8W-!s8]1"U,&5"9\i1"9\i0!s8W-!sJi3"U,&4"9\i1
"9\f/!s8W-"U,&5"U,#3"9\i1"9S`.!s8W/"U,&5"U"r2"9\i1!s8W-!s8~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-
!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/
"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8W."9\i1"9S`.
!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-
!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1
"9\f/!s8W-!s8W-!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-
!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!WiE+"9\i1"9S`.!s8W-!s8W,!Wi~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~p@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FVp\4FVp\4FVp\4CTp@n=Up\4FVp\4FVp\4FVp\+=Sp\4FV
p\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FVp\4FVp\4FVp\4CTp@n=Up\4FVp\4FV
p\4FVp\+=Sp\4FVp\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FWq"XXZq"XXZq"XRV
p@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"XXZq"XXZp@e4Sp\4FVq"XXZq"XXZq"XXXp@e7Tp\4FW
q"XXZq"XXZq"XRVp@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"XXZq"XXZp@e4Sp\4FVq"XXZq"XXZ
q"XXXp@e7Tp\4FWq"XXZq"XXZq"XRVp@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"X[\q>'j^p@e4S
p\4FVq"XXZq"aa]q>'j[p@e7Tp\4FWq"XXZq>'j^q>'aXp@n=Up\4IXq"XX[q>'j^q=aOUp\4FVp\=OY
q"X[\q>'j^p@e4Sp\4FVq"XXZq"aa]qYL'^p@e7Tp\4FWq"XXZq>'j_qYC~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
415.94 202.861 mo
416 202.75 li
395.07 202.75 li
395.04 202.72 li
395 202.75 li
395 172 li
395.04 171.7 li
395.18 171.56 li
395 171.25 li
399.085 171.25 li
399.255 171.497 399.426 171.745 399.598 171.991 cv
395.797 171.991 li
395.741 172.046 li
395.741 172.049 li
395.741 202.009 li
415.259 202.009 li
415.259 189.581 li
415.506 189.811 415.754 190.04 416 190.267 cv
416 202.75 li
416.08 202.72 li
415.94 202.861 li
395.18 202.861 mo
395 202.75 li
395.07 202.75 li
395.18 202.861 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[23.5127 0 0 -34.145 393.803 127.444 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*!s8W-
!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*
!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)
!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*
!WiE)!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!W~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3&
!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)!<E3%
!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)
!<E3%!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~kND*ol07Hsl07Hsl07Hsl0%6ol07Hsl07Hsl07Hsl07Bol07Hsl07Hsl07Hsl07HqkNV6ql07Hsl07Hs
l07HskND*ol07Hsl07Hsl07Hsl0%6ol07KulK[["lK[["lK[Qql07HtlK[["lK[["lK[ZtkNV6qlK[["
lK[["lK[["kND*ol0@R!lK[["lK[["lK@?pl07Kum-O**m-O**m-Noul07HtlKmm(m-O**m-O*%kNV6q
lK[a&m-O**m-O**kND*ol0@R#m-O**m-O**m-!Qrl07Kum-O**m-O**m-Noul07HtlKmm(mHs<.mHs<(
kNV6qlK[a&m-X3-mHs<.kND*ol0@R#m-O-,mHs<.mH<Zsl07Kum-O*+mHs<.mHs*"l07HtlKmm(mHs<.
mHs<(kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`6n)rlul07Kum-O*+mI0N4n*fH&l07HtlKmm(
mHsB2n*f`.kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`8nG~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
416.49 210.43 mo
416.75 210.25 li
416.49 210.43 li
417.27 209.87 mo
417.5 209.5 li
417.43 209.69 417.35 209.78 417.27 209.87 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 414.55 90.5671 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~It)rtIt)rtIf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
394.868 164.504 mo
394.791 164.504 394.82 164.495 394.85 164.48 cv
395 164.5 li
394.938 164.503 394.896 164.504 394.868 164.504 cv
395 164.5 mo
395 164.5 li
395 164.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[4.1493 0 0 -4.0974 393.803 135.639 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~It*9(Iu&T(L]~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
395 202.75 mo
416 202.75 li
416 172 li
395 172 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
273.1 104.57 mo
269.531 107.58 269.42 112.57 272.871 115.7 cv
274.1 116.82 275.691 117.6 277.441 117.93 cv
277.29 123.23 282.08 127.64 288.14 127.77 cv
290.321 127.82 292.46 127.3 294.3 126.28 cv
296.93 131.13 303.55 133.21 309.1 130.91 cv
311.09 130.08 312.76 128.76 313.89 127.1 cv
319.96 130.64 328.161 129.2 332.201 123.87 cv
333.651 121.96 334.42 119.72 334.411 117.42 cv
339.911 116.33 343.35 111.54 342.1 106.73 cv
341.651 105 340.621 103.43 339.151 102.21 cv
341.71 99.0598 340.861 94.6798 337.25 92.4398 cv
335.96 91.6398 334.42 91.1898 332.83 91.1498 cv
330.651 84.8098 323.02 81.2198 315.781 83.1298 cv
313.18 83.8198 310.871 85.1598 309.151 86.9998 cv
305.22 81.4798 296.93 79.7898 290.621 83.2198 cv
288.361 84.4598 286.56 86.2498 285.46 88.3798 cv
278.54 87.7798 272.371 92.1998 271.67 98.2698 cv
271.42 100.44 271.92 102.64 273.1 104.57 cv
1 /3 /CSD get_res sepcs
0 sep
ef
1 lw
2 ml
273.1 104.57 mo
269.531 107.58 269.42 112.57 272.871 115.7 cv
274.1 116.82 275.691 117.6 277.441 117.93 cv
277.29 123.23 282.08 127.64 288.14 127.77 cv
290.321 127.82 292.46 127.3 294.3 126.28 cv
296.93 131.13 303.55 133.21 309.1 130.91 cv
311.09 130.08 312.76 128.76 313.89 127.1 cv
319.96 130.64 328.161 129.2 332.201 123.87 cv
333.651 121.96 334.42 119.72 334.411 117.42 cv
339.911 116.33 343.35 111.54 342.1 106.73 cv
341.651 105 340.621 103.43 339.151 102.21 cv
341.71 99.0598 340.861 94.6798 337.25 92.4398 cv
335.96 91.6398 334.42 91.1898 332.83 91.1498 cv
330.651 84.8098 323.02 81.2198 315.781 83.1298 cv
313.18 83.8198 310.871 85.1598 309.151 86.9998 cv
305.22 81.4798 296.93 79.7898 290.621 83.2198 cv
288.361 84.4598 286.56 86.2498 285.46 88.3798 cv
278.54 87.7798 272.371 92.1998 271.67 98.2698 cv
271.42 100.44 271.92 102.64 273.1 104.57 cv
cp
1 /3 /CSD get_res sepcs
.502 sep
@
1 /3 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+CALIBRI,Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 79 /O put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/O <1C60D8A8C9B624F9257693AA05F54B3F6F5707D5ED56A2F403B01AB2B44B
FA61536ECB93C3E443D431CDA75F7C80E1651DDF58D3BF4622794EC6262BD68B
AD06E68E1E6A6884DEBA5A70BE002DB0A3D53BEB04D3F8C5368D696AC6C0C562
F74CC4E6C46ADC> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold /PBAAAA+CALIBRI,Bold findfont ct_VMDictPut
/JLMWZO+CALIBRI,Bold*1 
[79{/.notdef}rp /O 176{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
277.5 102.44 mo
(O)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875
E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A366
46DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0
318D13C761F9DF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[79{/.notdef}rp /O 30{/.notdef}rp /n 145{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
286.964 102.44 mo
(n)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AED
C4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C049
2C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E
8106797186054DABC39E6B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[79{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
294.482 102.44 mo
(e)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8391507657B8D1429650EAD682B1E1FA8FF445B393CF
432> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 
145{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
301.523 102.44 mo
(-)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 21{/.notdef}rp /e 
8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
305.807 102.44 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B683825E2D044740A889FBE934ECCE78E1156C56B6149D738C
A6C7B4AECC7FA154428E6DD464F11C7D97D1FA9A6F6B9A75D5C94F0DB87ED3BD
E4384A0C5BEF384B64AB6AB82F0CAD9F523DB7B169A9EFE68886BAAEBDCCF81A
77828FB78CC41F51C2F02BE854F0FC98D5C093F2F1B7BFBBE0B76D7E8A41F57E
61D5D8AA27543AC483B2961CB710> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
13{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
308.971 102.44 mo
(W)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A26
1528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4
E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF
06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D
7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D8839
3EC5B1BCAE7CEACDFA7D9A043D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
321.655 102.44 mo
(a)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD
89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65D
BD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58A
EC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC
68163F56BACA6337> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
328.571 102.44 mo
(y)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
335.207 102.44 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD8
33E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487
A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151
121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp 
/y 134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
280.972 119.24 mo
(N)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
290.198 119.24 mo
(e)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87
D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E64020888
37AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3
D16C57> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 5{/.notdef}rp 
/t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
297.24 119.24 mo
(t)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80
846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE
481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2B
AF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB
99E3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 5{/.notdef}rp 
/t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
302.098 119.24 mo
(w)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4
E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81
C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n /o 
4{/.notdef}rp /t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
312.527 119.24 mo
(o)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB
1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0
AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n /o 
2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w /.notdef /y 
134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
320.059 119.24 mo
(r)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1
E2F6A013F2F56A027205F5576546> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 32{/.notdef}rp /N /O 7{/.notdef}rp 
/W 9{/.notdef}rp /a 3{/.notdef}rp /e 5{/.notdef}rp /k 2{/.notdef}rp 
/n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 
/.notdef /y 134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
325.029 119.24 mo
(k)sh
.75 lw
389 106.75 mo
355.25 106.75 li
@
356 109.75 mo
346.25 106.75 li
356 103 li
cp
ef
125 94 mo
99.5 94 li
@
124.25 90.25 mo
134 94 li
124.25 97 li
cp
ef
100.25 97 mo
90.5 94 li
100.25 90.25 li
cp
ef
423.49 28.8901 mo
432.96 33.9101 439.55 51.0501 439.55 70.6401 cv
439.55 86.9401 432.98 101.2 423.54 105.42 cv
@
423.5 32.5 mo
418.25 27.25 li
425 25.75 li
cp
ef
425 108.25 mo
418.25 106.75 li
423.5 102.25 li
cp
ef
423.5 109.49 mo
432.96 114.35 439.55 130.91 439.55 149.84 cv
439.55 166.139 432.98 180.4 423.54 184.62 cv
@
423.5 112.75 mo
418.25 108.25 li
425 106.75 li
cp
ef
425 187.75 mo
418.25 185.5 li
423.5 181 li
cp
ef
99.5 115.75 mo
129.5 115.75 li
@
100.25 118.75 mo
90.5 115.75 li
100.25 112 li
cp
ef
%ADOBeginSubsetFont: HIBBAA+CALIBRI Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+CALIBRI def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 79 /O put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/O <1C60D8A8C9B624F9257693AA05F54B3F6F5707D5ED56A2F403B01AB2B44B
FA61536ECB93C3E443D431CDA75F7C80E1651DDF58D3BF4622794EC6262BD68B
AD06E68E1E6A6884DEBA5A70BE002DB0A3D53BEB04D3F8C5368D696AC6C0C562
F74CC4E6C46ADC> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/JLMWZP+CALIBRI /HIBBAA+CALIBRI findfont ct_VMDictPut
/JLMWZP+CALIBRI*1 
[79{/.notdef}rp /O 176{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
89.4702 129.36 mo
(O)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875
E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A366
46DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0
318D13C761F9DF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[79{/.notdef}rp /O 30{/.notdef}rp /n 145{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
97.4143 129.36 mo
(n)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AED
C4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C049
2C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E
8106797186054DABC39E6B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[79{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
103.714 129.36 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8391507657B8D1429650EAD682B1E1FA8FF445B393CF
432> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 
145{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
109.691 129.36 mo
(-)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B683825E2D044740A889FBE934ECCE78E1156C56B6149D738C
A6C7B4AECC7FA154428E6DD464F11C7D97D1FA9A6F6B9A75D5C94F0DB87ED3BD
E4384A0C5BEF384B64AB6AB82F0CAD9F523DB7B169A9EFE68886BAAEBDCCF81A
77828FB78CC41F51C2F02BE854F0FC98D5C093F2F1B7BFBBE0B76D7E8A41F57E
61D5D8AA27543AC483B2961CB710> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 13{/.notdef}rp /e 
8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
113.363 129.36 mo
(W)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A26
1528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4
E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF
06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D
7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D8839
3EC5B1BCAE7CEACDFA7D9A043D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 9{/.notdef}rp /a 
3{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
124.043 129.36 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD
89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65D
BD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58A
EC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC
68163F56BACA6337> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 9{/.notdef}rp /a 
3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
129.791 129.36 mo
(y)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
135.227 129.36 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B6D9EA19A14B847D0E8EB8BF4B471CD6F46D062EB4BE987671
1DE846CB52CA29717591BA788944E909A85262E823C4FA12BA37712263FC72E9
89A6DED74E14903D34D6198FBDC555D5CFE2C4496EBCDE1C8C3752795BF188E4
FAAED3EDACC0501E6038041D4A8B4E60EE57E2BABA6257E8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 
10{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
82.3661 143.76 mo
(M)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4
E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81
C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 
/o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
92.6262 143.76 mo
(o)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6
E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94
C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5
809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C
58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F8
8F3E7B91EC8C23BC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 8{/.notdef}rp 
/n /o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
98.9503 143.76 mo
(b)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5
A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E
21C6C79BBDA40B7772F2DEC85ADAD3476B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp 
/i 4{/.notdef}rp /n /o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
105.25 143.76 mo
(i)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /.notdef /n /o 9{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
107.998 143.76 mo
(l)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
110.747 143.76 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
116.723 143.76 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B64FADC8BE4593403BE5D574FAA91D24903C73A9847FBCFF2C
CAE7B82F347344B6D75D9DA8CFD564A5192C31CC0F81E85BFE65DA0E98609881
F08E27947C3AA06FD0D02C1BFBD8926D8C270B5E2950C4A34E562381A9DCE503
FFFA3F4060AB2DBCCA9D5531B6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 68 /D put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 22{/.notdef}rp /D 8{/.notdef}rp /M 
/.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
119.435 143.76 mo
(D)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
126.815 143.76 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87
D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E64020888
37AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3
D16C57> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 22{/.notdef}rp /D 8{/.notdef}rp /M 
/.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
132.563 143.76 mo
(t)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
136.583 143.76 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C0603B0F56
B2079EC8B4534AB9C74A497574D9EF71E8F51BC97EB8824D6E23EF8EFAA3DEBE
8D568C2956BA1E496299B0678E1779132A604465EA4ECC38726918FAF069884E
38826C83426FA3C94ADFC9002199C86D8D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
96.7423 73.043 mo
(C)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
103.138 73.043 mo
(o)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
109.463 73.043 mo
(n)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
115.763 73.043 mo
(t)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB
1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0
AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
119.783 73.043 mo
(r)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
123.971 73.043 mo
(o)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
130.295 73.043 mo
(l)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
133.043 73.043 mo
( )sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
91.0422 87.4432 mo
(M)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
101.302 87.4432 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5
A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F
24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0
AEBA9DE73147EEE82D829B87C7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
107.278 87.4432 mo
(s)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
111.971 87.4432 mo
(s)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
116.663 87.4432 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F43B727FC67DAAB0A1AC3463640
03E4FEF79FBAC399EF60BAB44182D20FA0C6402BF1E27F05398DCDDDA14D79F5
733F11E560A813FF9D16C42617DFDA23021803BAB86086244EE74B29A5E1F99E
79BC6C6C8880FE4C572C55E990D88B7521BD46854B97930948AAC94E7DFE2FF6
9F2221950186414A7427A5E80E1B04B219E3300404246D87351FD05C6F3EA0B9
5C636083B47E4D5C2DAA8BBB8D343439CEC8A6CCD7C3BA57C2332F2A02343DC5
6BF6AA691E1A081F9D254D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
2{/.notdef}rp /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp 
/y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
122.411 87.4432 mo
(g)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
128.063 87.4432 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
134.039 87.4432 mo
(s)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
234.733 39.8864 mo
(C)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
241.129 39.8864 mo
(o)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
247.453 39.8864 mo
(n)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
253.753 39.8864 mo
(t)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
257.773 39.8864 mo
(r)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
261.961 39.8864 mo
(o)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
268.285 39.8864 mo
(l)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
271.045 39.8864 mo
( )sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
273.757 39.8864 mo
(M)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
284.017 39.8864 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
289.994 39.8864 mo
(s)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
294.686 39.8864 mo
(s)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
299.378 39.8864 mo
(a)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
305.126 39.8864 mo
(g)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
310.778 39.8864 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
316.754 39.8864 mo
(s)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 64.0107 mo
(C)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 70.4068 mo
(o)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 76.7309 mo
(n)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 83.031 mo
(t)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 87.0511 mo
(r)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 91.2392 mo
(o)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 97.5633 mo
(l)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 100.311 mo
( )sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 103.023 mo
(M)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 113.284 mo
(e)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 119.26 mo
(s)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 123.952 mo
(s)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 128.644 mo
(a)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 134.392 mo
(g)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 140.044 mo
(e)sh
JLMWZP+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
453.15 146.02 mo
(s)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
341.63 123.66 mo
(O)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
349.574 123.66 mo
(n)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
355.874 123.66 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
361.85 123.66 mo
(-)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
365.522 123.66 mo
(W)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
376.202 123.66 mo
(a)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
381.951 123.66 mo
(y)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
387.387 123.66 mo
( )sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
334.526 138.06 mo
(M)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
344.786 138.06 mo
(o)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
351.11 138.06 mo
(b)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
357.41 138.06 mo
(i)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
360.158 138.06 mo
(l)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
362.906 138.06 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
368.882 138.06 mo
( )sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
371.594 138.06 mo
(D)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
378.975 138.06 mo
(a)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
384.723 138.06 mo
(t)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
388.743 138.06 mo
(a)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
2.9843 157.837 mo
(D)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
10.3644 157.837 mo
(a)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
16.1125 157.837 mo
(t)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
20.1326 157.837 mo
(a)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
25.8807 157.837 mo
( )sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
28.5927 157.837 mo
(C)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
34.9888 157.837 mo
(o)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
41.3129 157.837 mo
(l)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
44.061 157.837 mo
(l)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
46.821 157.837 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A
114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624
097F1B5D47BF4F384727F53BA1763156DBDB0266> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
52.7971 157.837 mo
(c)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
57.8732 157.837 mo
(t)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
61.8933 157.837 mo
(i)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
64.6413 157.837 mo
(o)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
70.9654 157.837 mo
(n)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
77.2655 157.837 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC9666D445523C20D6BC6D
45C854A0BE693CA04DDB35CE9C6FCC12699F3ECF3D1B67F9F5777A6EECDAF3C0
F3F32C0B6BC38F752623DB2A9617BDB514ED25F1A310A0C42BE659A27D8F2C06
C4BFA42A6084F73A353D30020A89B386DABBAAA17119B17F011D1BF8067CBFE1
7C2D6AE10C51C95BF00F09A50ED067AF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 83 /S put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 3{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp 
/a /b /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
24.5007 172.237 mo
(S)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
30.0207 172.237 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
35.9968 172.237 mo
(r)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78
CD729866CE567C88B5C4105F11006EA75E6774682E91A2E1F257423C8BD0B940
F1B9F1BCB8B413DFC78AF75D4027> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 3{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp 
/a /b /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
40.1849 172.237 mo
(v)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
45.609 172.237 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
51.5851 172.237 mo
(r)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
368.39 228.242 mo
(M)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
378.651 228.242 mo
(o)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
384.975 228.242 mo
(b)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
391.275 228.242 mo
(i)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
394.023 228.242 mo
(l)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
396.771 228.242 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
402.747 228.242 mo
( )sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
405.459 228.242 mo
(D)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
412.839 228.242 mo
(e)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
418.815 228.242 mo
(v)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
424.239 228.242 mo
(i)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
426.987 228.242 mo
(c)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
432.063 228.242 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
438.04 228.242 mo
(s)sh
50.75 222.25 mo
187.25 222.25 li
187.25 193 li
50.75 193 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
.24 lw
50.75 222.25 mo
187.25 222.25 li
187.25 193 li
50.75 193 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB5
3E56E1831B0550D2FE4055F5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 3{/.notdef}rp /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
74.4048 211.67 mo
(T)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
81.2227 211.67 mo
(r)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
86.1086 211.67 mo
(a)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
92.8144 211.67 mo
(n)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
100.164 211.67 mo
(s)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CE
F7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE
826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB
2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D
66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFB
BE8C69D79181> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 8{/.notdef}rp 
/M /.notdef /O 3{/.notdef}rp /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /s /t /.notdef /v 2{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
105.638 211.67 mo
(p)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
112.988 211.67 mo
(o)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
120.366 211.67 mo
(r)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
125.252 211.67 mo
(t)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
129.942 211.67 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B74383E5F6C6CDF9C5C9B986319F48E0C8F60D9DD3B951CB8A
90C91D93DE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 76 /L put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 7{/.notdef}rp 
/L /M /.notdef /O 3{/.notdef}rp /S /T 2{/.notdef}rp 
/W 9{/.notdef}rp /a /b /c /.notdef /e /.notdef 
/g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 
/p /.notdef /r /s /t /.notdef /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
133.106 211.67 mo
(L)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
138.985 211.67 mo
(a)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
145.691 211.67 mo
(y)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
152.033 211.67 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
159.005 211.67 mo
(r)sh
50.75 257.5 mo
115.25 257.5 li
115.25 229 li
50.75 229 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
50.75 257.5 mo
115.25 257.5 li
115.25 229 li
50.75 229 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B87DE005AD6F3C5D74814B2BFE06F81F462471EDB11E0EC39F
39EA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S 
/T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /.notdef 
/e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef 
/n /o /p /.notdef /r /s /t /.notdef 
/v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
77.77 247.654 mo
(I)sh
1 /3 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED1
9B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30
A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43
C2B5E88E6AFB64C1CBC51F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 80 /P put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp 
/S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/.notdef /n /o /p /.notdef /r /s /t 
/.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
81.2979 247.654 mo
(P)sh
50.75 293.5 mo
187.25 293.5 li
187.25 265 li
50.75 265 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
50.75 293.5 mo
187.25 293.5 li
187.25 265 li
50.75 265 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
90.77 283.635 mo
(L)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
96.6499 283.635 mo
(i)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
99.8698 283.635 mo
(n)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1
E2F6A013F2F56A027205F5576546> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp 
/S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/.notdef /e /.notdef /g /.notdef /i /.notdef /k 
/l /.notdef /n /o /p /.notdef /r /s 
/t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
107.22 283.635 mo
(k)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
113.59 283.635 mo
( )sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
116.753 283.635 mo
(L)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
122.633 283.635 mo
(a)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
129.339 283.635 mo
(y)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
135.681 283.635 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
142.653 283.635 mo
(r)sh
122.75 257.5 mo
187.25 257.5 li
187.25 229 li
122.75 229 li
cp
.00881971 0 .157382 0 cmyk
ef
122.75 257.5 mo
187.25 257.5 li
187.25 229 li
122.75 229 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
128.46 247.654 mo
(O)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
137.728 247.654 mo
(n)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
145.078 247.654 mo
(e)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
152.049 247.654 mo
(-)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
156.333 247.654 mo
(W)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
168.793 247.654 mo
(a)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
175.499 247.654 mo
(y)sh
136.69 106.17 mo
133.13 109.18 133.03 114.17 136.45 117.3 cv
137.68 118.42 139.26 119.2 141 119.53 cv
140.85 124.83 145.62 129.24 151.64 129.37 cv
153.81 129.42 155.94 128.9 157.77 127.88 cv
160.38 132.73 166.97 134.81 172.48 132.51 cv
174.46 131.68 176.12 130.36 177.24 128.7 cv
183.28 132.24 191.44 130.8 195.46 125.47 cv
196.9 123.56 197.67 121.32 197.66 119.02 cv
203.12 117.93 206.54 113.14 205.3 108.33 cv
204.85 106.6 203.83 105.03 202.37 103.81 cv
204.91 100.66 204.07 96.2799 200.48 94.0399 cv
199.19 93.2399 197.66 92.7899 196.09 92.7499 cv
193.92 86.4099 186.33 82.8199 179.13 84.7299 cv
176.54 85.4199 174.25 86.7599 172.53 88.5999 cv
168.63 83.0799 160.38 81.3899 154.11 84.8199 cv
151.86 86.0599 150.07 87.8499 148.98 89.9799 cv
142.09 89.3799 135.95 93.7999 135.27 99.8699 cv
135.02 102.04 135.51 104.24 136.69 106.17 cv
1 /3 /CSD get_res sepcs
0 sep
ef
1 lw
136.69 106.17 mo
133.13 109.18 133.03 114.17 136.45 117.3 cv
137.68 118.42 139.26 119.2 141 119.53 cv
140.85 124.83 145.62 129.24 151.64 129.37 cv
153.81 129.42 155.94 128.9 157.77 127.88 cv
160.38 132.73 166.97 134.81 172.48 132.51 cv
174.46 131.68 176.12 130.36 177.24 128.7 cv
183.28 132.24 191.44 130.8 195.46 125.47 cv
196.9 123.56 197.67 121.32 197.66 119.02 cv
203.12 117.93 206.54 113.14 205.3 108.33 cv
204.85 106.6 203.83 105.03 202.37 103.81 cv
204.91 100.66 204.07 96.2799 200.48 94.0399 cv
199.19 93.2399 197.66 92.7899 196.09 92.7499 cv
193.92 86.4099 186.33 82.8199 179.13 84.7299 cv
176.54 85.4199 174.25 86.7599 172.53 88.5999 cv
168.63 83.0799 160.38 81.3899 154.11 84.8199 cv
151.86 86.0599 150.07 87.8499 148.98 89.9799 cv
142.09 89.3799 135.95 93.7999 135.27 99.8699 cv
135.02 102.04 135.51 104.24 136.69 106.17 cv
cp
1 /3 /CSD get_res sepcs
.502 sep
@
1 /3 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B87DE005AD6F3C5D74814B2BFE06F81F462471EDB11E0EC39F
39EA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 27{/.notdef}rp /I 4{/.notdef}rp /N 
/O 7{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e 5{/.notdef}rp 
/k 2{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef /t 
2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
137.19 112.44 mo
(I)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED1
9B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30
A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43
C2B5E88E6AFB64C1CBC51F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZO+CALIBRI,Bold /Encoding get
dup 80 /P put
pop
%ADOEndSubsetFont
/JLMWZO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 27{/.notdef}rp /I 4{/.notdef}rp /N 
/O /P 6{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e 
5{/.notdef}rp /k 2{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef 
/t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]
JLMWZO+CALIBRI,Bold nf
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
140.928 112.44 mo
(P)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
148.376 112.44 mo
( )sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
151.54 112.44 mo
(N)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
160.765 112.44 mo
(e)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
167.807 112.44 mo
(t)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
172.665 112.44 mo
(w)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
183.095 112.44 mo
(o)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
190.627 112.44 mo
(r)sh
JLMWZO+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
195.597 112.44 mo
(k)sh
gsave
227 101.5 mo
242.75 110.5 li
251 106 li
235.25 97 li
227 101.5 li
clp
227 110.5 mo
251 110.5 li
251 97 li
227 97 li
cp
level3{
gsave
clp
[1 0 0 -1 -22 313 ]ct
/1 
<<
/ShadingType 2 
/BBox [249 202.5 273 216 ] 
/ColorSpace /0 /CSA get_res
/Coords [261.11 201.62 261.11 217.07 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zz!!!!"!!!!"!!!!#!!!!#!!!!$!!!!$!!!!$!!!!%!!!!%!!!!&!!!!&!!!!&!!!!'!!!!'!!!!(!!!
!)!!!!)!!!!*!!!!*!!!!+!!!!,!!!!,!!!!-!!!!.!!!!.!!!!/!!!!/!!!!0!!!!1!!!!1!!!!2!!!
!3!!!!3!!!!4!!!!5!!!!5!!!!6!!!!7!!!!7!!!!8!!!!8!!!!9!!!!:!!!!:!!!!;!!!!<!!!!<!!!
!=!!!!>!!!!>!!!!?!!!!@!!!!@!!!!A!!!!B!!!!B!!!!C!!!!D!!!!D!!!!E!!!!F!!!!F~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 -22 313 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~zzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!sA`0"9\i1"9\i1"9er4"U,&5"U5/8"pP;;#6tJ=#6
tM?#RC\A#RC_C#mgqG$47+I$47.K$O[@O$k*OQ$k*RS%1NaU%1NdW%Ls![%hB0]%hB3_&.fBb&J5Te&J
5Tf&eYfj',)#m',)#n'GM5r'bqGu'bqH!()@Z$()@Z%(Ddl)(`4),(`4)-)&X;1)B'M4)B'M4)]K_8*#
oq<*#oq<*??.@*Zc@D*Zc@D+!2RH+<VdL+<VdL+X&!P+sJ3T+sJ3T,9nEX,U=W\,U=W\~>
]
>>
261.11 201.62 261.11 217.07 [249 202.5 273 216 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
grestore
.72 lw
227 101.5 mo
242.75 110.5 li
251 106 li
235.25 97 li
227 101.5 li
cp
1 /3 /CSD get_res sepcs
0 sep
@
gsave
242.75 110.5 mo
242.75 116.5 li
251 112 li
251 111.25 li
251 106 li
242.75 110.5 li
clp
242.34 117.36 mo
251.813 117.36 li
251.813 105.297 li
242.34 105.297 li
cp
gsave
grestore
/112893940.0 
<<
/ID /112893940.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 9 ] 
/XStep 8 
/YStep 9 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 9 mo
8 9 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 9 0 289 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 9 
/M[8 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~H[C*dH[C*dCMR^$CMR^$>[1N=>[1NL;GpCj;Gpb86UO4.6VUg$1c.$G3DEao,paie5>>Bu)B'MD5>>Bu
$k+%(5>>Bu~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112893940.0 /Pattern get_res
[1.18401 0 0 -1.3403 242.34 117.36 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
242.75 116.5 mo
251 112 li
251 111.25 li
251 106 li
242.75 110.5 li
242.75 116.5 li
cp
@
gsave
227 106.75 mo
227.75 106.75 li
227.75 107.5 li
242.75 116.5 li
242.75 110.5 li
227 101.5 li
227 106.75 li
clp
226.4 117.36 mo
243.844 117.36 li
243.844 100.614 li
226.4 100.614 li
cp
gsave
grestore
/112894136.0 
<<
/ID /112894136.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 12 12 ] 
/XStep 12 
/YStep 12 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 12 mo
12 12 li
12 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[12 0 0 12 0 286 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~84Z9B84Z9B84Z9B83oO-5s[e&5s[e&83o=!4$,Mc4$,Mc83o<q2E!HO2E!HO83o<q0JG170JG1783o<q
0I\G".4H\p83o<q0I\1i+sJ3T83o<q0I\1c*#oq<83o<q0I\1c'GM5q83o<q0I\1c'G1oh83o<q0I\1c
'G1ZZ83o<q0I\1c'G1ZU~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112894136.0 /Pattern get_res
[1.4537 0 0 -1.39549 226.4 117.36 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
227 106.75 mo
227.75 106.75 li
227.75 107.5 li
242.75 116.5 li
242.75 110.5 li
227 101.5 li
227 106.75 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
gsave
241.25 111.25 mo
242 112 li
242 111.25 li
241.25 110.5 li
241.25 111.25 li
clp
240.74 112.48 mo
243.051 112.48 li
243.051 109.755 li
240.74 109.755 li
cp
gsave
grestore
/112894332.0 
<<
/ID /112894332.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~S=H+>S=H+>St;OFSt;OFS=H+>S=H+@R$a8.R$aD8OcbcgOdMZ1KS5#3OdMZ1EcQ2ROdMZ18P*rUOdMZ1
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"U+l+!!!!!
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!oCMSFoCN"^f\"j/f^o.C[^NWQf^o.CP*2!:f^o.C<`YBlf^o.C
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!(Dd&O!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112894332.0 /Pattern get_res
[.288864 0 0 -.340591 240.74 112.48 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
.24 lw
241.25 111.25 mo
242 112 li
242 111.25 li
241.25 110.5 li
241.25 111.25 li
cp
@
gsave
228.5 104.5 mo
230 106 li
230 103.75 li
228.5 103 li
228.5 104.5 li
clp
227.78 106.54 mo
231.089 106.54 li
231.089 102.308 li
227.78 102.308 li
cp
gsave
grestore
/112894528.0 
<<
/ID /112894528.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~g=k97g=k97f@SX+f@SX+cd0q`cd0qh_SX1,_SXXN[C*EM[DL8AQ'IW"[DL8AEH,u`[DL8A;,M=u[DL8A
~>
<~_83t(_83t(_83t(_83t(^:q=q^:q=t['[3I['[Q`WiE)!WjKLVNK&pWWjKLVC2.LCWjKLV8P*ZVWjKLV
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$k*+9!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"pP&-!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112894528.0 /Pattern get_res
[.413635 0 0 -.529007 227.78 106.54 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
228.5 104.5 mo
230 106 li
230 103.75 li
228.5 103 li
228.5 104.5 li
cp
@
gsave
240.5 110.5 mo
241.25 111.25 li
241.25 110.5 li
240.5 109.75 li
240.5 110.5 li
clp
239.6 111.82 mo
241.912 111.82 li
241.912 109.095 li
239.6 109.095 li
cp
gsave
grestore
/112894724.0 
<<
/ID /112894724.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~_o'C0_o'C0\[f8]\[f8]W2QYnW2QZ*PEV2oPEVrUKnY57Kp/IGF)uDDKp/IG@:<ScKp/IG6UP:'Kp/IG
~>
<~S=H+>S=H+>OcbcgOcbcgJUrB'JUrB7D/F-,D/Fid@:<SQ@;URX;c?Un@;URX77BXD@;URX0JGpo@;URX
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#RC\9!!!!!&.f*I!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&eY0E!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112894724.0 /Pattern get_res
[.288864 0 0 -.340591 239.6 111.82 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
240.5 110.5 mo
241.25 111.25 li
241.25 110.5 li
240.5 109.75 li
240.5 110.5 li
cp
@
gsave
239 109.75 mo
239.75 110.5 li
239.75 109.75 li
239 109 li
239 109.75 li
clp
238.45 111.18 mo
240.761 111.18 li
240.761 108.455 li
238.45 108.455 li
cp
gsave
grestore
/112894920.0 
<<
/ID /112894920.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$47+I$46b5&J5Te&IJL<*Zc@D&IJL</1`=n&IJL<0JG%!&IJL<
~>
<~p%A"Np%A"No()ABo()ABkih6okih7$eC<!teC<^Q_o'C0_pmo@USFTZ_pmo@I=6O=_pmo@;Gqq<_pmo@
~>
<~lg*m&lg*m&kND$kkND$kbfn;Tbfn;oWiE)!WiF;+OcbcgOfHXgE,]c8OfHXg=BJ[EOfHXg5<i7hOfHXg
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<E3%!<E0#!<E3%!<E0#!!!!!!<E0#!!!!!!<E0##6t5/!<E0#
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112894920.0 /Pattern get_res
[.288864 0 0 -.340591 238.45 111.18 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
239 109.75 mo
239.75 110.5 li
239.75 109.75 li
239 109 li
239 109.75 li
cp
@
gsave
238.25 109 mo
239 109.75 li
239 109 li
238.25 108.25 li
238.25 109 li
clp
237.3 110.51 mo
239.612 110.51 li
239.612 107.785 li
237.3 107.785 li
cp
gsave
grestore
/112895116.0 
<<
/ID /112895116.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$47+I$46b5&J5Te&IJL<*Zc@D&IJL</1`=n&IJL<0JG%!&IJL<
~>
<~p%A"Np%A"No()ABo()ABkih6okih7$eC<!teC<^Q_o'C0_pmo@USFTZ_pmo@I=6O=_pmo@;Gqq<_pmo@
~>
<~lg*m&lg*m&kND$kkND$kbfn;Tbfn;oWiE)!WiF;+OcbcgOfHXgE,]c8OfHXg=BJ[EOfHXg5<i7hOfHXg
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<E3%!<E0#!<E3%!<E0#!!!!!!<E0#!!!!!!<E0##6t5/!<E0#
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112895116.0 /Pattern get_res
[.288864 0 0 -.340591 237.3 110.51 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
238.25 109 mo
239 109.75 li
239 109 li
238.25 108.25 li
238.25 109 li
cp
@
gsave
236.75 109 mo
237.5 109 li
237.5 108.25 li
236.75 107.5 li
236.75 109 li
clp
236.14 109.84 mo
238.452 109.84 li
238.452 107.115 li
236.14 107.115 li
cp
gsave
grestore
/112895312.0 
<<
/ID /112895312.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~S=H+>S=H+>St;OFSt;OFS=H+>S=H+@R$a8.R$aD8OcbcgOdMZ1KS5#3OdMZ1EcQ2ROdMZ18P*rUOdMZ1
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"U+l+!!!!!
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!oCMSFoCN"^f\"j/f^o.C[^NWQf^o.CP*2!:f^o.C<`YBlf^o.C
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!(Dd&O!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112895312.0 /Pattern get_res
[.288864 0 0 -.340591 236.14 109.84 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
236.75 109 mo
237.5 109 li
237.5 108.25 li
236.75 107.5 li
236.75 109 li
cp
@
gsave
236 108.25 mo
236.751 108.25 li
236.751 107.499 li
236 107.499 li
236 108.25 li
clp
234.95 109.19 mo
237.261 109.19 li
237.261 106.465 li
234.95 106.465 li
cp
gsave
grestore
/112895508.0 
<<
/ID /112895508.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~_o'C0_o'C0\[f8]\[f8]W2QYnW2QZ*PEV2oPEVrUKnY57Kp/IGF)uDDKp/IG@:<ScKp/IG6UP:'Kp/IG
~>
<~S=H+>S=H+>OcbcgOcbcgJUrB'JUrB7D/F-,D/Fid@:<SQ@;URX;c?Un@;URX77BXD@;URX0JGpo@;URX
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#RC\9!!!!!&.f*I!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&eY0E!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112895508.0 /Pattern get_res
[.288864 0 0 -.340591 234.95 109.19 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
236 108.25 mo
236.75 108.25 li
236.75 107.5 li
236 107.5 li
cp
@
gsave
234.5 107.5 mo
235.25 107.5 li
235.25 106.75 li
234.5 106.75 li
234.5 107.5 li
clp
233.8 108.52 mo
236.112 108.52 li
236.112 105.795 li
233.8 105.795 li
cp
gsave
grestore
/112895704.0 
<<
/ID /112895704.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$47+I$46b5&J5Te&IJL<*Zc@D&IJL</1`=n&IJL<0JG%!&IJL<
~>
<~p%A"Np%A"No()ABo()ABkih6okih7$eC<!teC<^Q_o'C0_pmo@USFTZ_pmo@I=6O=_pmo@;Gqq<_pmo@
~>
<~lg*m&lg*m&kND$kkND$kbfn;Tbfn;oWiE)!WiF;+OcbcgOfHXgE,]c8OfHXg=BJ[EOfHXg5<i7hOfHXg
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<E3%!<E0#!<E3%!<E0#!!!!!!<E0#!!!!!!<E0##6t5/!<E0#
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/112895704.0 /Pattern get_res
[.288864 0 0 -.340591 233.8 108.52 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
234.5 107.5 mo
235.25 107.5 li
235.25 106.75 li
234.5 106.75 li
cp
@
gsave
233.75 106.75 mo
234.501 106.75 li
234.501 106 li
233.75 106 li
233.75 106.75 li
clp
232.63 107.84 mo
234.942 107.84 li
234.942 105.115 li
232.63 105.115 li
cp
gsave
grestore
/113240940.0 
<<
/ID /113240940.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 298 ]ct
[8 0 0 8 0 290 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~_o'C0_o'C0\[f8]\[f8]W2QYnW2QZ*PEV2oPEVrUKnY57Kp/IGF)uDDKp/IG@:<ScKp/IG6UP:'Kp/IG
~>
<~S=H+>S=H+>OcbcgOcbcgJUrB'JUrB7D/F-,D/Fid@:<SQ@;URX;c?Un@;URX77BXD@;URX0JGpo@;URX
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#RC\9!!!!!&.f*I!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&eY0E!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/113240940.0 /Pattern get_res
[.288864 0 0 -.340591 232.63 107.84 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
233.75 106.75 mo
234.5 106.75 li
234.5 106 li
233.75 106 li
cp
@
1.5 lw
227 101.5 mo
227 106.75 li
227.75 106.75 li
227.75 107.5 li
242.75 116.5 li
251 112 li
251 111.25 li
251 106 li
235.25 97 li
227 101.5 li
@
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
222.89 129.04 mo
(T)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
228.734 129.04 mo
(r)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62D
D7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0
B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F8
9019F8CCCB6FE3AF5C57> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 117 /u put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp 
/S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/.notdef /e /.notdef /g /.notdef /i /.notdef /k 
/l /.notdef /n /o /p /.notdef /r /s 
/t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
232.922 129.04 mo
(u)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
239.222 129.04 mo
(s)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
243.914 129.04 mo
(t)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
247.935 129.04 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE1010
56958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C847
6BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D92067
68FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE
752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E604
3872EFC1C407DD53136E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp 
/S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e /.notdef /g /.notdef /i /.notdef /k 
/l /.notdef /n /o /p /.notdef /r /s 
/t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
253.911 129.04 mo
(d)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
260.211 129.04 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B67B1690716FF04D0147EA5B51F2B65610FAF2358C724A65CE
4A5C15BD93B6E6EA59AFCC3415F16C5AEB5B662300673D7883DCA60663F28B13
74AECADD3956841307F73A4A3284F6D8D8ABF9017548C3B89BDD9012EBEC97E3
91C348B649F9A4B9E9FBB9333C1B69DB13F722AB4C9DC35502510C64773DA8C4
CCB3ABFBFDCCB6F676B3960993837C4B63CC7BA56876924A0E6E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 2{/.notdef}rp 
/G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 
/P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /.notdef /g /.notdef /i 
/.notdef /k /l /.notdef /n /o /p /.notdef 
/r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
220.01 143.44 mo
(G)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
227.582 143.44 mo
(a)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
233.33 143.44 mo
(t)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
237.35 143.44 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80
846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE
481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2B
AF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB
99E3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 21{/.notdef}rp /C /D 2{/.notdef}rp 
/G /.notdef /I 2{/.notdef}rp /L /M /.notdef /O 
/P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /.notdef /g /.notdef /i 
/.notdef /k /l /.notdef /n /o /p /.notdef 
/r /s /t /u /v /w /.notdef /y 
134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
243.326 143.44 mo
(w)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
251.907 143.44 mo
(a)sh
JLMWZP+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
257.655 143.44 mo
(y)sh
.25 lw
271.25 106.75 mo
258.5 106.75 li
@
259.25 109.75 mo
251 106.75 li
259.25 103.75 li
cp
ef
227 106.75 mo
212 106.75 li
@
212.75 109.75 mo
204.5 106.75 li
212.75 103.75 li
cp
ef
.75 lw
380.75 30.25 mo
210.5 82.75 li
@
378.5 27.25 mo
389 27.25 li
380.75 33.25 li
cp
ef
212 85 mo
202.25 85 li
210.5 79 li
cp
ef
216.5 221.5 mo
353 221.5 li
353 193 li
216.5 193 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
.24 lw
216.5 221.5 mo
353 221.5 li
353 193 li
216.5 193 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
240.01 211.65 mo
(T)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
246.828 211.65 mo
(r)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
251.714 211.65 mo
(a)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
258.419 211.65 mo
(n)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
265.769 211.65 mo
(s)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
271.243 211.65 mo
(p)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
278.593 211.65 mo
(o)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
285.971 211.65 mo
(r)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
290.857 211.65 mo
(t)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
295.547 211.65 mo
( )sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
298.711 211.65 mo
(L)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
304.59 211.65 mo
(a)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
311.296 211.65 mo
(y)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
317.638 211.65 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
324.61 211.65 mo
(r)sh
216.5 257.5 mo
353 257.5 li
353 229 li
216.5 229 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
216.5 257.5 mo
353 257.5 li
353 229 li
216.5 229 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
279.37 247.635 mo
(I)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
282.898 247.635 mo
(P)sh
216.5 293.5 mo
353 293.5 li
353 265 li
216.5 265 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
216.5 293.5 mo
353 293.5 li
353 265 li
216.5 265 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
256.37 283.616 mo
(L)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
262.25 283.616 mo
(i)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
265.47 283.616 mo
(n)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
272.82 283.616 mo
(k)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
279.19 283.616 mo
( )sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
282.354 283.616 mo
(L)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
288.233 283.616 mo
(a)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
294.939 283.616 mo
(y)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
301.281 283.616 mo
(e)sh
JLMWZP+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
308.253 283.616 mo
(r)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZP+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B7C7F3FCFFFDB16D71949556271E5F2AA88700268763C9A
CD3F9E0997704EFB58B3C8E85BE2CD24BB97B678052C8703CE2AE55> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZP+CALIBRI /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/JLMWZP+CALIBRI*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen 21{/.notdef}rp /C 
/D 2{/.notdef}rp /G /.notdef /I 2{/.notdef}rp /L /M 
/.notdef /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /d /e /.notdef /g 
/.notdef /i /.notdef /k /l /.notdef /n /o 
/p /.notdef /r /s /t /u /v /w 
/.notdef /y 134{/.notdef}rp]
JLMWZP+CALIBRI nf
JLMWZP+CALIBRI*1 [30.0002 0 0 -30.0002 0 0 ]msf
194.32 252.435 mo
(+)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 /3 /4 /5 ]]
[/Pattern [/109727584.0 /109727780.0 /112893940.0 /112894136.0 /112894332.0 
/112894528.0 /112894724.0 /112894920.0 /112895116.0 /112895312.0 
/112895508.0 /112895704.0 /113240940.0 ]]
[/Gradient [/0 /1 ]]
] del_res
/JLMWZP+CALIBRI*1 uf
/JLMWZP+CALIBRI uf
/HIBBAA+CALIBRI uf
/JLMWZO+CALIBRI,Bold*1 uf
/JLMWZO+CALIBRI,Bold uf
/PBAAAA+CALIBRI,Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
