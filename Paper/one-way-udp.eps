%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: one-way-udp.pdf
%%Creator: Adobe Acrobat 10.1.1
%%For: wangchj
%%CreationDate: 10/23/2011, 1:51:15 PM
%%BoundingBox: 0 0 439 304
%%HiResBoundingBox: 0 0 439 304
%%CropBox: 0 0 439 304
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 17310 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2011-10-23T13:16:51-05:00"
   xmp:CreatorTool="Microsoft® Visio® 2010"
   xmp:ModifyDate="2011-10-23T13:34:02-05:00"
   xmp:MetadataDate="2011-10-23T13:34:02-05:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2010"
   dc:format="application/pdf"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:HasVisibleOverprint="False"
   xmpMM:RenditionClass="proof:pdf"
   xmpMM:DocumentID="uuid:1b61dd8d-9f7b-4053-8aeb-61a1551c2557"
   xmpMM:InstanceID="uuid:3542d506-7de5-4c2d-b1dc-afdce72f82bc">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="176"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkPn3UdQ03yVrl/prenf21lPJayUU&#xA;8ZFjJVqNt8J3xV4cvlb/AJyW4tz80pz/AGaXG30/ucVp6D+S8n5gwXOu6R511EaleWgtJ7aRWDhU&#xA;uBMCOXCM9YulMVenYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYqx38xv+UC8w/9s+4/5NnFXYGTA9X8833lHzdqVxb6Dd61FffoizmktNxbmaS4SNpF&#xA;USSkMzUHBDvt1IqUF6xZXtnfWkV5ZzJcWs684poyGVge4IxQrYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqx/XvOmnaNetazW9xcC3tjf6ncQ+l6VlZhmX15/VkjYqfTeixK7n&#xA;g3w+KqTH86vy+Nz9Viu7qa5FwlpJCthfK0czzxW7I/OFArRyXCB1J5CvSuKoiw/NvyTqOp6Vpun3&#xA;NxcXWsPwswbW4gWn1X63yZrhIRQQsjECrDmhpRq4qlmn/nz+X95ey2nrXMMtvBcXNyGhMjRrBqCa&#xA;aimOAzSM888qmFUU8lO9DtiqcR/mr5Fltbm7g1CSe2tIJrqeWG0u5VEFtcfVpZRwhbkiy1FVrsrM&#xA;PhViFULefnP+Wtle3lldauYriwEzXQNrd8FW2Zo5XEgi4MiyIY+Skgv8AqxAxVB+bvzu8s+XdR0f&#xA;SorHUdY1fX4km0uwsIF9Vll3T1VneFottyHAIHXocVTv8wpXH5ca/NcqIXGmXDzIDzCH0SWAag5U&#xA;8aYqw5Pzo/LKQMU1tHCDk5WG4IUeJpHtjTK0y/LLzLofmLzV5m1HRboXlmLfTYTMquo5obolaOFO&#xA;3IYoLKoUGleYjCnw2Otc5ETfgl7GOUgXw9eKrkbDkjN9pzihPMVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVSTX/Jnl3XpfV1O3kkcwPayGK4uLf1beX7cMwgkiEsZ/lkqBvTqc&#xA;VSuL8pfIEVSmmv6huGvGma7u2la4eWCdpWlaUuztLZQsxJ3K79Wqqr2P5ZeSLDVLDVLXTjHe6Yqr&#xA;YP69wyRcLZLMFY2kMfI28SIzcasFWtSBiqXy/kl+V8y3ay6Gj/X09O7Yz3JaRa27ULery+1ZQnY9&#xA;Vr1ZqqoTX/y2/KiKzk0/U7CWddRSWEaet1fzTTLLNDPIIokmL/3ltDyZacVRVJCCmKpBpf5Cadfe&#xA;Z77zHrcYshPcyT6bZ2ctzHc28UzSPJHJN9ZnSNpHmdpPq5A5fEhQ1qq9N0Typ5b0OwsbHStOgtbb&#xA;TE9OxCoC0YKBGIkbk5ZlUBmJq3cnFUVq2lWOraZdaXfx+tZXsTwXMXJl5RuOLDkpDCoPY4q87h/5&#xA;xx/LGCOaKC3vIo7heE6JeTqsig14uA3xCvY4qynyP+XHlTyTBdQ+X7Z4FvWR7lpJHlZjGCE+2TSn&#xA;I9MVR3mheNjbXa7SWV5azLJSpRDMsU5Hzt5JF+nFU4xV2KuxV2KuxV2KuxVIW8+eT11YaSdVh+uF&#xA;xD1PoiYmggM9PREx7Rc+f+TgtU+wqg9W1nR9Hs2vdXvrfTrJSFa5u5UgiDMaKC8hVantviqIkura&#xA;O2a6klRLZU9Rp2YBAgFeRY7UpvXFWrm6tbWL1bmZIIuSR+pIwRecjiNFqxAq7sFUdyaYqhl13Q3u&#xA;xZrqNs12Z2tBbiaMyG4ji9d4eFeXqLCfUKdQvxdMVR2KuxV2KuxVSnu7W3ANxMkIbZTIwWvyqRir&#xA;cFzb3Cc4JUmT+aNgw+8YqqYq7FXYq7FUJfatpthA093cpFGjrEamrGRwCsaqKsztUcUAqewxVLhc&#xA;eYNWP+io2jaef+PqZVa9cV/3XAwaOEEdGl5N2MY64qjtM0TTtN9RraMm4mp9Yu5WMs8vGtPUlcl2&#xA;pU8QTRegoMVR2KuxV2KuxV2KpT5tp/hfVh1Y2kwjHUmQoQlPflSnviqWfmbqC6f5MvLySa5gt4pr&#xA;Q3T2UiwTm3N3EJ0WdpLdYA8RZWlMqcFJbktKhVT/ACynhu/Lz6jZz3kuk31w8umQ6hcNe3EMSKsL&#xA;obpprv1keaKSRHEzrxYcW40AVZbirsVdiqSa75u07SbhLBY5tQ1iVBLBpVmoedkLFRI5YpHFHVSO&#xA;crquxAJO2AlUgudM8y6+D/iC6+p6e/8A0pNNkdUYV2FzdgRzS+6oI07MHG+VykejIBHDy/pS6d+j&#xA;RZQDTeHpfUvTT0PTP7Hp04cfamV0ztj9tqUvlnWtM07Sr6S50m8uo7SXTLms8cAlIVWtZ2b1Iwv+&#xA;+yXSmyhMMM1y4UGG1pp+amr+XtIs9K1bVPMVn5eudLu3vNPlvY2uUlY2s1rIgto5IJpSIrpiPTao&#xA;NOoqDkNbyHy9+Vv5d+YvL7arB5v05k1G3FvaSzWUVu0aw2dxp7SGCW4MgeZ5FuJTVS7rXbl8KrJp&#xA;fyt8mNqlhfRebNKga0v49Sm9KGBXd47+5vfTRxcDhG4uxG4Ibl6UbV+GmKqet/lT5V1TzXqPmEee&#xA;7a2kvvrxS3jaLhE+o2dxYyyb3G7iKWEA0H91/l/Cq3pn5ZaBp6fu/OujPLxn/ePaWzjlPpjad/dS&#xA;XLw8ByVvT4cAiiNQoaQuqwDy35a8uec/zAsdC0jzND6vluIRT6lNZ28VzdTWdtZ2QgtlN200kIFp&#xA;JMjLGvov8SsxIIVfRfkry+nkryjp/l97hb17Zplg+rQegGEkzyqiRF5SAiuFLvISacnapJxVOnbV&#xA;pk4pHHaq5H7wyc5UXv8AAEKcqdPiIHv0xVWtbG0tqmGMCRhR5T8Ujf6ztVm+k4qtudPtbhvUZeFw&#xA;PsXMfwyr8mHb2Ox7jFVJNKic871zeSdxJ/dD/Vi+wPman3xVc2kaf1ihFvJ2lg/dMPpSlfkdsVU0&#xA;vzaFodRcjhTheFCsboehdgOCNXYivuOtAqiryO5ltJo7SYW9y6MsNwyeoEcj4XKVXlQ70rirCPy7&#xA;/KOx8napqusy6xe67rGsOJby71D0Wo/Rmi4xh4+Q2YB6UCinwjFWe4q7FXYq7FUq81622heWdV1p&#xA;YfrDadazXQgrx5mJC/GtDStMVeCL/wA5N+fipP8Ag5RTsRc1P/CYq9L/ACd/NDVfPUGqfpTSRpN1&#xA;prwgRgv8aThyDxcKRT0zirLfMjeqNP01RWS+vIajYgRWzC5lLL/Iyw+n83GKpV+a1qbryJqMAszf&#xA;l2tx9VWAXRYfWI6n0TY6xyC/aP8Aoj0pX4ftBVBfktAbfyFb262aWUMN1erDCgkQ/wC9UhkLxSWe&#xA;lmFvVLj01t0UClABsFWdYq7FXYq8p8769faN+ZbTWlv9Za40/S7d4xNHDJSS51D7Am4xyHbdWddt&#xA;xuKZRl+oNkOTK9J836JqMlxbQXME17ZuY7y1ikUzROppSWInmg8DuD1G2G65oprVrt5YSFPFD1Uf&#xA;xynJKwziGDXf/KQ6F/207X/k4Mpwf3gZ5Ppev3tjZX1s9te28d1bSbSQTIsiMPdWBBzZOMp6XpWm&#xA;aTYxafpdpDY2EHL0LS3RYokDMWIRFAVRyYmgGKorFXYq7FUv0vy9oOkvPJpenW1jJdO0t1JbwpE0&#xA;ruxZmkZQCxLEmpxVUhCnVrkt/erFEI/aNi9afNhv8h7YqrXV7Z2kay3c8dvG8iQo8rqimSVxHGgL&#xA;EfE7sFUdyaDFUusfOHlK/tYLuw1uwu7W5uBZW1xBdQyRyXRXmIEdGKtLxFeA3p2xVHRappktjDfx&#xA;XcMljciM292siGGQTELEUkB4t6hYBaHeopiqJxVCXur6fZXdhaXU3p3GqTNbWKcWPqSpDJcMtQCF&#xA;pFC7Vag28aYqiyARQ7g9RiqW6TcRxaOZpSIYYTMxUn+6iWRiqsP2SiUBHbpirE/L/wCeX5d+YPMl&#xA;5oGk3stxc2MJmuLj0JUhHF1jKAuFctVuy098VZBb+fPJ9zdXFpbarDPdWhAuoI+TyRFugkVQSte1&#xA;cVbvfPXlKxiEt9qcVrEeVJJuUan042lfdgB8McbOfBQT0GKr7bzp5XukZ7bUI50VijNGHcBl2ZSV&#xA;B3HcYqq/4p0H/lq/4ST/AJpxVL/zAljm/LzXpYzyjk02d0bcVDREg74qvwMmB6t+ZvlryJ5w1OTW&#xA;jMW1RdJtbaOBOZ+KS4V5HYlVVIw9TU18K4UF6PpVjeS30ms6knpXcsfo2tlyDfVYCQzKWUlTLIwV&#xA;pSp47KoLBeTKEl/N6ysrz8vNVt769GnWreg0l6bGXVFj4XEbgtZRbzLyUVVgU/nBWoxVLvyKutKm&#xA;8hRQ6TrMGu6daXE0UN9babPpCVZvVdfq8zMuzyMf3QWMA8VUccVehYq7FXYq8u862mnXfnnVrfUo&#xA;UuLF9E083EMi8lKrdX7dPYio98xsxPEGyHItaBotlpkAvdP1G6u7C5gjFrDdsJjHF9uMRzSL9Y4U&#xA;Y/BI7fRkZy2TDfdMZLsOhUnrlJk2Uxu8/wCUh0L/ALalp/ycGDB/eBZ/S9G85+eNC8n6WdT1n6yL&#xA;YVoba1uLncb0Ywo6pXsXKjNk4yD8qfmX5e8z+X7PXdPt9RWzvVZoQ9jcs1Edk3aFJo+q9nP34qm3&#xA;+JtO/wB833/cPvv+qOKu/wATad/vm+/7h99/1RxV3+JtO/3zff8AcPvv+qOKqttrtjczpDHFdq77&#xA;Ay2V3EnSu7yRKg+k4quseH12+5f70+ota9fS4D0+P+R19uXLvXFUH5u8tjzFpcNgbj6r6N9Y33qc&#xA;PUr9Ru4rrhTkn2/R41rtWu/TFWGH8ifL/wDg7QfLQu5kXSbmG+u9QUytcXF3b6a+nxzo8ksjQNHW&#xA;OSIKSsfpqijj0VY/b/8AONjxiRLjzFHfW/6N06wgtbrTY5IhJpz2Lhpf3weWCT9HU9AsAvqScWBd&#xA;yyqvaf8AOOFtaC546612skUUVta31qLi2QW95BLGksXqp6sRsrC2s3TkvJFY1HMgKq7/APOPVr+i&#xA;ra2i1hDf21/ZX7ahPZJM840/Sk06G3uQZVM0JZXkdS24d0FK88VevkhQSTQDck9AMVQOmuk0l1cx&#xA;D9xPIDE3Z+KKhkHsStB4gVGxxVu4OiWd/BdXP1a3v7xvqdtPJ6aTTMQZPQRmoznjEW4D+WvbFXlW&#xA;r/lDoPmGGHUp/MVlc6LLLqL6HJ9Xilj5681ywZpmnaO4kS6vVa3ZVU/Dx3Zi2KqWlfkppWp6HfaQ&#xA;fOLaxbJrb3d9HBHa8FkosF1bz+kTKLiS19SCR/UWvqFmjLdVUpm/JoX+nWtr5Z842l9f+W4Wsrpr&#xA;eK2W5GpteS3TXN1dxvLPGILqQTi2O3KP+Y1VV7hodlp1houn2OmFTptpbQwWJQhl9COMLFxYbEcA&#xA;NxiqVfmN/wAoF5h/7Z9x/wAmzirsDJiSeSfLHmrzprMevWEd6NPj0i7smYlXimje6YFXQqwDcRyF&#xA;aHvhQWa6Rc3NnqUuhXkjTFIvrOmXUhJeW2DBHR2P2pIHZQzd1ZCatyxQk35wpbSfl7qUVxaC/jle&#xA;1jFkZIYhKz3USonOeG6QVYj/AHUx/loaEKob8kRpsn5eWN7ps1zNZXrzSQ/Wb6TUQqxyGACCaVIW&#xA;WI+lyVDGhWpBVTUYqzzFXYq7FXlvnK9e1/Ma7aMK7jSNOZoyQD6Yub8M3yBIqe2Y2fmG3HybOtRX&#xA;dpKUqrpxLI3UBjsfp+/MaZ2bIhLLzW7OygNxdzpBCCF5ueI5MaKor1JOwA3OUgkmgzOyO8v+WfMW&#xA;u6tp2qT2raXo9lcR3ateKyXdw0R5IEt9mhQnqZaN/kd8zcOAg8RaZ5LFB6tmW0sG/M3UPNum2Nsv&#xA;llLmNmiu2jNjaLdu98kYaytpUMcqx288hb1Zfh40HxpXlirGbH8w/wA44ta0Kz1Dyr9btNStY729&#xA;msrK4h9BpRvZM9xcelFNHxY85G4k8UKpXmFUtt/N/wCeUGu6g97pt6ui2Ml68KjToruaWG0Enop6&#xA;cDQCV5/0hbU9OcVNvJxPHmSqzD8ofOvnTzXZ383mXTbfTpLEW0DRwrLG31uSM3M8bJK7svowz28T&#xA;KdxKsleyqq9BxVDX1hFdxEH4JwrCG4WoeNmHVWFCPv3xVqz1COYiGWkN4o/eWzH4hTqVr9pPBhiq&#xA;sbi3EwgMqCdgSsRYcyB1IXriqpirqioFdzuB3oMVcSAKnYDqcVS1Rb6pdCQos1hArKhcBo5ZGIPJ&#xA;QdiEC0De+3TFUyxVhv5ofl0fPWk6fYLqkukSadfLqMF3AnOQTRwTRR0+JKcWn5e9Kd8Vee+YvyU0&#xA;PQdIj1DU/MFnb6VpIt2U3unNcp6VrMsqWjqLgPLalIxWAbmT95y/ZxVIdC8o+Q/Iur2SXvnaeZvK&#xA;19Jf6pXSrkxr9dhtvRWa5QSJbs/1dVV+X7zm0YG5BVT/AE38sNL85SSanpnmiGe1g1VZLm1l0gpc&#xA;JDb6ldaibOVbtxPDKZb2SN5AqckHHhQtyVZx+W/5Z3Pk27u5n1OC9huLDTNPjgt7FLIL+jIWi9V2&#xA;WSVpXlLlqvuv2a0AoqybzXof6f8ALOqaJ631f9JWstr6/Hnw9VCnLjUVpXxxV4Nbf84iywwXETeY&#xA;LWY3CBFlksHLxUYNyjpcqATSm4O2FXpH5N/lE35c22qRNqY1JtSeFuSw+gEEIcDbnJWvqYFZd5iH&#xA;ovpmoL/eWt7DGQNi0d431RlP+SDMslPFRirHPzrksW/LzVbS4SO5eRYZhZve2en844buDm5mv1kt&#xA;gkZdeQkRlaoQ/aGKpn+WT2Enkqxl09ZUspZLqS3E99HqcpR7qVgz3cMlwkhatdpX4/Z5EiuKsoxV&#xA;2KoXVNW0rSbGS/1W8g0+xi4iW7upUhiUuwReUkhVRyZgBU9cVSnzJ5e8ueZbWz+tTenOTz0jUrWV&#xA;UuEZkLk28nxBg0a1ZSGRlHxKRglEHmkGmBah5W13TtRt9CXXtEa61Q/6O92WtL11Q1Z0skLi6YAb&#xA;8HiHyzGlpgeuzYMtMo8oeTfKGmanKRex635osAou7meSOSe29VdhHboeNqrr04qGYfaZsvhjjEbM&#xA;JSJ5stk1LToruOzluoUu5iFht2kUSOxR5AFQnkSUhkbbsrHscmxRGKvBbDRf+ci7S/vbgzXL2kVv&#xA;NFp8f1q0mnJudTtLyV+NxLJA0sdrJcW8HqbJ6dNlYVVdBon/ADkOb4yyS3hlillmCyXlmunl5NVt&#xA;p1WEQyfWWh+qxyArOCVWqIAGKlVOrnTPziv9B8sy30V6mvRx6gL76tfW0CW9091CbCa9W3ltYbqK&#xA;KBH5okbBq/YBOyqWWP8A0MVDBqV4dNu1uWWFNJ043miNHX6y008t26QxozssvH9yiclBq3Pi5Ve5&#xA;4q7FVOe3t504TxJKnXi6hhX5HFVFtLsDCYkhWFeXMGEemwcftKUoQcVa+r6ko4reKy/zyRAyfejR&#xA;p/wmKrRpFmxL3IN1MafvpqMwp04UChKf5IH34qu/RViaeojTAdFmd5VH+xkZhiqLxV2KuxVIfOXl&#xA;Gz806dBYXcnCGKcSutCyvG8UlvNGQCv24J3VW/ZajUNKYqxO9/Ijy/fw6jFe61q0661FDFrRL2St&#xA;eG1fnbPIyWqlGhPHj6XAMFAcMK1VZZ5b8naZ5evL6XTo4ba1uUt4baxtoUt4oYbZWIXjH8LM0s0j&#xA;lqDqBTapVT7FXYq7FXYqlPmwf86zqkn7UFtJPGfB4VMqH/gkGKsU/O3yumseT5bq3S9XWbF4fqF5&#xA;pf1g3kKvdwNK8cdsecnH0lkpxahUMF5AYqjvyf0vVdM/L7TrTVoLq31ISXb3cWoSi4uhJJdyuTNO&#xA;pZZmbly9QUD/AGuK1oFWZ4q7FUl836Bda5pCWdndx2V3Dd2d7b3E0JuIxJZXUdyqvEskDMrGLiaS&#xA;DriryyP/AJxunhkDweYLVjBDa29h9Y0a1mEcdrZXNnWVC6xzu/1oOWkX9hV3AXiqvXRdAi0M6Wvn&#xA;O1soItMtvLmqXWr2UkKXbeXXnZ2tnuJ7ZJIg0ki3So0qlARyU1YqpHD+VHkmGd3j/MXTojeXNpqK&#xA;xRi1CCLTYrq3kSFWuWKxofV9NlP7kxbElKhVObX/AJx/sb2z0q8sda0ye1ij02WKeDTBJBfJYi4K&#xA;SXJW7IuFu0uwZjy/eUrX4tlWW/lx+UVn5IltZre++tXEdtdW1/P6Aie7ae5jnhkmId+TW6o0a1rs&#xA;xpToVXoGKvEtc0385NTfVxYDUUEzX4tpY7pLRENu2swQRRq8sDj1VuLBopFXieIZmBXFV9p5Y/NG&#xA;18zPrS3uq2WjR3WmQ6VodxdPqEpt5tQZb1btxc3MVEgYyNIwZgpRVk+AqVXtWKuxV2KuxV2Koe/n&#xA;lhtucXH1C8calgSB6kipUgFa05eORkaFqpU1X/log/5EP/1WzG/MnuZU6mq/8tEH/Ih/+q2P5k9y&#xA;06mq/wDLRB/yIf8A6rY/mT3LTqar/wAtEH/Ih/8Aqtj+ZPctK1jO9xZW87gB5YkdgOlWUE0rmUDs&#xA;xV8KuxV2KuxVCavqtlpGlXmqXzmOzsYXuLhwCxEcalmIA3OwxV5YP+cpPywIJA1AgdSLYU/4nirN&#xA;PIP5l+V/PVrd3GhPMRZOqXEc8fpspkBKHqwIPE98VTPzQQ+nRWQ+J7+6t7YRjq8bSq04Hyt0kY+w&#xA;xVN8VdirsVdirsVdirzTXPyD8qa3qd1qV/qOpfWbxrlrgQPbW8bC6VFZWjht0R+BhjZXcFyVXkzc&#xA;RRVdr/5BeR9b1m+1eea/gutRNx9aWCdVjZLmKNHj4Mj/AALLF66jtKzN0oAq9HhiSGFIk2SNQij2&#xA;UUHTFV2KuxV2KuxV2KuxV2KuxV2KoTVf95V/4z2//J9Mhk+kpDy/zf8Alh5t1PzDq+qaPc2lleXZ&#xA;nlsNd9aaLUIVk0g6fHp9YoSUtluT9b5LLs/+6+Xx5iRmAN0ofRvy2/Nu183ySzeb5IfK4a7FoYbq&#xA;5u9Qjt3nke2gZNQS6tJeKMnKaRGl/ZDcQDiZxrluqV6P+RXnLStQvLuHW4JFW1uI9JgZ50WGe0tZ&#xA;dO0VuSKrxrFaXUhlKNUSUK8qAgnKD+PmtJn5D8ufmNpnnLStL1rXbrUbTTdPe71ZmuLi4ja49e7g&#xA;somnkS3EvO1uQ0nwbvArkV4nBIgjZXrOkf8AHJsv+MEX/EBmbHkxReFXYq7FXYqxv8yUV/y/8xIw&#xA;qradchh4gxMMVYiPyh/LQCg8vWgB6ji39cWVN+UF8leR/MevwhrXQ9OuV0qKFXcRI9zO1yiqvI7s&#xA;1Pwrigsz02Q63qiauoI0mzVk0ssKCeSQUkulB34BP3cTbVBc7qykqE+xV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KoFdb09lDKZWUiqssExBB7ghN8Vb/TNj4Tf9I8//ADRirv0zY+E3/SPP/wA0Yq79&#xA;M2PhN/0jz/8ANGKrLi6sbyxkb1ZI445IwzrGwkWRWR0AR0JNSV/Z75GQFbqh/VT/AJbb7/pG/wCz&#xA;fMfgx97Ky71U/wCW2+/6Rv8As3x4Mfetl3qp/wAtt9/0jf8AZvjwY+9bLvVT/ltvv+kb/s3x4Mfe&#xA;tlMdPWFLC2SBzJCsSCKRvtMoUcSdl3I9syRyYq+FXYq7FXYqx38xv+UC8w/9s+4/5NnFXYGTE4vJ&#xA;PlTzR541ka/pkV82nwaXPYyvyWSGTnctWORCrrUotaHem+FBenYodirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVSXTP+Obaf8YY/+IDFUj82+Zta0bUNDtdP022vo9Zu2sTJPdyWzRSC3luuQRLa55r6&#xA;ds/cHlxHQkhVi9p+bXmK51DyxFF5ZSax81QLfWUtveTT3EVk0tujS3ESWfpRNGl4HcNNwHEr6hYq&#xA;GVem4qhV/uLz/mPtv+xfIZPpKQm2a9k811f84Z7IQx22irPd3F5qFhFHJdGJBJY6zaaPG0jrDKyr&#xA;Kb5ZtlPECnxVrlgxot3lz829X1f8wJvJz+XOEunER61qFtcy3NvbyOlw6FJPqscbxn6uqVkeN+b8&#xA;RGeDkJx0LtbelZWlR0j/AI5Nl/xgi/4gM2UeTBF4VdirsVdiqRefNO1HUvJWuafpqepqF3Yzw2iE&#xA;qtZXjKoKt8PU98VeAW4/5yl9G5+speicIPqgjt9JKF+Qr6hIBC8a/ZB3xW3pH5G6X+ZUL67qXn2N&#xA;kv7z6rFas4t1Yx24lJ+C3AUAGXqdzir1TFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUisl1GG&#xA;zghfT5uccaI1GgpVVAP+7cVbnt5J3gkn0l5XtpPWtnf6sxjk4NHzQmT4W4Oy1HYkd8VQGm+WNF0u&#xA;+mv9M8rwWN9cc/rF3bQ2UMsnqMHfnIjqzcmUFqncgYqmnqX3/Vvn/wCCg/6q4qtjt742l0xtXWR7&#xA;uGZIS0fJkj9HkQQ5X9hurZGYsEKEX9auv+WCf/goP+quYfgSZWk115V8s3ct9LdeU7W4l1QIupyS&#xA;21i7XIjKsgnLMTLxZFK8q0oMl4U1sIrStK0zSE4aT5eTT09NIuNrFaQD042dkSkbr8KtK5A7Fj4n&#xA;AcMyto/61df8sE//AAUH/VXB4EltV0yKSLTbSKVeEscMauhIJDBQCKgkbe2Zo5MUThV2KuxV415k&#xA;83fnPZ/mFqdlpekXF35Zt7yCawmFsOM0K2CJNaep6Zor3k4f1SduDjlxFMVY3f8A5j/85Az6VrLW&#xA;mk3Md79ZA05IdEu4nS2jaJRcRNciaNlno3K3dWlTkTyAXZVmsvm/8xrzQtea50690aTT9ZtbO1u7&#xA;Owea7fTjfLHcTwwul6tx/ov7zmkVByI4fByKrF3/ADH/AOchZdIu7ZPKrwahHZxQrdGxk9RbxrY3&#xA;Es6ESywSrwglVQI6LPJHGwNP3iqeXn5kfmvDq01nD5dZ4Fj1VlnOl6i0UbWiz/UleaN29UzelC/7&#xA;qKjiQopDJ8Sr1fTbia5061uJ42inmhjklidPTZHZQWVk5ScSCaEcjTxOKonFXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FUhsoTNZwTSTTmSSNHcieYAsygnYMAPoxVW+qJ/v2f/AKSJv+a8Vd9UT/fs/wD0&#xA;kTf814q76on+/Z/+kib/AJrxVK7nXvKtrqEWm3WuQwajPL9XhspdQKTvMVR/SWNpQ7PxmRuIFaMv&#xA;iMVTT6on+/Z/+kib/mvFXfVE/wB+z/8ASRN/zXirvqif79n/AOkib/mvFXfVE/37P/0kTf8ANeKo&#xA;7SpHk0yzkkYs7wRs7HqSUBJOKorFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYqkumf8c20/4wx/8AEBiqJxV2KuxVgsn5UaZc+fZ/Nd/dNcpJKbmLTgJIkWYR6ckTOySgSiN9&#xA;KEgR0K8mBpVAcVZ1irsVdirsVVtG/wCORY/8w8X/ABAYqi8VdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirHoYrSaGOWLRrL05FDpyIB4sKioEJ/Xiq/6rB/1Z7H7x/wBUMVd9&#xA;Vg/6s9j94/6oYq76rB/1Z7H7x/1QxV31WD/qz2P3j/qhirvqsH/VnsfvH/VDFXfVYP8Aqz2P3j/q&#xA;hirvqsH/AFZ7H7x/1QxV31WD/qz2P3j/AKoYqm+nvFJYW0kMYhieJGjiUABFKghQBQbDbFVfFXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkumf8AHNtP+MMf/EBiqJxVj3nr&#xA;U9X0zRIb3S0nkljv9PF0lrbvdy/U2vYlvOMMaSyN/o5evBeQ6jfFXmGu+cPzgvNI1u3sdNuxZzpq&#xA;MVhcLp95b6gFlOqtZSRSKYvT9JLK0XiYOZ9VasGIqqyK789+dbS00zULnSr4y3OjapJcaba6VdTh&#xA;NYgmgFrA6xiRwvH1lVzKkco+MEArRViDfnP+dCQLbv5RD6nHEbu8W1sLyeRLZ5ja27rZSTWtwfVm&#xA;tp3oxUiMptsSVXqn5dax5w1jQpNR802MemXkt1cJb6ckMsTxW8UrRx+q0rv6jOF581VVIIoMVZTi&#xA;rsVVtG/45Fj/AMw8X/EBiqLxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KpTb6TqUEEcK3cJWJVQEwNWiin+/sVX/AKP1T/lrg/6R3/6rYq79H6p/y1wf9I7/APVbFXfo/VP+&#xA;WuD/AKR3/wCq2Ku/R+qf8tcH/SO//VbFUNb+XJLa9u76B7WO8vjGby4Fs/OT0l4Rhm9boi9B06+J&#xA;xVE/o/VP+WuD/pHf/qtirv0fqn/LXB/0jv8A9VsVd+j9U/5a4P8ApHf/AKrYqjbG3NtZW9sW5mCN&#xA;Iy4HEMUUCtKmlaeOKq2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv8A/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Chih Wang</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <xmpTPg:MaxPageSize
    stDim:w="439.000000"
    stDim:h="304.000000"
    stDim:unit="Points"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="CALIBRI"
      stFnt:fontFamily="CALIBRI"
      stFnt:fontType="Unknown"
      stFnt:versionString="Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895"
      stFnt:composite="False"
      stFnt:fontFileName="MyriadPro-Regular.otf"/>
     <rdf:li
      stFnt:fontName="CALIBRI,Bold"
      stFnt:fontFamily="CALIBRI,Bold"
      stFnt:fontType="Unknown"
      stFnt:versionString="Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895"
      stFnt:composite="False"
      stFnt:fontFileName="MyriadPro-Regular.otf"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 1 
/Lookup <~
z^TFEr~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 45 
/Lookup <~
!WiK)!s8`-"9Su2"9]&3"U,86"pGG9#6te?#RD"B#RM(C$4.CH$k+!R%Lj?W&.Tc^&J-&b&eZ>f'+uVl
'bi%r()AD#(`"b)(`+k+)&P(.)]:F3)]L^9*#pm;*$%!=+!!EC+<NiK+sB8Q,9]JU,U>k[-72:a-RVXh
.On9q.kFX"/hC-*/hU<-0/$N00J?`40f!/;1,EA>1,NJ@2)StG2E,FP3&tjV3]_<^4$7Wc~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 63 
/Lookup <~
!!!$"!W`B'!WiK)!s/]-"9]#2"U,86"pPP;#6te?#RM(C#mq@H$4.FI$k+!R%1X?X%M'Q[&J-&b&J6/d
&eZDh'+uYm'GDkp'br5!(De_)(`+k+(`>(/)]CO5)B:X8*#q!>*?I<C+<NiK+X'2Q+sKDT,:#bZ,pc4b
-RV^j.4S9s.P"L!.kOm(/h^K10/6f60f!5=0f*A@1c8qH1cB(K2)f=O2`YgW3'23^3]qNb4$@ih4?e)l
4?n5o5!a`"5=0u'5t-P06:Zq76Um%96q<=>6qNRD77rjI7SK6P85>]X8Pu2b8l;Jh92_\k9iS1t:0+V(
~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -304 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 304 li
439 304 li
439 0 li
cp
clp
gsave
0 304 mo
439 304 li
439 0 li
0 0 li
0 304 li
clp
370.51 7.08981 mo
367.59 7.08981 367.59 9.90982 367.75 9.74981 cv
367.75 50.9998 li
367.59 50.7899 li
367.59 53.6099 370.51 53.6099 370.75 53.2498 cv
389.5 53.2498 li
389.45 53.6099 li
389.45 53.6099 392.37 53.6099 392.5 50.9998 cv
392.5 9.74981 li
392.37 9.90982 li
392.37 9.90982 392.37 7.08981 389.5 6.74978 cv
370.75 6.74978 li
370.51 7.08981 li
false sop
/3 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /3 /CSD get_res sepcs
.498 sep
ef
371.05 7.68019 mo
368.3 7.68019 368.3 10.4302 368.5 10.5002 cv
368.5 50.2503 li
368.3 50.2803 li
368.3 53.0203 371.05 53.0203 370.75 53.2502 cv
388.75 53.2502 li
388.91 53.0203 li
388.91 53.0203 391.66 53.0203 391.75 50.2503 cv
391.75 10.5002 li
391.66 10.4302 li
391.66 10.4302 391.66 7.68019 388.75 7.50017 cv
370.75 7.50017 li
371.05 7.68019 li
.772549 .690639 .638117 .874083 cmyk
ef
389.509 32.252 mo
384.205 27.2996 378.62 21.3918 374.013 14.9909 cv
389.509 14.9909 li
389.509 32.252 li
.0196078 .0156863 0 .815686 cmyk
f
gsave
365.41 47.48 mo
391.241 47.48 li
391.241 12.028 li
365.41 12.028 li
365.41 47.48 li
clp
367.75 14.4478 mo
365.41 13.5118 li
365.41 13.5088 li
367.75 13.5088 li
367.75 14.4478 li
/4 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /4 /CSD get_res sepcs
.498039 sep
f
367.75 14.4479 mo
367.75 14.4478 li
367.75 13.5088 li
367.75 13.5088 li
367.75 14.4479 li
1 /4 /CSD get_res sepcs
.74902 sep
f
390.991 33.6182 mo
390.745 33.394 390.498 33.168 390.25 32.9395 cv
390.25 14.2498 li
390.36 14.3899 li
390.5 14.5299 li
390.25 14.2498 li
373.485 14.2498 li
373.312 14.0037 373.14 13.7563 372.97 13.5088 cv
389.509 13.5088 li
389.509 12.3073 li
390.582 13.5088 li
390.61 13.5088 li
390.818 13.774 li
391.053 14.0363 li
390.827 14.2498 li
390.991 14.2498 li
390.991 33.6182 li
.0196078 .0156863 0 .964706 cmyk
f
390.25 32.9395 mo
390.004 32.7127 389.756 32.4829 389.509 32.252 cv
389.509 14.9909 li
374.013 14.9909 li
373.836 14.7449 373.659 14.4972 373.485 14.2498 cv
390.25 14.2498 li
390.25 32.9395 li
390.5 14.5299 mo
390.36 14.3899 li
390.25 14.2498 li
390.5 14.5299 li
.0117647 .00784314 0 .905882 cmyk
f
grestore
382.75 11.9999 mo
377.5 11.9999 li
377.481 11.7499 li
377.34 11.6098 li
377.5 11.2499 li
377.5 10.4999 li
382.75 10.4999 li
382.481 10.6399 li
382.62 10.7799 li
382.75 10.4999 li
382.75 11.2498 li
382.45 10.9798 li
382.31 10.8498 li
382 10.4999 li
377.5 10.4999 li
377.651 10.8498 li
377.51 10.9798 li
377.5 11.2498 li
377.51 11.5098 li
377.651 11.6499 li
377.5 11.9998 li
382 11.9998 li
382.31 11.6499 li
382.45 11.5098 li
382.75 11.2498 li
382.75 11.2499 li
382.62 11.6098 li
382.481 11.7499 li
382.75 11.9999 li
377.34 10.7799 mo
377.5 10.4999 li
377.481 10.6399 li
377.34 10.7799 li
.0196078 .0156863 0 .964706 cmyk
f
382 11.9998 mo
377.5 11.9998 li
377.651 11.6499 li
377.51 11.5098 li
377.5 11.2498 li
377.51 10.9798 li
377.651 10.8498 li
377.5 10.4999 li
382 10.4999 li
382.31 10.8498 li
382.45 10.9798 li
382.75 11.2498 li
382.45 11.5098 li
382.31 11.6499 li
382 11.9998 li
.0117647 .00784314 0 .682353 cmyk
f
gsave
369.25 7.49995 mo
369.15 7.35005 li
369.031 7.41005 368.92 7.46995 368.5 7.49995 cv
368.82 7.52995 li
368.72 7.59996 368.62 7.66997 368.5 7.49995 cv
368.54 7.74997 li
368.45 7.81998 368.37 7.89998 368.5 8.25001 cv
368.3 7.98999 li
368.23 8.07 368.17 8.15001 367.75 8.25001 cv
368.11 8.24001 li
368.05 8.33002 368 8.42003 367.75 8.25001 cv
367.951 8.50003 li
367.861 8.67994 367.79 8.85995 367.75 8.99996 cv
367.74 9.01997 li
367.69 9.18998 367.66 9.33999 367.75 9.75003 cv
367.75 51 li
367.62 51.29 li
367.639 51.45 367.68 51.59 367.75 51.75 cv
367.719 51.73 li
367.76 51.8601 367.799 51.9799 367.75 51.75 cv
367.861 52.1 li
367.91 52.221 367.98 52.33 367.75 52.5 cv
368.05 52.43 li
368.11 52.52 368.19 52.61 368.5 52.5 cv
368.26 52.7 li
368.339 52.779 368.429 52.859 368.5 53.2499 cv
368.509 52.931 li
368.599 52.99 368.69 53.06 368.5 53.2499 cv
368.78 53.11 li
368.87 53.17 368.96 53.2201 369.25 53.2499 cv
369.049 53.2599 li
369.23 53.35 369.41 53.42 369.25 53.2499 cv
369.581 53.471 li
369.75 53.52 369.91 53.55 370 53.2499 cv
370.049 53.57 li
370.32 53.61 370.51 53.61 370.75 53.2499 cv
389.5 53.2499 li
389.45 53.61 li
389.45 53.61 389.64 53.61 390.25 53.2499 cv
390.379 53.471 li
390.55 53.42 390.73 53.35 391 53.2499 cv
390.91 53.2599 li
391 53.2499 li
391.18 53.11 li
391.27 53.06 391.361 52.99 391.75 53.2499 cv
391.451 52.931 li
391.531 52.859 391.62 52.779 391.75 52.5 cv
391.691 52.7 li
391.769 52.61 391.849 52.52 391.75 52.5 cv
391.91 52.43 li
391.981 52.33 392.04 52.221 391.75 51.75 cv
392.099 52.1 li
392.16 51.9799 392.2 51.8601 392.5 51.75 cv
392.24 51.73 li
392.28 51.59 392.32 51.45 392.5 51 cv
392.34 51.29 li
392.36 51.141 392.37 50.97 392.5 51 cv
392.5 34.5 li
392.37 34.859 li
384.31 27.6899 375 17.98 369.25 7.49995 cv
369.269 7.31104 li
369.23 7.32994 369.191 7.34005 369.25 7.49995 cv
367.75 9.75003 mo
367.639 9.47099 li
367.59 9.74101 367.59 9.92004 367.75 9.75003 cv
367.75 51 mo
367.59 50.79 li
367.59 50.97 367.6 51.141 367.75 51 cv
389.91 53.57 mo
390.05 53.55 390.21 53.52 390.25 53.2499 cv
389.91 53.57 li
clp
gsave
366.84 54.36 mo
393.118 54.36 li
393.118 6.55801 li
366.84 6.55801 li
366.84 54.36 li
eclp
gsave
366.84 54.36 mo
393.119 54.36 li
393.119 6.55702 li
366.84 6.55702 li
366.84 54.36 li
clp
389.45 53.61 mo
389.45 53.6099 li
389.45 53.6099 389.451 53.6099 389.453 53.6098 cv
389.451 53.61 389.45 53.61 389.45 53.61 cv
370.239 53.5875 mo
370.179 53.5875 370.117 53.58 370.049 53.57 cv
370.025 53.4131 li
370.052 53.414 370.079 53.4144 370.105 53.4144 cv
370.438 53.4144 370.687 53.3446 370.75 53.2498 cv
370.75 53.2498 li
370.75 53.2499 370.75 53.2499 370.75 53.2499 cv
370.75 53.2499 li
370.75 53.25 370.75 53.25 370.75 53.25 cv
370.75 53.2501 370.75 53.2501 370.75 53.2502 cv
370.75 53.2502 li
370.57 53.52 370.418 53.5875 370.239 53.5875 cv
369.748 53.5021 mo
369.695 53.5021 369.639 53.4876 369.581 53.471 cv
369.32 53.2965 li
369.531 53.3598 369.738 53.3947 369.928 53.4081 cv
369.877 53.479 369.815 53.5021 369.748 53.5021 cv
369.292 53.3537 mo
369.25 53.3537 369.149 53.3099 369.049 53.2599 cv
369.187 53.2531 li
369.218 53.2642 369.249 53.2746 369.281 53.2845 cv
369.321 53.3343 369.319 53.3537 369.292 53.3537 cv
391.75 53.2499 mo
391.548 53.1151 391.427 53.069 391.344 53.063 cv
391.391 53.0328 391.439 53.0009 391.485 52.9673 cv
391.75 53.2499 li
389.5 53.2499 mo
388.75 53.2499 li
388.75 53.2498 li
389.5 53.2498 li
389.5 53.2499 li
368.5 53.2499 mo
368.69 53.06 368.599 52.99 368.509 52.931 cv
368.5 53.2499 li
368.429 52.859 368.339 52.779 368.26 52.7 cv
368.277 52.6855 li
368.534 52.9449 368.837 53.122 369.142 53.2366 cv
368.935 53.2062 368.858 53.1619 368.78 53.11 cv
368.5 53.2499 li
368.122 52.5112 mo
368.091 52.4888 368.07 52.4594 368.05 52.43 cv
367.75 52.5 li
367.98 52.33 367.91 52.221 367.861 52.1 cv
367.857 52.0861 li
367.933 52.2445 368.022 52.3857 368.122 52.5112 cv
367.758 51.8507 mo
367.758 51.848 367.757 51.8451 367.755 51.8421 cv
367.756 51.845 367.757 51.8479 367.758 51.8507 cv
392.347 51.8183 mo
392.356 51.7927 392.364 51.7666 392.373 51.7402 cv
392.5 51.75 li
392.439 51.7724 392.389 51.7952 392.347 51.8183 cv
367.658 51.4923 mo
367.641 51.4265 367.628 51.3602 367.62 51.29 cv
367.622 51.2846 li
367.632 51.356 367.644 51.4253 367.658 51.4923 cv
392.5 51.0006 mo
392.5 51.0005 392.5 51.0006 392.5 51.0004 cv
392.5 51 li
392.5 51 392.5 51 392.5 50.9999 cv
392.5 50.9998 392.5 50.9998 392.5 50.9998 cv
392.5 34.5006 li
392.5 34.5 li
392.5 51 li
392.5 51 li
392.5 51.0002 392.5 51.0004 392.5 51.0006 cv
367.75 50.9998 mo
367.59 50.7901 li
367.59 50.7901 367.59 50.79 367.59 50.79 cv
367.75 50.9997 li
367.75 50.9998 li
367.653 9.81648 mo
367.594 9.81647 367.603 9.66794 367.639 9.47099 cv
367.696 9.61483 li
367.701 9.70435 367.717 9.75632 367.737 9.75637 cv
367.741 9.75638 367.745 9.75423 367.75 9.74981 cv
367.75 9.74981 li
367.707 9.79609 367.675 9.81648 367.653 9.81648 cv
367.699 9.4476 mo
367.679 9.24965 367.705 9.13978 367.74 9.01997 cv
367.75 8.99996 li
367.79 8.85995 367.861 8.67994 367.951 8.50003 cv
367.75 8.25001 li
367.853 8.32 367.922 8.34593 367.972 8.34592 cv
368.043 8.34592 368.075 8.29296 368.11 8.24001 cv
367.75 8.25001 li
368.099 8.16683 368.2 8.09749 368.264 8.03047 cv
367.863 8.52653 367.724 9.10235 367.699 9.4476 cv
368.539 7.74306 mo
368.5 7.49995 li
368.555 7.57815 368.606 7.60557 368.655 7.60557 cv
368.695 7.60557 368.733 7.5873 368.77 7.56347 cv
368.687 7.62001 368.61 7.68016 368.539 7.74306 cv
368.805 7.54048 mo
368.81 7.53699 368.815 7.53347 368.82 7.52995 cv
368.5 7.49995 li
368.92 7.46995 369.031 7.41005 369.15 7.35005 cv
369.151 7.35169 li
369.026 7.40777 368.911 7.47123 368.805 7.54048 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[27.662 0 0 -47.803 366.84 297.443 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 35 
/M[20 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMtSn.Fa^h>m$W_>s6@r"6dGn.F7Pli?Me_>sQIo-3r0b5hMRo-29Vq>gL,o-2$OrXn`Gl2]K;
rXo/SoeXGbrXo/Ss"jC*_>sQIs!%+lg]6L;rXo/SoeXGbrXo/SoeZOH`W5uMs!%FupdEC-o`4t's!%Fu
pdDt!rXo/Sr\O=;mf:i;rXo/Sr\O=;_>sTJ!YHV#r\O=;_>sQIs!%Fus$Z]`i;hj;rXo/Sr\ORBqGkB4
rXo/Sr\ORBqc*Vr_>sQIs!%Fus$Z]`dfAk;rXo/Sr\ORBqGkB4rXo/Sr\ORBr`/o/oDm2;rXo/Sr\ORB
r`/o/`;ol;rXo/Sr\ORBr`/o/_>sQIs!%Fus$ZidrFY0lh#REds!%Fus$Zids(;:T_>sQIs!%Fu!^oFV
s&K)2s*&t~>

%%EndBinary
grestore
np
389.45 53.6099 mo
389.5 53.2499 li
389.5 53.2498 li
388.75 53.2498 li
388.91 53.0203 li
388.91 53.0203 391.66 53.0203 391.75 50.2503 cv
391.75 34.3044 li
391.957 34.4911 392.164 34.6757 392.37 34.859 cv
392.5 34.5006 li
392.5 50.9998 li
392.5 50.9998 li
392.49 50.9976 392.48 50.9965 392.472 50.9965 cv
392.368 50.9965 392.358 51.1526 392.34 51.29 cv
392.5 51.0004 li
392.5 51.0006 392.5 51.0005 392.5 51.0006 cv
392.32 51.4502 392.28 51.5901 392.24 51.73 cv
392.373 51.7402 li
392.364 51.7666 392.356 51.7927 392.347 51.8183 cv
392.183 51.9088 392.148 52.0044 392.099 52.1 cv
391.75 51.75 li
392.04 52.221 391.981 52.33 391.91 52.43 cv
391.75 52.5 li
391.849 52.52 391.769 52.61 391.691 52.7 cv
391.75 52.5 li
391.62 52.779 391.531 52.859 391.451 52.931 cv
391.485 52.9673 li
391.439 53.0009 391.391 53.0328 391.344 53.063 cv
391.337 53.0625 391.331 53.0622 391.324 53.0622 cv
391.259 53.0622 391.22 53.0881 391.18 53.11 cv
391 53.2499 li
390.73 53.35 390.55 53.42 390.379 53.471 cv
390.25 53.2499 li
389.683 53.5844 389.479 53.6082 389.453 53.6098 cv
389.451 53.6099 389.45 53.6099 389.45 53.6099 cv
370.105 53.4144 mo
370.079 53.4144 370.052 53.414 370.025 53.4131 cv
370 53.2499 li
369.979 53.3188 369.955 53.3702 369.928 53.4081 cv
369.738 53.3947 369.531 53.3598 369.32 53.2965 cv
369.25 53.2499 li
369.262 53.2628 369.272 53.2743 369.281 53.2845 cv
369.249 53.2746 369.218 53.2642 369.187 53.2531 cv
369.25 53.2499 li
369.21 53.2459 369.175 53.2414 369.142 53.2366 cv
368.837 53.122 368.534 52.9449 368.277 52.6855 cv
368.5 52.5 li
368.398 52.5362 368.321 52.5507 368.261 52.5507 cv
368.199 52.5507 368.155 52.5348 368.122 52.5112 cv
368.022 52.3857 367.933 52.2445 367.857 52.0861 cv
367.75 51.75 li
367.77 51.8444 367.775 51.8798 367.772 51.8798 cv
367.77 51.8798 367.765 51.8688 367.758 51.8507 cv
367.757 51.8479 367.756 51.845 367.755 51.8421 cv
367.745 51.8136 367.732 51.7724 367.719 51.73 cv
367.75 51.75 li
367.711 51.6602 367.681 51.5766 367.658 51.4923 cv
367.644 51.4253 367.632 51.356 367.622 51.2846 cv
367.75 51 li
367.711 51.0364 367.682 51.052 367.659 51.052 cv
367.595 51.052 367.59 50.9236 367.59 50.7901 cv
367.75 50.9998 li
367.75 51 li
367.75 14.4479 li
368.5 14.7478 li
368.5 50.2503 li
368.3 50.2803 li
368.3 53.0189 371.047 53.0203 370.75 53.2498 cv
370.75 53.2498 li
370.687 53.3446 370.438 53.4144 370.105 53.4144 cv
368.5 13.5088 mo
367.75 13.5088 li
367.75 9.75003 li
367.75 9.75011 367.75 9.75017 367.75 9.75026 cv
367.75 9.74981 li
367.745 9.75423 367.741 9.75638 367.737 9.75637 cv
367.717 9.75632 367.701 9.70435 367.696 9.61483 cv
367.75 9.75003 li
367.723 9.62895 367.707 9.53054 367.699 9.4476 cv
367.724 9.10235 367.863 8.52653 368.264 8.03047 cv
368.277 8.01691 368.288 8.00346 368.3 7.98999 cv
368.5 8.25001 li
368.37 7.89998 368.45 7.81998 368.54 7.74997 cv
368.539 7.74306 li
368.61 7.68016 368.687 7.62001 368.77 7.56347 cv
368.782 7.5562 368.793 7.54842 368.805 7.54048 cv
368.911 7.47123 369.026 7.40777 369.151 7.35169 cv
369.25 7.49995 li
369.191 7.34005 369.23 7.32994 369.269 7.31104 cv
369.25 7.49995 li
369.351 7.68417 369.453 7.8677 369.556 8.05144 cv
368.31 8.80469 368.346 10.4463 368.5 10.5002 cv
368.5 13.5088 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[27.662 0 0 -47.803 366.84 297.443 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 35 
/M[20 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;o:TdK&n>m=3(Tm=4^-dfAcb`;fmfmXN1UrdXEnjT+6>rdXEn`;omeon`O%`;omen;,Zrmf<?:n;,$`
rdXp'o8r_Ic2dinreU0-aT28>rdXp'o8pokrdXp'o8r5;g]7>'reUT9opNc!rdXp's,d8KpR/u#rdXp'
s,coAg]6U>rdXp's,coA`;omereUT9opPaYaT2<ireUT9rgEPTc2dV>rdXp's,d5Jpn>Y,rdXp's,d5J
pn@-Vf)Yf"reUT9rgEPT`;omes+g`4OHBI0pn>Y,rdXp's,d5Js.T:hi;hs>rdXp's,d5Js.T:h`;ome
reUT9rgEe[ql0Xr`;omereUT9rgEe[qPr!Eo)Sc>reUT9rgEe[qPqL7rdXp's,d5Js.TFlrNc%qdK'8r
reUT9rgEe[ri5q&`;omereUT9rgEe[ri5q&`;omereUT9rgEe[ri5q&joF<>rdXp's,d5Js.TFls0D[:
`;omereUT9rg<h]TrS-ms0D[:J,~>

%%EndBinary
grestore
np
370.75 53.2502 mo
370.75 53.2502 li
370.75 53.2501 370.75 53.2501 370.75 53.25 cv
370.75 53.2501 370.75 53.2501 370.75 53.2502 cv
388.75 53.2499 mo
370.75 53.2499 li
370.75 53.2499 370.75 53.2499 370.75 53.2498 cv
371.047 53.0203 368.3 53.0189 368.3 50.2803 cv
368.5 50.2503 li
368.5 14.7478 li
368.509 14.7515 li
368.509 47.4787 li
369.546 46.4908 li
389.509 46.4908 li
389.509 47.2915 li
390.662 46.3693 li
390.809 46.2893 li
390.884 46.2138 li
391.024 46.0738 li
390.734 45.7498 li
390.991 45.7498 li
390.991 33.6182 li
391.245 33.8493 391.498 34.0782 391.75 34.3044 cv
391.75 50.2503 li
391.66 53.0203 388.91 53.0203 388.91 53.0203 cv
388.75 53.2498 li
388.75 53.2499 li
378.72 51.3476 mo
379.097 51.7901 379.655 52.0401 380.27 52.0401 cv
380.27 52.04 li
380.877 52.0397 381.426 51.8004 381.857 51.3758 cv
381.937 51.3003 382.012 51.2161 382.081 51.1247 cv
382.39 50.7304 382.617 50.2227 382.728 49.6295 cv
382.789 49.5607 li
382.74 49.5607 li
382.744 49.5405 382.747 49.5204 382.75 49.5 cv
382.75 49.5 li
382.75 49.5 li
382.75 49.5 li
382.75 49.5 li
382.75 49.4997 li
382.682 49.2399 382.553 48.9739 382.376 48.7258 cv
383.194 48.0635 li
383.194 48.061 li
381.712 48.061 li
381.305 47.7702 380.81 47.5801 380.27 47.5801 cv
380.5 47.2501 li
379.04 47.5801 378.04 48.5801 378.04 49.8101 cv
378.25 49.5002 li
378.25 49.5002 378.25 49.5002 378.25 49.5001 cv
378.25 49.5003 378.25 49.5004 378.25 49.5005 cv
378.04 49.81 li
378.04 50.4236 378.289 50.9801 378.72 51.3476 cv
380.469 51.7889 mo
380.5 51.7502 li
380.5 51.7502 380.5 51.7502 380.5 51.7502 cv
380.469 51.7889 li
382.703 49.5607 mo
382.703 49.5607 li
382.75 49.5001 li
382.75 49.5 382.75 49.4999 382.75 49.4999 cv
382.75 49.4999 382.75 49.4999 382.75 49.5 cv
382.75 49.5 li
382.703 49.5607 li
372.97 13.5088 mo
369.62 13.5088 li
368.51 12.028 li
368.509 12.028 li
368.509 13.5088 li
368.5 13.5088 li
368.5 10.5002 li
368.346 10.4463 368.31 8.80469 369.556 8.05144 cv
370.594 9.89899 371.741 11.7211 372.97 13.5088 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[26.2789 0 0 -47.803 366.84 297.443 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 35 
/M[19 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mL&@emJu\CmL&@eoDnagmdBKMmK`.[mdBKMq?QZumJu\CmL&@emJu\C!"/`5nHnUgmK!7SnaHGanHnUg
o)S[grpK=FrX/0%mK`.[rpK=FrX/0%q$6TumK!7SnaHGanHnUgmK!7SnaHJb!"/6&qZl`tmK!7SrpTLK
rX/0%qZl`tnc8UgrpKdSo^MhenHo'toEO^`rpKdSo^MhenHo'trW`*$mK!7SrpTLKrX/Q0p'CO#oEO^`
rpKdSs7#aPrX/Q0p'CO#oEO^`rpKdSs7#aPrX/Q0p'CO#oEOgcrW)rcrpTmVp@8+hr!E'&qZl`tmK!7S
rpTmVp@8+hr!E'&qZm'(p]g-drpKdSs7#aPrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX&W3r<`H/o*>0t
q$$0drpKdSs7$$Xq=FRmr!E?.o*>0tq$$6frrE&drpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgU
rX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpg$[qt0jprsAZ2rWr*#r!)s#
mK!7SrpTmVrpg$[qt0jpr!E?.o*>0tq$$3e!!*#drpTmVrpg$[qt0jpr!E?.o*>0tq$$0drpKdSs7$$X
s7?-[rX/Q0rWr*#r!!-)q??9erpKdSs7$$Xs7?-[rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^
rq66trX&T2rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!33*qZm$'r!!'&mK!7SrpTmV
rpg$[rq-3_rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!*9-"pOl/r!*0)rWW9(
mK!7SrpTmVrpg$[rq$9bp%J@lr!E?.r!*9-"pOl/r!*'&rWMWhrpKdSs7$$Xs7?6^!ql6[J,~>

%%EndBinary
grestore
np
380.27 52.0401 mo
379.655 52.0401 379.097 51.7901 378.72 51.3476 cv
379.05 51.6297 379.488 51.8005 380.003 51.8005 cv
380.162 51.8005 380.328 51.7843 380.5 51.75 cv
380.5 51.7502 li
380.5 51.7502 380.5 51.7502 380.5 51.7502 cv
380.469 51.7889 li
380.269 52.04 li
380.269 52.04 380.27 52.04 380.27 52.04 cv
380.27 52.0401 li
381.857 51.3758 mo
381.935 51.2982 382.01 51.2144 382.081 51.1247 cv
382.012 51.2161 381.937 51.3003 381.857 51.3758 cv
380.5 51 mo
380.458 50.9398 li
380.641 50.9398 li
380.594 50.9608 380.547 50.9808 380.5 51 cv
378.979 50.331 mo
378.585 50.1047 378.313 49.7954 378.25 49.5 cv
378.12 49.2299 li
378.08 49.3812 378.053 49.5324 378.15 49.5324 cv
378.174 49.5324 378.207 49.5225 378.25 49.5002 cv
378.04 49.8101 li
378.04 48.5801 379.04 47.5801 380.5 47.2501 cv
380.27 47.5801 li
380.81 47.5801 381.305 47.7702 381.712 48.061 cv
379.339 48.061 li
379.143 48.4233 li
379.045 48.6057 li
378.791 48.8795 li
378.791 49.3853 li
378.935 49.5713 li
379.061 49.7353 li
379.061 50.1207 li
378.979 50.331 li
382.703 49.5607 mo
382.525 49.5607 li
382.541 49.512 382.575 49.4812 382.642 49.4812 cv
382.671 49.4812 382.706 49.4871 382.75 49.4999 cv
382.75 49.4999 382.75 49.5 382.75 49.5001 cv
382.703 49.5607 li
382.29 49.5607 mo
381.94 49.5607 li
381.94 49.3333 li
381.864 49.1849 li
381.848 49.1538 li
382.376 48.7258 li
382.553 48.9739 382.682 49.2399 382.75 49.4997 cv
382.43 49.2299 li
382.394 49.3444 382.347 49.4548 382.29 49.5607 cv
380.505 49.5607 mo
380.44 49.5607 li
380.44 49.4958 li
380.444 49.4995 li
380.505 49.5607 li
378.25 49.5005 mo
378.25 49.5004 378.25 49.5003 378.25 49.5001 cv
378.25 49.5001 378.25 49.5 378.25 49.5 cv
378.25 49.5005 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -6.829 376.522 257.835 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!Wi~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYC~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.27 52.04 mo
380.469 51.7889 li
380.5 51.7502 li
380.619 51.7844 380.738 51.8006 380.856 51.8006 cv
381.223 51.8006 381.574 51.6412 381.857 51.3758 cv
381.426 51.8004 380.877 52.0397 380.27 52.04 cv
378.72 51.3476 mo
378.289 50.9801 378.04 50.4236 378.04 49.81 cv
378.25 49.5005 li
378.145 50.2703 378.342 50.9052 378.72 51.3476 cv
382.081 51.1247 mo
382.333 50.7873 382.495 50.35 382.509 49.8751 cv
382.728 49.6295 li
382.617 50.2227 382.39 50.7304 382.081 51.1247 cv
382.74 49.5607 mo
382.703 49.5607 li
382.75 49.5 li
382.747 49.5204 382.744 49.5405 382.74 49.5607 cv
378.25 49.5002 mo
378.25 49.5001 li
378.25 49.5001 li
378.25 49.5002 378.25 49.5002 378.25 49.5002 cv
382.75 49.5 mo
382.75 49.5 li
382.75 49.5 li
382.75 49.5 li
382.75 49.5 mo
382.75 49.4999 382.75 49.4999 382.75 49.4999 cv
382.75 49.4998 382.75 49.4998 382.75 49.4997 cv
382.75 49.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -5.4632 376.522 256.469 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.269 52.04 mo
380.469 51.7889 li
380.27 52.04 li
380.27 52.04 380.269 52.04 380.269 52.04 cv
380.856 51.8006 mo
380.738 51.8006 380.619 51.7844 380.5 51.7502 cv
380.5 51.75 li
380.328 51.7843 380.162 51.8005 380.003 51.8005 cv
379.488 51.8005 379.05 51.6297 378.72 51.3476 cv
378.342 50.9052 378.145 50.2703 378.25 49.5005 cv
378.25 49.5 li
378.25 49.5 378.25 49.5001 378.25 49.5001 cv
378.25 49.5001 378.25 49.5001 378.25 49.5001 cv
378.25 49.5002 li
378.207 49.5225 378.174 49.5324 378.15 49.5324 cv
378.053 49.5324 378.08 49.3812 378.12 49.2299 cv
378.25 49.5 li
378.313 49.7954 378.585 50.1047 378.979 50.331 cv
378.968 50.3603 li
379.413 50.5332 li
378.975 50.9393 li
379.309 51.299 li
380.082 51.299 li
380.222 50.9398 li
380.458 50.9398 li
380.5 51 li
380.547 50.9808 380.594 50.9608 380.641 50.9398 cv
381.247 50.9398 li
381.415 51.0996 li
381.582 50.9345 li
381.604 50.9068 li
381.775 50.6985 li
382.509 49.8751 li
382.495 50.35 382.333 50.7873 382.081 51.1247 cv
382.01 51.2144 381.935 51.2982 381.857 51.3758 cv
381.574 51.6412 381.223 51.8006 380.856 51.8006 cv
382.525 49.5607 mo
382.29 49.5607 li
382.347 49.4548 382.394 49.3444 382.43 49.2299 cv
382.75 49.4997 li
382.75 49.4998 382.75 49.4998 382.75 49.4999 cv
382.706 49.4871 382.671 49.4812 382.642 49.4812 cv
382.575 49.4812 382.541 49.512 382.525 49.5607 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -5.4632 376.522 256.469 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
382.51 49.81 mo
382.51 49.8099 382.51 49.8098 382.51 49.8097 cv
382.703 49.5607 li
382.703 49.5607 li
382.51 49.81 li
382.728 49.6295 mo
382.732 49.6068 382.736 49.5837 382.74 49.5607 cv
382.789 49.5607 li
382.728 49.6295 li
382.376 48.7258 mo
382.199 48.4783 381.974 48.2486 381.712 48.061 cv
383.194 48.061 li
383.194 48.0635 li
382.376 48.7258 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.1493 0 0 -5.4632 380.671 257.835 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-~>
<~!WiE)!WiE)!WiE)~>
<~!!!!!!!!!!!!!!!~>
<~84Z9B84Z9B85rPf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.641 50.9398 mo
380.458 50.9398 li
380.269 50.67 li
379.783 50.67 379.332 50.5338 378.979 50.331 cv
379.061 50.1207 li
379.061 49.7353 li
378.935 49.5713 li
378.791 49.3853 li
378.791 48.8795 li
379.045 48.6057 li
379.143 48.4233 li
379.339 48.061 li
381.712 48.061 li
381.974 48.2486 382.199 48.4783 382.376 48.7258 cv
381.848 49.1538 li
381.864 49.1849 li
381.94 49.3333 li
381.94 49.5607 li
382.29 49.5607 li
381.957 50.1784 381.295 50.6484 380.641 50.9398 cv
380.44 49.5607 mo
380.505 49.5607 li
380.444 49.4995 li
380.44 49.4958 li
380.44 49.5607 li
382.51 49.8097 mo
382.51 49.7154 382.503 49.6233 382.525 49.5607 cv
382.703 49.5607 li
382.51 49.8097 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.5324 0 0 -5.4632 377.905 257.835 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%~>
<~!<E3%!<E3%!<E3%!<E3%~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~91qoN91qoN91qoN='&I)~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
382.509 49.8751 mo
382.509 49.8535 382.51 49.8318 382.51 49.8101 cv
382.51 49.8097 li
382.51 49.8098 382.51 49.8099 382.51 49.81 cv
382.703 49.5607 li
382.74 49.5607 li
382.736 49.5837 382.732 49.6068 382.728 49.6295 cv
382.509 49.8751 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.1493 0 0 -4.0974 380.671 256.469 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<~>
<~!<E3%!<E3%!<~>
<~!!!!!!!!!!!!~>
<~4$,Mc4$,Mc3r~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.082 51.299 mo
379.309 51.299 li
378.975 50.9393 li
379.413 50.5332 li
378.968 50.3603 li
378.979 50.331 li
379.332 50.5338 379.783 50.67 380.269 50.67 cv
380.458 50.9398 li
380.222 50.9398 li
380.082 51.299 li
381.415 51.0996 mo
381.247 50.9398 li
380.641 50.9398 li
381.295 50.6484 381.957 50.1784 382.29 49.5607 cv
382.525 49.5607 li
382.503 49.6233 382.51 49.7154 382.51 49.8097 cv
382.51 49.8101 li
382.51 49.8318 382.509 49.8535 382.509 49.8751 cv
381.775 50.6985 li
381.604 50.9068 li
381.582 50.9345 li
381.415 51.0996 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.5324 0 0 -5.4632 377.905 256.469 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~4?P_g4?P_g4?P_g4?P_g~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.509 45.0088 mo
369.991 45.0088 li
369.991 15.0468 li
370.047 14.9909 li
374.013 14.9909 li
378.62 21.3918 384.205 27.2996 389.509 32.252 cv
389.509 45.0088 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[22.1296 0 0 -32.7792 368.223 290.614 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 24 
/M[16 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-
"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-
~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W,
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~d*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldp
d*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'
d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3
d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oC
d*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPO
d*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPR
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
368.5 14.7478 mo
367.75 14.4479 li
367.75 13.5088 li
368.5 13.5088 li
368.5 14.7478 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.1493 0 0 -4.0974 366.84 291.98 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~^V@Ou^V@Ou^A~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
368.509 47.4787 mo
368.509 14.7515 li
368.5 14.7478 li
368.5 13.5088 li
368.509 13.5088 li
368.509 12.028 li
368.51 12.028 li
369.62 13.5088 li
372.97 13.5088 li
373.14 13.7563 373.312 14.0037 373.485 14.2498 cv
369.25 14.2498 li
369.6 14.3899 li
369.46 14.5299 li
369.25 14.2498 li
369.25 45.7498 li
390.25 45.7498 li
390.36 45.6898 li
390.5 45.5498 li
390.25 45.7498 li
390.25 32.9395 li
390.498 33.168 390.745 33.394 390.991 33.6182 cv
390.991 45.7498 li
390.734 45.7498 li
391.024 46.0738 li
390.884 46.2138 li
390.809 46.2893 li
390.662 46.3693 li
389.509 47.2915 li
389.509 46.4908 li
369.546 46.4908 li
368.509 47.4787 li
369.25 45.7498 mo
369.25 45.7498 li
369.46 45.5498 li
369.6 45.6898 li
369.25 45.7498 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[24.8958 0 0 -38.2424 366.84 293.346 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 18 
/H 28 
/M[18 0 0 -28 0 28 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 18 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 18 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 18 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 18 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mfi._mf;hMmfi._mf3@]s7Z$Xmfi._mf<@\o(VSVmf`XjnGrR^o(VSVmf`(Zrq>pWmfi[nnc\C]rq>pW
qZZEko`OX_rq>pWr<<3)mf`:cmf<@\o(W"bmf`:cmf<@\s7c0[qZZEko`OX_rq>pWqZZEko`P'ko`5!b
r:fs\qZZEko`OX_rq?9ap\=UhmfWUmp&ja`rq?9ap\=Uhmf`:cmf<@\r:fs\qZ[!&nHALemf<@\r:fs\
qZZEko`OX_rq?9a!;Q?aqZZEko`OX_rq?9ap\=Uhmf`:cpAk!hrq?9ap\=Uhmf`:cmf<@\r:fs\qZZEk
qucctmf<@\r:fs\qZZg!qucg!o`OX_rq?9ar:p3cqZZj"!!N3%qZQQomf<@\r:g-ar;$3nq?6]uqZQQo
mf<@\r:g-ar;$3nq?6]uqZQQomf<@\r:g-ar;$3nq?6]uqZQQoo)S^hrq?9ar:p3cqZZg!qucg!pB1Es
mf<@\r:g-arqZTjqZZg!qucg!p]CR"!Wqfjrq?9ar:p9es8)Trq?6]uqZQWqrrVWhrq?9ar:p9es8%6
~>

%%EndBinary
grestore
np
390.25 45.7498 mo
390.25 45.7498 li
390.25 45.7498 mo
369.25 45.7498 li
369.6 45.6898 li
369.46 45.5498 li
369.25 45.7498 li
369.25 14.2498 li
369.46 14.5299 li
369.6 14.3899 li
369.25 14.2498 li
373.485 14.2498 li
373.659 14.4972 373.836 14.7449 374.013 14.9909 cv
370.047 14.9909 li
369.991 15.0468 li
369.991 45.0088 li
389.509 45.0088 li
389.509 32.252 li
389.756 32.4829 390.004 32.7127 390.25 32.9395 cv
390.25 45.7498 li
390.25 45.7498 mo
390.5 45.5498 li
390.36 45.6898 li
390.25 45.7498 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[23.5127 0 0 -34.145 368.223 290.614 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*!s8W-
!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*
!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)
!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*
!WiE)!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!W~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3&
!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)!<E3%
!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)
!<E3%!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~kND*ol07Hsl07Hsl07Hsl0%6ol07Hsl07Hsl07Hsl07Bol07Hsl07Hsl07Hsl07HqkNV6ql07Hsl07Hs
l07HskND*ol07Hsl07Hsl07Hsl0%6ol07KulK[["lK[["lK[Qql07HtlK[["lK[["lK[ZtkNV6qlK[["
lK[["lK[["kND*ol0@R!lK[["lK[["lK@?pl07Kum-O**m-O**m-Noul07HtlKmm(m-O**m-O*%kNV6q
lK[a&m-O**m-O**kND*ol0@R#m-O**m-O**m-!Qrl07Kum-O**m-O**m-Noul07HtlKmm(mHs<.mHs<(
kNV6qlK[a&m-X3-mHs<.kND*ol0@R#m-O-,mHs<.mH<Zsl07Kum-O*+mHs<.mHs*"l07HtlKmm(mHs<.
mHs<(kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`6n)rlul07Kum-O*+mI0N4n*fH&l07HtlKmm(
mHsB2n*f`.kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`8nG~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.91 53.57 mo
389.912 53.5686 li
389.937 53.5648 389.963 53.5607 389.989 53.5563 cv
389.963 53.5622 389.936 53.5662 389.91 53.57 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.1493 0 0 -4.0974 388.97 253.737 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.912 53.5686 mo
390.25 53.2499 li
390.217 53.4697 390.105 53.5305 389.989 53.5563 cv
389.963 53.5607 389.937 53.5648 389.912 53.5686 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.1493 0 0 -4.0974 388.97 253.737 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
<~It)rtIt)rtIf~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
370 45.75 mo
390.25 45.75 li
390.25 14.25 li
370 14.25 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
gsave
13.75 93.7499 mo
13.95 93.79 li
18.8749 99.36 25.621 103.17 33.088 104.59 cv
33.25 104.25 li
64.0001 86.9999 li
45.25 76.5 li
13.75 93.7499 li
clp
13.75 104.59 mo
64 104.59 li
64 76.5 li
13.75 76.5 li
cp
level3{
gsave
clp
[1 0 0 -1 -23 318 ]ct
/0 
<<
/ShadingType 2 
/BBox [36.75 213.41 87 241.5 ] 
/ColorSpace /0 /CSA get_res
/Coords [62.15 212.66 62.15 242.34 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzz!!!$"!<<0$!<E6%!<E9&!WiK)!WiN*!s/W+!s8`-!s8c.!s8f/"9Sr1"9]&3"9])4"9],5"U,>8"U
,A9"pPS<"pPV=#6th@#RD%C#RD(D#mh:G#mh=H$47OK$OR[M$O[gP$k+$S%1F0U%1O9W%LjEY%LsN[%h
9Z]%hBc_&.]oa&.g#c&J-/e&J68g&eQGj&eZPl'+u\n',)ep'GDqr'GN%t'bi2!()8D$()8G%(D\Y((D
\_*(`+q-(`5%/)&P11)&Y:3)AtF5)B(O7)]C[9)]Lg<*#gs>*#q'@*#q*A*?@<D*Z[HF~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 -23 318 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8Z/"9\i1"9\l3"U,&5"U,)
7"pP;;#6tJ=#6tM?#RC\A#RC_C#mgqG$47+I$47.K$O[@O$k*OQ$k*RS%1NaU%1NaV%LrsY%LrsZ%hB0
]%hB0^&.fBa&.fBb&J5Te&J5Tf&eYfi&eYfj',)#m',)#n'GM5r'bqGu'bqGu()@Z$()@Z$(Ddl((Ddl
((`4),(`4),)&X;0)&X;0)B'M4)B'M4)]K_8)]K_8)]K_8*#oq<*??.@~>
<~zzzzzz!!**$!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8Z/"9\i1"9\l3"U,&5"U,)
7"pP;;#6tJ=#6tM?#RC\A#RC_C#mgnE#mgqG$47.K$O[=M$O[@O$k*OQ$k*OR%1NaU%1NaV%LrsY%Lrs
Z%hB0]%hB0^&.fBa&.fBb&J5Te&J5Tf&eYfi&eYfj',)#m',)#n'GM5q'GM5q'bqGu'bqGu()@Z$(Ddl
((Ddl((`4),(`4),)&X;0)&X;0)B'M4)B'M4)]K_8)]K_8*#oq<*#oq<~>
<~zzz!!**$!<E3%!<N<(!WrN,!sA`0"9\i1"9er4"U5/8"pYA<#7(S@#RLeD#mq"H$4@4L$O[@O$k*RS%1
NdW%Ls![%hB3_&.fEc&J5Wg&eYik',)&o'GM8s'bqK"()@]&(`4,.)&X>2)B'P6)]Kb:*#oq=*??.A*Z
c@E+!2RI+<VdM+X&!Q+sJ3U,9nEY,UF``-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P+/hSb/0/
#"50ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ioY3]];_4$,Mc4?P_g4Ztqk5!D.o~>
0 ]
>>
62.15 212.66 62.15 242.34 [36.75 213.41 87 241.5 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
.36 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
33.25 104.25 mo
64 87 li
45.25 76.5 li
13.75 93.75 li
13.95 93.79 li
18.875 99.36 25.621 103.17 33.088 104.59 cv
1 /3 /CSD get_res sepcs
0 sep
@
gsave
13.75 93.7499 mo
13.75 138.75 li
13.961 138.431 li
18.96 143.76 25.711 147.279 33.088 148.41 cv
33.25 148.5 li
33.25 104.25 li
33.088 104.59 li
25.608 103.18 18.856 99.35 13.961 93.74 cv
13.75 93.7499 li
clp
gsave
13.211 149.16 mo
33.838 149.16 li
33.838 92.99 li
13.211 92.99 li
13.211 149.16 li
eclp
gsave
13.2109 205.331 mo
33.8376 205.331 li
33.8376 149.16 li
13.2109 149.16 li
13.2109 205.331 li
clp
13.2109 149.16 mo
33.8375 149.16 li
33.8375 205.331 li
13.2109 205.331 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 304 ]ct
[20.6266 0 0 -56.1708 13.2109 154.84 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
33.8376 205.331 mo
54.4642 205.331 li
54.4642 149.16 li
33.8376 149.16 li
33.8376 205.331 li
clp
33.8375 149.16 mo
54.4642 149.16 li
54.4642 205.331 li
33.8375 205.331 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 304 ]ct
[20.6266 0 0 -56.1708 33.8375 154.84 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
13.2109 149.16 mo
33.8376 149.16 li
33.8376 92.9892 li
13.2109 92.9892 li
13.2109 149.16 li
clp
33.25 148.5 mo
33.088 148.41 li
25.711 147.279 18.96 143.76 13.961 138.431 cv
13.75 138.75 li
13.75 93.7499 li
13.961 93.74 li
18.856 99.35 25.608 103.18 33.088 104.59 cv
33.25 104.25 li
33.25 148.5 li
17.051 107.01 mo
16.75 107.25 li
16.75 110.25 li
17.051 110.48 li
20.807 113.62 25.2119 115.94 29.975 117.31 cv
30.25 117 li
30.25 114 li
29.975 113.84 li
25.225 112.439 20.826 110.11 17.051 107.01 cv
22.0368 106.008 mo
21.5813 106.008 21.1223 106.181 20.6982 106.536 cv
20.6805 106.559 li
20.6089 106.702 20.5739 106.848 20.574 106.992 cv
20.5845 107.787 21.583 108.45 23.0367 108.65 cv
23.038 108.65 li
23.2988 108.68 23.5657 108.695 23.8327 108.695 cv
24.0998 108.695 24.3669 108.68 24.6282 108.65 cv
24.6282 108.65 li
24.6794 108.617 li
24.6862 108.557 li
24.1228 106.945 23.1069 106.01 22.0376 106.008 cv
22.0373 106.008 22.0371 106.008 22.0368 106.008 cv
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 304 ]ct
[20.6266 0 0 -56.1708 13.2109 211.011 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
gsave
33.8376 149.16 mo
54.4642 149.16 li
54.4642 92.9892 li
33.8376 92.9892 li
33.8376 149.16 li
clp
33.8375 92.9892 mo
54.4642 92.9892 li
54.4642 149.16 li
33.8375 149.16 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 304 ]ct
[20.6266 0 0 -56.1708 33.8375 211.011 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 42 
/M[15 0 0 -42 0 42 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
nLa>`!%mdm!%mdl!A,en.02"MoI'bm.OXm9!\GlLod'Yk.OY0?q'6%o.OQJ7+p0DH-R8=.""buM,PE5_
/Li+m+SQr\/Li+m+SQo[/Li+m+SQl[/Li+m+<C4s"YD2O,9S$&)[765.OQG`*V^NW/Li+m+<;Br)$VZB
-R0`S)Yk3T/Li+m+<;@:qA';f.OQG`*?#aj'aH<?-R0`S)Ai5a#V@MR,9S!F(DHZY#V@MR,9S!F(DHZX
"YD2O,9S!.)Aa(a&.'p<-R0`S)Aa%ur!s)c.OQG`*?#_-&H!"E/Li+m+<;@:'+k'N$8!_T,9S!F(D@>h
r<s#b.OQG`*?#_-&.SRG$8!_T,9S!F(D@>hr<`oa.OQG`*?#_-&.K!G#n/C8-R0`S)Aa%u%13Ad#RE"3
-R0`S)Aa%u%13=E"t_;P,9S!F(D@>h$3p_</Li+m+<;@:'+bT[#6Y/].OQG`*?#_-&.JsO!s1&(-R0`S
)Aa%u%13=B!A,cK,9S!F(D@>h$3pY5/Li+m+<;@:'+bT[#6OrX.OQG`*?#_-&.JsO!s!i~>

%%EndBinary
grestore
np
grestore
grestore
grestore
33.0879 104.59 mo
25.6079 103.18 18.8559 99.3498 13.9609 93.7398 cv
13.7499 93.7498 li
13.7499 138.75 li
13.9609 138.43 li
18.9599 143.76 25.7109 147.28 33.0879 148.41 cv
33.2499 148.5 li
33.2499 104.25 li
.326848 .461494 .829587 .102419 cmyk
@
gsave
33.25 104.25 mo
33.25 148.5 li
64.0001 131.25 li
64.0001 86.9999 li
33.25 104.25 li
clp
32.326 149.11 mo
65.1 149.11 li
65.1 86.337 li
32.326 86.337 li
cp
gsave
/5 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 63 
/Lookup <~
!!**$!!*-&!!*-'!<NE+!s8i1"9f,5"pYS;#6tb>#RM(C#mh7F$4.CH$O[dO$k4-U%1X?X&.]i_&.fo`
&J62e&eQDi'+uVl'GMtr()AG$(D\S&(Dnh+)&Y./)&b:2)]C[9*#ps=*ZdED+!<cJ+<`uM+sTJU,9o_Z
,pc1a-7;Rh-n%ml.4\?t/1jp'/MC6,0/$T20/6i70f!2<0f3D@1,WVC2)].K2E5LQ2`Y^T3')'[3BM9^
3BVEa4$Ioi4?n,l4[FMs5!sl$5XU/(5spA-6:Qb36Ulq66V*4<77rXB7SK$J7noBQ85>TU8l2)]92_Je
~>
>>
/CSD add_res
grestore
/108983948.0 
<<
/ID /108983948.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 24 46 ] 
/XStep 24 
/YStep 46 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 46 mo
24 46 li
24 0 li
0 0 li
cp
false sop
/5 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 304 ]ct
[24 0 0 46 0 258 ]ct
snap_to_device
<<
/T 1
/W 24 
/H 46 
/M[24 0 0 -46 0 46 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~J.LR73$]7K"!9j<:q1$o'Kh1>@So+\5^GMN7Uo<*jC!9pO@Wn[3@'-$3L!-I;Rp2rF?LSeAlC^ce8[,\
:1mM9jS!IS)Gk*H3[G>Q58hm`<4ZWrO"V@"C/m<k9P%!@N%7o>j`\19T8TdO4!g340<e*g[_$+Zh/'H!
"a<&)f'RMo>\E&sjnAY&^0YY$d7+o]LVsN'3%D_9*KS9P7/4CD]M"U8Aog:TV@6%gctIN(b[gWAVpoI(
,#'C`H6V!XG$?P1G-E+EDKf<I%bF?,&+FgK4r3lsK+E!J>eWaYNOGI73aFqBE')A&CP.&LkB&Z7kO6Hb
Y:#[\)Xqoh@@q2Ah<=3FlN)L5fBO4JG]gi@kP+iN4YMtI$:'\(#R\?XMkHDgE,6O!_%4`=X9()W/-pi(
Mus6=TS,H=Je6-=r@hW$9bW*J'I<c+i+u[8`A#dUnH!X2C'I-^*%%;/;=&WL78VaW"A"&.'-KbA,-V0k
J38l4`Gj`C.=fioK,M)4,df,D&_'o(J7'3#/kQ`i>QFh'*3CL,Bm9UXbu3o&nK8q~>
/LZWDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/108983948.0 /Pattern get_res
[1.3656 0 0 -1.36459 32.3262 149.11 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
33.25 104.25 mo
33.25 148.5 li
64 131.25 li
64 87 li
33.25 104.25 li
cp
1 /3 /CSD get_res sepcs
0 sep
@
1.5 lw
64 87 mo
45.25 76.5 li
13.75 93.75 li
13.75 138.75 li
13.961 138.43 li
18.96 143.76 25.711 147.28 33.088 148.41 cv
33.25 148.5 li
64 131.25 li
64 87 li
1 /3 /CSD get_res sepcs
1 sep
@
gsave
22.052 120.9 mo
21.29 121.18 20.985 122.259 21.371 123.32 cv
21.757 124.38 22.688 125.02 23.45 124.74 cv
24.212 124.46 24.5171 123.38 24.131 122.32 cv
23.806 121.428 23.0959 120.834 22.425 120.834 cv
22.298 120.834 22.173 120.855 22.052 120.9 cv
clp
21.6221 126.21 mo
25.7911 124.69 li
23.8801 119.44 li
19.7111 120.96 li
cp
gsave
grestore
/108984144.0 
<<
/ID /108984144.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 8 mo
8 8 li
8 0 li
0 0 li
cp
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8 0 0 8 0 296 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~_o'C0_o'C0YHP.5YHP.5R$a8.R$a8EI=6NlI=7KdC2.KuC42JQ:JXb^C42JQ1G^g_C42JQ(`5&)C42JQ
~>
<~.Olnt.Olnt+<VdL+<VdL'GM5q'GM6(%1NaU%1O!o$47+I$4R[l"U,&5$4R[l!s8W/$4R[l!<E9+$4R[l
~>
<~]tM+m]tM+mUnjf^Unjf^M2@(GM2@(bDJj?0DJk<,?!U`A?#GLp6UO4.?#GLp.k<,;?#GLp',)l`?#GLp
~>
<~"pP89"pP89!WiE)!WiE)!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#!!!!!!!!!#
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/108984144.0 /Pattern get_res
[.521194 -.189697 -.238846 -.656235 21.6221 126.21 ]make_pattern set_pattern
ef
2 vmreclaim
grestore
.36 lw
24.1309 122.32 mo
23.7449 121.26 22.8139 120.62 22.0519 120.9 cv
21.2899 121.18 20.9849 122.26 21.3709 123.32 cv
21.7569 124.38 22.6879 125.02 23.4499 124.74 cv
24.2119 124.46 24.5169 123.38 24.1309 122.32 cv
cp
@
.6 lw
17.0508 129.91 mo
20.9048 133.17 25.3078 135.49 29.9748 136.74 cv
17.0508 132.58 mo
20.9048 135.84 25.3078 138.16 29.9748 139.41 cv
17.0508 135.25 mo
20.9048 138.51 25.3078 140.83 29.9748 142.08 cv
@
16.9951 103.36 mo
20.7031 106.56 25.1241 108.89 29.9181 110.19 cv
30.2751 110.11 30.4991 109.77 30.4191 109.43 cv
30.3631 109.19 30.1681 109 29.9181 108.95 cv
25.2231 107.7 20.8891 105.44 17.2541 102.32 cv
17.0791 102.17 16.8081 102.18 16.6471 102.35 cv
16.5631 102.43 16.5231 102.55 16.5371 102.67 cv
16.5651 102.96 16.7351 103.22 16.9951 103.36 cv
ef
.36 lw
16.9951 103.36 mo
20.7031 106.56 25.1241 108.89 29.9181 110.19 cv
30.2751 110.11 30.4991 109.77 30.4191 109.43 cv
30.3631 109.19 30.1681 109 29.9181 108.95 cv
25.2231 107.7 20.8891 105.44 17.2541 102.32 cv
17.0791 102.17 16.8081 102.18 16.6471 102.35 cv
16.5631 102.43 16.5231 102.55 16.5371 102.67 cv
16.5651 102.96 16.7351 103.22 16.9951 103.36 cv
cp
@
gsave
20.743 106.59 mo
20.309 107.46 21.34 108.35 23.0459 108.58 cv
23.562 108.64 24.103 108.64 24.62 108.58 cv
24.062 106.982 23.062 106.077 22.038 106.077 cv
21.6 106.077 21.158 106.242 20.743 106.59 cv
clp
gsave
19.895 109.38 mo
25.37 109.38 li
25.37 105.331 li
19.895 105.331 li
19.895 109.38 li
eclp
gsave
14.4197 113.429 mo
19.895 113.429 li
19.895 109.38 li
14.4197 109.38 li
14.4197 113.429 li
clp
14.4198 109.38 mo
19.895 109.38 li
19.895 113.429 li
14.4198 113.429 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.47522 0 0 -4.0487 14.4198 194.62 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
19.895 113.429 mo
25.3702 113.429 li
25.3702 109.38 li
19.895 109.38 li
19.895 113.429 li
clp
19.895 109.38 mo
25.3702 109.38 li
25.3702 113.429 li
19.895 113.429 li
19.895 109.38 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.47522 0 0 -4.0487 19.895 194.62 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
14.4197 109.38 mo
19.895 109.38 li
19.895 105.331 li
14.4197 105.331 li
14.4197 109.38 li
clp
14.4198 105.331 mo
19.895 105.331 li
19.895 109.38 li
14.4198 109.38 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.47522 0 0 -4.0487 14.4198 198.669 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
19.895 109.38 mo
25.3702 109.38 li
25.3702 105.331 li
19.895 105.331 li
19.895 109.38 li
clp
23.8327 108.555 mo
23.5715 108.555 23.3102 108.54 23.0554 108.511 cv
23.0554 108.511 li
21.6246 108.321 20.7033 107.652 20.7139 106.992 cv
20.714 106.875 20.7411 106.756 20.7994 106.634 cv
21.2003 106.302 21.6216 106.148 22.0376 106.147 cv
22.0389 106.147 22.04 106.147 22.0413 106.147 cv
23.0023 106.147 23.9667 106.992 24.5243 108.52 cv
24.2966 108.543 24.0647 108.555 23.8327 108.555 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.10641 0 0 -3.03653 20.5794 198.163 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'G1c]"p>VP%13:B'G1c]"pPbR%13FL'G1c`%1O!`&J5Te~>
<~%1<FH"To2A#R:M8%1<FH"U,>C#R:S>%1<FI#RCkI$O[=M~>
<~/LDMV&IL*:*Z5Os/LDMV&J6TA*Z5h5/LDM[*Zcm[-71&d~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
14.4197 105.331 mo
19.895 105.331 li
19.895 101.283 li
14.4197 101.283 li
14.4197 105.331 li
clp
14.4198 101.283 mo
19.895 101.283 li
19.895 105.331 li
14.4198 105.331 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.47522 0 0 -4.0487 14.4198 202.717 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
19.895 105.331 mo
25.3702 105.331 li
25.3702 101.283 li
19.895 101.283 li
19.895 105.331 li
clp
19.895 101.283 mo
25.3702 101.283 li
25.3702 105.331 li
19.895 105.331 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.47522 0 0 -4.0487 19.895 202.717 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~(_dPk$3gV7(_dPk$3gV7(_dPk$3gV9(_dPk$3g\=(_dPk$47+I(_dPk%1NaU(_dPo&J5Te(_dYu'GM5q
~>
<~&.K!Q#6b21&.K!Q#6b21&.K!Q#6b23&.K!Q#6b87&.K!Q#6tJ=&.K!Q#RC\A&.K!T$O[=M&.K'X%1NaU
~>
<~2(^-r)%d2Y2(^-r)%d2Y2(^-r)%d2_2(^-r)%dGm2(^-r)&X;02(^-r*Zc@D2(^.%-71&d2(^C3/M/P+
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
24.6201 108.58 mo
24.554 108.603 li
24.0006 107.02 23.0172 106.145 22.0376 106.147 cv
21.6177 106.148 21.1924 106.305 20.7881 106.644 cv
20.7431 106.59 li
20.8058 106.621 li
20.743 106.747 20.714 106.871 20.7139 106.992 cv
20.7033 107.652 21.6246 108.321 23.0554 108.511 cv
23.0461 108.58 li
23.0542 108.511 li
23.3094 108.54 23.571 108.555 23.8327 108.555 cv
24.0945 108.555 24.3563 108.54 24.612 108.511 cv
24.6201 108.58 li
24.554 108.603 li
24.6201 108.58 li
24.6282 108.65 li
24.3669 108.68 24.0998 108.695 23.8327 108.695 cv
23.5657 108.695 23.2988 108.68 23.038 108.65 cv
23.0367 108.65 li
21.583 108.45 20.5845 107.787 20.574 106.992 cv
20.5739 106.848 20.6089 106.702 20.6805 106.559 cv
20.6982 106.536 li
21.1226 106.18 21.5819 106.007 22.0376 106.008 cv
23.1069 106.01 24.1228 106.945 24.6862 108.557 cv
24.6794 108.617 li
24.6282 108.65 li
24.6201 108.58 li
1 /3 /CSD get_res sepcs
0 sep
f
gsave
16.75 107.25 mo
16.75 110.25 li
17.051 110.48 li
20.807 113.62 25.2119 115.94 29.975 117.31 cv
30.25 117 li
30.25 114 li
29.975 113.84 li
25.225 112.439 20.826 110.11 17.051 107.01 cv
16.75 107.25 li
clp
gsave
16.302 118.06 mo
30.725 118.06 li
30.725 106.257 li
16.302 106.257 li
16.302 118.06 li
eclp
gsave
16.3018 129.863 mo
30.7249 129.863 li
30.7249 118.06 li
16.3018 118.06 li
16.3018 129.863 li
clp
grestore
gsave
16.3018 118.06 mo
30.7249 118.06 li
30.7249 106.257 li
16.3018 106.257 li
16.3018 118.06 li
clp
29.975 117.31 mo
25.2119 115.94 20.807 113.62 17.051 110.48 cv
16.75 110.25 li
16.75 107.25 li
17.051 107.01 li
20.826 110.11 25.225 112.439 29.975 113.84 cv
30.25 114 li
30.25 117 li
29.975 117.31 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[13.911 0 0 -10.7214 16.5687 197.259 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 58 
/H 46 
/M[58 0 0 -46 0 46 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
r[.Leq]YkYq]#DMq\SW8rZh:_q]5SQq\]2Gk7dhgqa^ZQrBgEFq`+I0q_.=hgApUAr[.Leq]YkYru:nU
q\f8Im2#[Gq]PbVr#5GLq\J?.r_32Zqa13Dq`+I0!&+7'm4R,nm/d25q]kt]r#Y_Sq\f8Iq\Jc=rZh:_
q]5SQq\]2Gk7dhgqa^NMr&sp:q_\1'n1FVk`rQ)cq]kt]r#Y_Sq\f8Im2#[Gr#bt^q]5SQq\]2Gk7dhg
qa^NMr&sp:q_\1'm4I`+g&V+!s!.Igs!.IbruV.]q],JPq\\l?r##DXruh7bruq=^ru:qXq\oDNru(\L
neM'<r_3>^rCR#WrB^HGr]^3>q_e7)nh'bmquHU-q]G&?obmZ@r[.Xir?_Igr?2+]rZD"Wq]#DLne_3@
rZhFcr?M=cr>ttXrZ1kSq\f8Ho+_6?r"f9*s%!#Zs$ZfOs#g9Eq`4O2q_7Rmr%IsJq\/iKh&6,(r[.Xi
r?_Igr?2+]rZD"Wq]#DLne_3@rZhFcr?M=cr>ttXrZ1kSq\f8HneM'<r_3>^rCR#WrBUEG!'L6Eq`4O2
q_7Rmr%IsJq\/iKh&6,(r[.Xir?_Igr?2+]rZD"W!#thTq\\l>r##DXruh7bruq=^ru:qXq\o>Lq\J`:
r"]3)s%!#Zs$ZfOs#g9Eq`4O2q_7Rlr%7gHq\/iKh&6,(r[.Xir?_Igr?2+]rZD"Wq]#DLp(mTBr##DX
ruh7bruq=^ru:qXq\o>Lq\J`:r"]3)s%!#Zs$ZfOs#g9Eq`4O2q_7Rlr%7pKrW)g/q]FW3r"K&Vs!.Ig
s!.IbruV.]q],JPq\\l>r##DXruh7bruqC`ruV1ZrZ1kSq\f8HneD!:r_3>^rCR#WrB^HGr]^3>q_e7)
ngs\jquHU-q]GYPj;Ik/r[.Xir?_Igr>knWrYPGGq\/i<p^[06r##DXruh7bruq=\ru(eOq\8o?rX\u=
p^R*3r"]3)s%!#Zs$ZfLs#U-<q_J%$q^M:dq^D@oquHU-q_7(t!(-Q:r"K&Vs!.Igs!.I_ru:qRq\8o@
q[iN4q\&fDrZhFcr?M=cr>bhTrYGAFq\&c:p^R*3r=o;Ir_3>^rCR#WrBC6Br\s^0q_%appa,ecr%7gH
q\/i\j$NVsr"K&Vs!.Ig!$_Igr>knWrYPGGq\/i<p^[06r##DXruh7bruq=\ru(eOq\8o?q[`H2q[iZ?
r_3>^rCR#WrBC6Br\jg4r%e.%q^M:dq^D@oquHU-q_7%sq_7p]r[.Xir?_Igr>knWrYPGGq\/i<r!rZ7
q[iZ@rZhFcr?M=cr>bhTrYGAFq\&c:r!iT5q[iZ>r_3>^rCR#WrBC6Br\s^0q_%apr$D:eq^24lquHU-
q_7%sq_7p]r[.Xir?_Igr>knWrYPGGq\/i<r!rZ7q[``Cr>,AWruh7bruq=\ru(eOq\8o?q[`T6r=&Q7
r"T-(s%!#Zs$ZfLs#U-<q_J%$q^MFhr?V7er%.aGrtG>Eq_7%sq_7p]r[.Xir?_Igr>knWrYPGGq\/i<
r!rZ7q[iZ@rZhFcr?M=cr>YkV)&E5fq\8o?q[`T6r=&Q7r"T-(s%!#Zs$ZfLs#U-<q_J%$q^MFhr?V7e
r%.aGq\/i\og8+6q_7p]r[.Xir?_Igr>knWrYPGGq\&c;r!rZ7q[iZ@rZhFcr?M=cr>bhTrYGJIrY,8C
rY#)=rsef6q[iZ>r_3>^rCR#WrBC6Br\a[/r[n!rq^)4as!.Idq^24lquHU-q_7nCqcresqbR/Es"O?a
r[.Xir?_Igr>knWrYPGGq\&c;r!rZ7q[iZ@rZhFcr?M=cr>bhTrYGJIrY,8CrY#)=p^R*3r"T-(s%!#Z
s$ZfLs#U-:r\4='q^MCgrZM4cr?D+cr%.aGq\/i\qbR)ooi_/fq_7p]r[.Xir?_Igr>knWrYPGGq\&c;
r!rZ7q[iZ@rZhFcr?M=cr>bhTrYGJIrY,8CrY#)=p^R*3r"T-(s%!#Zs$ZfLs#U-:s"FF,r[n!rq^)4a
s!.Idq^24lquHU-q_7nCqcresqbR)Cr"K&Vs!.Igs!.I_ru:qRq\8o?!"f&>r!rZ6q[iZ@rZhFcr?M=c
r>bhTrYGJIrY,8CrY#)=r!iT5q[`T<r_3>^rCR#WrBC6Br\a[/r[n!rq^)4a![Ap3rZD"_r$hODq\/i\
qbR)ooi_/fq_7p]r[.Xir?_Igr>knWrYPGGq\&c;r!rZ6q[icCrYGJXruh7bruq=\ru(eOrY5>FrXo,B
q[`T6r=&Q6r"K''s%!#Zs$ZfLs#U-:r\4='q^MCgrZM4cr?(n^r$hODrY,8Eq_7nCqcresqbR)Cr"K&V
s!.Igs!.I_ru:qRq\8o?q[iZ8r=&Q7r"f8Vruh7bruq=\ru(hP!#GPJrY,8CrY#)=r!iT5q[`T<r_3>^
rCR#WrBC6Br\a[/r[n!rq^)4as!.Iaq]u(gquHU-q_7nCqcj,(p0%8gq_7p]r[.Xir?_Igr>knWrYPGG
q\&c;r!rZ6q[iZ@rZhFcr?M=cr>bhTrYGJIrY,8CrY#)=rXJl:r=&Q6r"K''s%!#Zs$ZfLs#U-:r\4='
q^MCgrZM4cr?(n^r$hODq\/i\qbR)ooi_/fr%J+)r"K&Vs!.Igs!.I_ru:qRrY5>FrXo,@rXSo<rXJl;
r=&Q7r"f8Vruh7bruq=\ru(eOrY5>FrXo,@rXJi:rXAf9r=&Q6r"K''s%!#Zs$ZfLs#U-:r\4=%r[7[f
rYth\rZ;(ar?(n^r$hODq\/i\qbR)rqe#_4qbR)Cr"K&Vs!.Igs!.I_!#knWrYPPJrY,8CrXf&=rX\u;
rsnu9q[iZ@rZhFcr?M=cr>bhTrYGJIrY,8CrXf&<rXSo9rseo8q[`T<r_3>^rCR#WrBC6Br\a[/r[Rsr
s!RdgrYth\rZ;(ar?(n^r$hODq\/i\qbR)rqe#_4qbR)Cr"K&Vs!.Igs!.I_ru:qRrY5>FrXo,@rXSo<
rXJl;r=&Q6r"]2Uruh7bruq=\ru(eOrY5>FrXo,@rXJi:rXAf9r<rK4r"B!&s%!#Zs$ZfLs#U-:r\4=%
r[7[frYth\rZ;(ar?)%ar?M4hquHU-q_7nCqd954qd94rq_7p]r[.Xir?_Igr>knWrYPPJrY,8CrXf&=
rX\u;rsnu9q[`T>s!%Ri+<^V-ruq=\ru(eOrY5>FrXo,@rXJi:rXAf9r<rK4r"B!&s%!#Zs$ZfLs#U-:
r\4=%r[7[frYth\rZ;(ar?(n]r$hODq\/u`r@n+Eqd954qd94rq_7p]r[.Xir?_Igr>knWrYPPJrY,8C
rXf&=rX\u;rsnu9q[`T>rZhFcr?M=cr>bhTrYGJI!#,AGrXo,@rXJi:rXAf9r<rK4r"B!&s%!#Zs$ZfL
s#U-:r\4=%r[7[frYth\rZ;(ar?(n]r$hODq\/i\qbR)rqe#_4qbR)Cr"K&Vs!.Igs!.I_ru:qRrY5>F
rXo,@rXSo<rXJl;r=&Q6r"]2Uruh7bruq=\ru(eOrY5>FrXo,@rXJi:rXAf9rX/]6q[WN:r_3>^rCR#W
rBC6Br\a[/r[[sqrZM1ZrZ_=_s!.Iaq]l"fquHU-q_7nCqd954qd94rq_7s^!#,>Ys!.Igs!.I_ru:qR
q\8o?q[iZ8r=&Q6r"]2Uruh7bruq=\ru(eOq\8o?q[`T6r<rK4r"B!&s%!#Z!(6fTrBC6Br\a[/r\"'s
q^)4as!.Iaq]l"fquHU-q_7nCmofN`q_7p]r[.Xir?_Igr>knWrYGPKr"T#@q[iZ8r=&Q6r"]2Uruh7b
ruq=\ru(eOq\8o?q[`T6r<rW8r=/Z:r_3>^rCR#WrBC6Br\a[/r\"'sq^)4as!.Ias!.Idr$VCBq\/i\
qbQZ`qbR)Cr"K&Vs!.Igs!.I_ru:qRq\8o?q[iZ8r=&Q6r"]2Uruh7bruq=\ru(eOq\8o?q[`T6r<rW8
r=/Z:r_3>^rCR#WrBC6Br\a[/r\"'sq^)4as!.Ias!.Id!%7^mquHU-q_7nCmofN`q_7p]r[.Xir?_Ig
r>knWrYPGGq\&c;r!rZ6q[`T>rZhFcs!.Ogruq=\ru(eOq\8o?q[`T6r<rW8r=/Z:r_3>^rCR#WrBC6B
r\a[/r\"'sq^)4as!.Ias!.Idr$VCBq\/i\!)NMgmofN`q_7p]r[.Xir?_Igr>knWrYPGGq\&c;r!rZ6
q[`T>rZhFcr?M=cr>bhTrYGAFrY#2Cq[`T6r<rW8r=/Z:r_3>^rCR#WrBC6Br\a[/r\"'sq^)4as!.Ia
s!.Idr$VCBq\/i\qbQ]a!*T1pq_7p]r[.Xir?_Igr>knWrYPGGq\&c;r!rZ6q[`T>rZhFcr?M=cr>bhT
rYGAFq\&c:r!iT4rso&<rsel<r_3>^rCR#WrBC6Br\a[/r\"'sq^)4as!.Ias!.Idr$VCBq\/i\qbQZ`
qbR)Cr"K&Vs!.Igs!.I_ru:qRq\8o@q[iZ8r=&Q6r"]2Uruh7bruq=\ru(eOq\8o?q[`T6r<rW8r=/Z:
r_3>^rCR#WrBC6Br\s^0q_%apr$D:bs!.Idr$VCBq\/i\j$NVsr"K&Vs!.Igs!.I_ru:qRrtPDGq\/i<
r!rZ6rt#&;r"K&Sruh7bruq=\ru(eOq\8o?q[`T6r<rW8r=/Z:r_3>^rCR#WrBC6Br\s^0q^qjtr$hOi
r?;1cr?2"aquHU-q_7%sq_7p]r[.Xir?_Igr>knWrYPGGq\/i<r!i]8rXAf;r=/Z<rZhFcr?M=cr>bhT
rYGAFq\&c:r!iT4rsnu:r"8p%s%!#Zs$ZfLs#U-<q_J%$q^MFhr?;1cr?2+dr[%IBq\/i\j$NVsr"K&V
s!.Igs!.I_ru:qRq\8o@q[iZ8r=&]:r=/Z<rZhFcrZ_Ih+X-e(ru(eOq\8o?q[`T6r<rW8r=/Z:r_3>^
rCR#WrBC6Br\s^0q_%apr$D:bs!.Ibr$D7@q\/i\s$Gg6q_7p]r[.Xir?_Igr>knWrYPGGq\/i<r!rZ6
rt#&;r"K&Sruh7bruq=\ru(eOq\8uArt>2>r!iT4rsnu:r"8p%s%!#Zs$ZfLs#U-<q_J%$q^MFhr?;1c
r?2"aquHU-q_78$qa106r"K&Vs!.Igs!.I_ru:qRq\8o@q[iZ8r=&]:r=/Z<rZhFcr?M=cr>bhTrYGAF
q\&c:r!iT4rso#;!"Ji<r_3>^rCR#WrBC6Br\s^0q_%apr$D:bs!.Ibr$D7@q\/i\j$NVsr"K&Vs!.Ig
s!.I_ru:qRq\8o@q[iZ8r=&]:r=/Z<rZhFcr?M=cr>bhTrYGAFq\&c:r!iT4rsnu:r"8p%s%!#Zs$ZfL
!'1*@r\s^0q_%apr$D:bs!.Ibr$D7@q\/i\j$NVsr"K&Vs!.Igs!.Idr#beU!#thTq\]5Hq\8u@r"AuR
ruh7bruq=`r#PYQq\f8Hr"T#?r=Af;r_3>^rCR#WrBgEGq`4O2q_7q!q^;=er$;1?q\.R!r"K&Vs!.Ig
s!.Idr#beUq]#DLr"f/Dr=Sr?rZhFcr?M=cr?2"Yq\o>Lq\K)Dq[rc;r"/j$s%!#Zs$ZfPr'(!<q_e7)
r%.^mr?M4crrE#uq\.R!r"K&Vs!.Igs!.Idr#beUq]#DLr"f/Dr=Sr?rZhFcr?M=cruh=ar#PYQq\f8H
r"T#?r=Af;r_3>^rCR#WrBgEGq`4O2q_7q!q^;=er$;1?q\/T>j;Ik/r[.Xir?_Igr?D.]q],JPq\]5H
q\8u@r"AuRruh7bruq=`r#PYQq\fAKrYGDGq[rc;r"/j$s%!#Zs$ZfPr'(!<q_e7)r%.^mr?M4cquHU-
hAQ/-r"FS~>

%%EndBinary
grestore
np
grestore
grestore
grestore
17.0518 108.56 mo
20.7408 111.78 25.1678 114.12 29.9748 115.39 cv
30.2498 115.5 li
30.2498 114.75 li
29.9748 114.52 li
25.2118 113.15 20.8068 110.82 17.0518 107.69 cv
16.7498 108 li
16.7498 108.75 li
cp
1 /3 /CSD get_res sepcs
1 sep
ef
16.75 107.25 mo
16.75 110.25 li
17.052 110.42 li
20.807 113.55 25.212 115.88 29.975 117.25 cv
1 /3 /CSD get_res sepcs
0 sep
@
30.25 117 mo
30.25 114 li
29.975 113.9 li
25.225 112.5 20.826 110.17 17.052 107.07 cv
1 /3 /CSD get_res sepcs
1 sep
@
370.51 86.2998 mo
367.59 86.2998 367.59 89.1198 367.75 89.2498 cv
367.75 129.75 li
367.59 130 li
367.59 132.82 370.51 132.82 370.75 132.75 cv
389.5 132.75 li
389.45 132.82 li
389.45 132.82 392.37 132.82 392.5 129.75 cv
392.5 89.2498 li
392.37 89.1198 li
392.37 89.1198 392.37 86.2998 389.5 86.2498 cv
370.75 86.2498 li
370.51 86.2998 li
1 /3 /CSD get_res sepcs
.498 sep
ef
371.05 86.8901 mo
368.3 86.8901 368.3 89.6401 368.5 90.0001 cv
368.5 129.75 li
368.3 129.49 li
368.3 132.23 371.05 132.23 370.75 132 cv
388.75 132 li
388.91 132.23 li
388.91 132.23 391.66 132.23 391.75 129.75 cv
391.75 90.0001 li
391.66 89.6401 li
391.66 89.6401 391.66 86.8901 388.75 87.0001 cv
370.75 87.0001 li
371.05 86.8901 li
.772549 .690639 .638117 .874083 cmyk
ef
389.509 111.461 mo
384.337 106.628 378.898 100.866 374.358 94.4908 cv
389.509 94.4908 li
389.509 111.461 li
.0196078 .0156863 0 .815686 cmyk
f
gsave
368.509 125.991 mo
391.241 125.991 li
391.241 92.859 li
368.509 92.859 li
368.509 125.991 li
clp
390.991 112.828 mo
390.745 112.604 390.498 112.378 390.25 112.149 cv
390.25 93.7498 li
390.5 93.7398 li
390.36 93.5998 li
390.25 93.7498 li
373.837 93.7498 li
373.665 93.5037 373.496 93.2567 373.327 93.0088 cv
389.874 93.0088 li
389.984 92.859 li
390.667 92.859 li
391.024 93.2158 li
390.815 93.7498 li
390.991 93.7498 li
390.991 112.828 li
.0196078 .0156863 0 .964706 cmyk
f
390.25 112.149 mo
390.004 111.922 389.756 111.692 389.509 111.461 cv
389.509 94.4908 li
374.358 94.4908 li
374.183 94.2445 374.009 93.9979 373.837 93.7498 cv
390.25 93.7498 li
390.25 112.149 li
390.25 93.7498 mo
390.36 93.5998 li
390.5 93.7398 li
390.25 93.7498 li
.0117647 .00784314 0 .905882 cmyk
f
grestore
382.481 90.9598 mo
382.62 90.8198 li
382.749 90.7502 li
382.749 90.7502 li
382.481 90.9598 li
377.481 90.9598 mo
377.34 90.8198 li
377.5 90.7498 li
377.481 90.9598 li
382.745 90.7498 mo
382.418 90.7498 li
382.45 90.7201 li
382.745 90.7498 li
377.542 90.7498 mo
377.5 90.7498 li
377.51 90.7201 li
377.542 90.7498 li
377.5 90.7498 mo
377.5 90.7498 li
377.5 89.9998 li
377.34 89.9898 li
377.481 89.8499 li
377.5 89.9998 li
382.75 89.9998 li
382.75 90.0002 li
382.45 90.1902 li
382.31 90.0602 li
382 90.0002 li
377.5 90.0002 li
377.651 90.0602 li
377.51 90.1902 li
377.5 90.0002 li
377.5 90.7498 li
382.75 89.9998 mo
382.75 89.9998 li
382.75 89.9998 mo
382.62 89.9898 li
382.481 89.8499 li
382.75 89.9998 li
.0196078 .0156863 0 .964706 cmyk
f
382.31 90.8502 mo
382 90.7503 li
377.542 90.7503 li
377.542 90.7498 li
382.418 90.7498 li
382.31 90.8502 li
377.651 90.8502 mo
377.5 90.7503 li
377.542 90.7503 li
377.651 90.8502 li
382.75 90.7503 mo
382.749 90.7502 li
382.75 90.7498 li
382.75 90.0002 li
382.75 90.7503 li
377.5 90.7503 mo
377.5 90.7498 li
377.5 90.7503 li
382.749 90.7502 mo
382.745 90.7498 li
382.75 90.7498 li
382.749 90.7502 li
.0196078 .0156863 0 .666667 cmyk
f
382.749 90.7502 mo
382.749 90.7502 li
382.75 90.7498 li
382.749 90.7502 li
382.75 90.7498 mo
382.75 90.7498 li
382.745 90.7498 li
382.45 90.7201 li
382.418 90.7498 li
377.542 90.7498 li
377.51 90.7201 li
377.5 90.7498 li
377.5 90.7498 li
377.5 90.0002 li
377.51 90.1902 li
377.651 90.0602 li
377.5 90.0002 li
382 90.0002 li
382.31 90.0602 li
382.45 90.1902 li
382.75 90.0002 li
382.75 90.7498 li
.0117647 .00784314 0 .682353 cmyk
f
gsave
369.25 86.25 mo
369.269 86.52 li
369.23 86.54 369.191 86.55 369.25 86.25 cv
369.15 86.56 li
369.031 86.62 368.92 86.681 368.5 86.9999 cv
368.82 86.74 li
368.72 86.81 368.62 86.8801 368.5 86.9999 cv
368.54 86.9601 li
368.45 87.03 368.37 87.11 368.5 86.9999 cv
368.3 87.2 li
368.23 87.28 368.17 87.36 367.75 87.75 cv
368.11 87.45 li
368.05 87.54 368 87.63 367.75 87.75 cv
367.951 87.71 li
367.861 87.89 367.79 88.07 367.75 88.5 cv
367.639 88.68 li
367.59 88.95 367.59 89.12 367.75 89.25 cv
367.75 129.75 li
367.59 130 li
367.59 130.18 367.6 130.35 367.75 130.5 cv
367.62 130.5 li
367.639 130.66 367.68 130.799 367.75 131.25 cv
367.719 130.94 li
367.76 131.07 367.799 131.19 367.75 131.25 cv
367.861 131.31 li
367.91 131.43 367.98 131.54 367.75 132 cv
368.05 131.64 li
368.11 131.73 368.19 131.82 368.5 132 cv
368.509 132.141 li
368.599 132.2 368.69 132.27 368.5 132 cv
368.78 132.32 li
368.87 132.38 368.96 132.43 369.25 132.75 cv
369.049 132.47 li
369.23 132.56 369.41 132.63 369.25 132.75 cv
369.581 132.68 li
369.75 132.73 369.91 132.76 370 132.75 cv
370.049 132.78 li
370.32 132.82 370.51 132.82 370.75 132.75 cv
389.5 132.75 li
389.45 132.82 li
389.45 132.82 389.64 132.82 390.25 132.75 cv
389.91 132.78 li
390.05 132.76 390.21 132.73 390.25 132.75 cv
390.379 132.68 li
390.55 132.63 390.73 132.56 391 132.75 cv
390.91 132.47 li
391 132.43 391.09 132.38 391 132 cv
391.18 132.32 li
391.27 132.27 391.361 132.2 391.75 132 cv
391.451 132.141 li
391.531 132.069 391.62 131.99 391.75 132 cv
391.691 131.91 li
391.769 131.82 391.849 131.73 391.75 132 cv
391.91 131.64 li
391.981 131.54 392.04 131.43 391.75 131.25 cv
392.099 131.31 li
392.16 131.19 392.2 131.07 392.5 131.25 cv
392.24 130.94 li
392.28 130.799 392.32 130.66 392.5 130.5 cv
392.34 130.5 li
392.36 130.35 392.37 130.18 392.5 129.75 cv
392.5 114 li
392.37 114.069 li
384.31 106.9 375 97.19 369.25 86.25 cv
367.75 88.5 mo
367.74 88.2299 li
367.69 88.4 367.66 88.55 367.75 88.5 cv
368.5 132 mo
368.26 131.91 li
368.5 132 li
clp
gsave
366.84 133.57 mo
393.118 133.57 li
393.118 85.768 li
366.84 85.768 li
366.84 133.57 li
eclp
gsave
366.84 133.57 mo
393.119 133.57 li
393.119 85.767 li
366.84 85.767 li
366.84 133.57 li
clp
389.45 132.82 mo
389.45 132.82 li
389.468 132.82 390.244 132.815 391.01 132.392 cv
390.985 132.435 390.948 132.453 390.91 132.47 cv
391 132.75 li
390.865 132.655 390.752 132.625 390.652 132.625 cv
390.552 132.625 390.464 132.655 390.379 132.68 cv
390.25 132.75 li
390.25 132.75 li
389.64 132.82 389.45 132.82 389.45 132.82 cv
390.204 132.743 mo
390.137 132.743 390.017 132.765 389.91 132.78 cv
390.25 132.75 li
390.241 132.745 390.225 132.743 390.204 132.743 cv
370.364 132.807 mo
370.267 132.807 370.166 132.797 370.049 132.78 cv
370 132.75 li
369.988 132.751 369.976 132.752 369.962 132.752 cv
369.868 132.752 369.728 132.723 369.581 132.68 cv
369.25 132.75 li
369.41 132.63 369.23 132.56 369.049 132.47 cv
369.25 132.75 li
368.96 132.43 368.87 132.38 368.78 132.32 cv
368.745 132.28 li
369.39 132.682 370.137 132.768 370.517 132.768 cv
370.635 132.768 370.717 132.759 370.75 132.75 cv
389.5 132.75 li
389.5 132.75 li
370.75 132.75 li
370.613 132.79 370.493 132.807 370.364 132.807 cv
391.18 132.32 mo
391.168 132.298 li
391.457 132.114 391.737 131.865 391.966 131.529 cv
391.958 131.569 391.935 131.605 391.91 131.64 cv
391.75 132 li
391.799 131.865 391.804 131.82 391.787 131.82 cv
391.769 131.82 391.73 131.865 391.691 131.91 cv
391.75 132 li
391.742 131.999 391.735 131.999 391.728 131.999 cv
391.61 131.999 391.526 132.073 391.451 132.141 cv
391.75 132 li
391.361 132.2 391.27 132.27 391.18 132.32 cv
368.605 132.195 mo
368.589 132.195 368.549 132.167 368.509 132.141 cv
368.507 132.113 li
368.541 132.14 368.576 132.166 368.611 132.191 cv
368.61 132.194 368.608 132.195 368.605 132.195 cv
367.75 132 mo
367.98 131.54 367.91 131.43 367.861 131.31 cv
367.75 131.25 li
367.79 131.201 367.771 131.112 367.741 131.01 cv
367.837 131.301 367.975 131.544 368.14 131.749 cv
368.099 131.709 368.073 131.674 368.05 131.64 cv
367.75 132 li
392.5 131.25 mo
392.39 131.184 392.315 131.158 392.261 131.158 cv
392.203 131.158 392.169 131.188 392.142 131.229 cv
392.185 131.145 392.224 131.057 392.261 130.965 cv
392.5 131.25 li
367.75 131.25 mo
367.68 130.799 367.639 130.66 367.62 130.5 cv
367.623 130.5 li
367.645 130.658 367.678 130.805 367.719 130.942 cv
367.75 131.25 li
392.365 130.649 mo
392.378 130.6 392.391 130.551 392.403 130.5 cv
392.5 130.5 li
392.442 130.551 392.399 130.601 392.365 130.649 cv
392.5 129.751 mo
392.5 129.751 392.5 129.75 392.5 129.75 cv
392.5 114 li
392.5 114 li
392.5 129.75 li
392.5 129.75 392.5 129.751 392.5 129.751 cv
367.75 89.2498 mo
367.59 89.1199 367.59 88.9499 367.639 88.68 cv
367.726 88.539 li
367.667 88.9215 367.701 89.2102 367.75 89.2498 cv
367.75 89.2498 li
367.72 88.5097 mo
367.668 88.5097 367.697 88.3773 367.74 88.2299 cv
367.747 88.4187 li
367.741 88.449 367.736 88.4788 367.731 88.5082 cv
367.727 88.5092 367.723 88.5097 367.72 88.5097 cv
367.774 88.2958 mo
367.815 88.007 367.877 87.8585 367.951 87.71 cv
367.75 87.75 li
368 87.63 368.05 87.54 368.11 87.45 cv
367.75 87.75 li
368.17 87.36 368.23 87.28 368.3 87.2 cv
368.379 87.1205 li
368.047 87.485 367.865 87.9166 367.774 88.2958 cv
368.432 87.0542 mo
368.428 87.0542 368.482 87.005 368.54 86.9601 cv
368.531 86.9694 li
368.514 86.9846 368.497 87.0001 368.481 87.0156 cv
368.448 87.0432 368.434 87.0542 368.432 87.0542 cv
368.544 86.9577 mo
368.645 86.8628 368.732 86.8014 368.82 86.74 cv
368.784 86.7691 li
368.698 86.8282 368.618 86.8913 368.544 86.9577 cv
369.071 86.6015 mo
369.099 86.5859 369.124 86.573 369.15 86.56 cv
369.25 86.25 li
369.209 86.4582 369.215 86.5171 369.236 86.527 cv
369.179 86.5503 369.124 86.5752 369.071 86.6015 cv
369.269 86.5139 mo
369.25 86.25 li
369.29 86.3254 369.33 86.401 369.37 86.4764 cv
369.335 86.4883 369.302 86.5009 369.269 86.5139 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[27.662 0 0 -49.1688 366.84 219.599 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcMtSn.Fa^h>m$W_>s6@r"6dGn.F7Pli?Me_>sQIo-3r0b5hMRo-29Vq>gL,o-2$OrXn`Gl2]K;
rXo/SoeXGbrXo/Ss"jC*_>sQIs!%+lg]6L;rXo/SoeXGbrXo/SoeZOH`W5uMs!%FupdEC-o`4t's!%Fu
pdDt!rXo/Sr\O=;mf:i;rXo/Sr\O=;_>sTJ!YHV#r\O=;_>sQIs!%Fus$Z]`i;hj;rXo/Sr\ORBqGkB4
rXo/Sr\ORBqc*Vr_>sQIs!%Fus$Z]`dfAk;rXo/Sr\ORBqGkB4rXo/Sr\ORBr`/o/oDm2;rXo/Sr\ORB
r`/o/`;ol;rXo/Sr\ORBr`/o/_>sQIs!%Fus$ZidrFY0lh#REds!%Fus$Zids(;:T_>sQIs!%Fu!^oFV
s&K)2s*)<[rXo/Sr\ORBr`/u1s*&t~>

%%EndBinary
grestore
np
389.45 132.82 mo
389.5 132.75 li
389.5 132.75 li
370.75 132.75 li
370.717 132.759 370.635 132.768 370.517 132.768 cv
370.137 132.768 369.39 132.682 368.745 132.28 cv
368.5 132 li
368.587 132.124 368.615 132.176 368.611 132.191 cv
368.576 132.166 368.541 132.14 368.507 132.113 cv
368.5 132 li
368.5 132 li
368.309 131.889 368.205 131.812 368.14 131.749 cv
367.975 131.544 367.837 131.301 367.741 131.01 cv
367.734 130.987 367.727 130.964 367.719 130.94 cv
367.719 130.942 li
367.678 130.805 367.645 130.658 367.623 130.5 cv
367.75 130.5 li
367.6 130.35 367.59 130.18 367.59 130 cv
367.75 129.75 li
367.75 89.25 li
367.75 89.25 367.75 89.2499 367.75 89.2498 cv
367.75 89.2498 li
367.701 89.2102 367.667 88.9215 367.726 88.539 cv
367.75 88.5 li
367.743 88.5039 367.736 88.5066 367.731 88.5082 cv
367.736 88.4788 367.741 88.449 367.747 88.4187 cv
367.75 88.5 li
367.757 88.4247 367.765 88.3571 367.774 88.2958 cv
367.865 87.9166 368.047 87.485 368.379 87.1205 cv
368.5 86.9999 li
368.493 87.0057 368.487 87.0109 368.481 87.0156 cv
368.497 87.0001 368.514 86.9846 368.531 86.9694 cv
368.5 86.9999 li
368.515 86.9851 368.529 86.9711 368.544 86.9577 cv
368.618 86.8913 368.698 86.8282 368.784 86.7691 cv
368.5 86.9999 li
368.829 86.7498 368.969 86.6583 369.071 86.6015 cv
369.124 86.5752 369.179 86.5503 369.236 86.527 cv
369.238 86.5281 369.241 86.5286 369.244 86.5286 cv
369.251 86.5286 369.26 86.5246 369.269 86.52 cv
369.269 86.5139 li
369.302 86.5009 369.335 86.4883 369.37 86.4764 cv
369.492 86.7064 369.615 86.9347 369.74 87.1636 cv
368.307 87.8681 368.339 89.71 368.5 90.0001 cv
368.5 129.75 li
368.3 129.49 li
368.3 131.615 369.953 132.092 370.556 132.092 cv
370.731 132.092 370.817 132.052 370.75 132 cv
388.75 132 li
388.91 132.23 li
388.91 132.23 391.66 132.23 391.75 129.75 cv
391.75 113.514 li
391.957 113.701 392.164 113.886 392.37 114.069 cv
392.5 114 li
392.5 129.75 li
392.5 129.75 392.5 129.751 392.5 129.751 cv
392.37 130.18 392.36 130.35 392.34 130.5 cv
392.403 130.5 li
392.391 130.551 392.378 130.6 392.365 130.649 cv
392.294 130.75 392.267 130.844 392.24 130.94 cv
392.261 130.965 li
392.224 131.057 392.185 131.145 392.142 131.229 cv
392.127 131.253 392.113 131.282 392.099 131.31 cv
391.75 131.25 li
391.938 131.367 391.979 131.454 391.966 131.529 cv
391.737 131.865 391.457 132.114 391.168 132.298 cv
391 132 li
391.052 132.221 391.044 132.331 391.01 132.392 cv
390.244 132.815 389.468 132.82 389.45 132.82 cv
368.5 86.9999 mo
368.5 86.9999 li
368.5 86.9999 li
368.5 86.9999 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[27.662 0 0 -47.803 366.84 218.233 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 35 
/M[20 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;o:TdK&n>m=3(Tm=4^-dfAcb`;fmfmXN1UrdXEnjT+6>rdXEn`;omeon`O%`;omen;,Zrmf<?:n;,$`
rdXp'o8r_Ic2dinreU0-aT28>rdXp'o8pokrdXp'o8r5;g]7>'reUT9opNc!rdXp's,d8KpR/u#rdXp'
s,coAg]6U>rdXp's,coA`;omereUT9opPaYaT2<ireUT9rgEPTc2dV>rdXp's,d5Jpn>Y,rdXp's,d5J
pn@-Vf)Yf"reUT9rgEPT`;omes+g`4OHBI0pn>Y,rdXp's,d5Js.T:hi;hs>rdXp's,d5Js.T:h`;ome
reUT9rgEe[ql0Xr`;omereUT9rgEe[qPr!Eo)Sc>reUT9rgEe[qPqL7rdXp's,d5Js.TFlrNc%qdK'8r
reUT9rgEe[ri5q&`;omereUT9rgEe[ri5q&`;omereUT9rgEe[ri5q&joF<>rdXp's,d5Js.TFls0D[:
`;omereUT9rg<h]TrS-ms0D[:J,~>

%%EndBinary
grestore
np
388.91 132.23 mo
388.75 132 li
370.75 132 li
370.817 132.052 370.731 132.092 370.556 132.092 cv
369.953 132.092 368.3 131.615 368.3 129.49 cv
368.5 129.75 li
368.5 90.0001 li
368.339 89.71 368.307 87.8681 369.74 87.1636 cv
370.83 89.1567 372.036 91.109 373.327 93.0088 cv
369.425 93.0088 li
369.425 92.9997 li
369.365 93.0025 li
369.308 92.9187 li
369.081 93.0161 li
368.509 93.0433 li
368.509 124.762 li
368.673 124.965 li
368.883 125.225 li
368.908 125.256 li
368.936 125.284 li
368.972 125.32 li
369.25 125.991 li
390.794 125.991 li
390.957 125.472 li
391.012 125.295 li
391.241 125.067 li
391.241 124.461 li
391.034 124.246 li
390.991 124.201 li
390.991 112.828 li
391.245 113.059 391.498 113.288 391.75 113.514 cv
391.75 129.75 li
391.66 132.23 388.91 132.23 388.91 132.23 cv
378.719 130.592 mo
379.096 130.999 379.654 131.25 380.27 131.25 cv
380.5 131.25 li
380.961 131.25 381.421 131.041 381.783 130.697 cv
381.937 130.757 li
381.939 130.757 li
381.939 130.542 li
382.346 130.14 382.635 129.599 382.75 129 cv
382.75 129 li
382.715 128.827 382.666 128.658 382.602 128.496 cv
382.637 128.423 382.684 128.342 382.75 128.25 cv
382.548 128.37 li
382.141 127.461 381.286 126.79 380.27 126.79 cv
380.5 126.75 li
379.04 126.79 378.04 127.79 378.04 129.02 cv
378.04 129.02 li
378.04 129.633 378.288 130.189 378.719 130.592 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[26.2789 0 0 -47.803 366.84 218.233 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 35 
/M[19 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mL&@emJu\CmL&@eoDnagmdBKMmK`.[mdBKMq?QZumJu\CmL&@emJu\C!"/`5nHnUgmK!7SnaHGanHnUg
o)S[grpK=FrX/0%mK`.[rpK=FrX/0%q$6TumK!7SnaHGanHnUgmK!7SnaHJb!"/6&qZl`tmK!7SrpTLK
rX/0%qZl`tnc8UgrpKdSo^MhenHo'toEO^`rpKdSo^MhenHo'trW`*$mK!7SrpTLKrX/Q0p'CO#oEO^`
rpKdSs7#aPrX/Q0p'CO#oEO^`rpKdSs7#aPrX/Q0p'CO#oEOgcrW)rcrpTmVp@8+hr!E'&qZl`tmK!7S
rpTmVp@8+hr!E'&qZm'(p]g-drpKdSs7#aPrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX&W3r<`H/o*>0t
q$$0drpKdSs7$$Xq=FRmr!E?.o*>0tq$$6frrE&drpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgU
rX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpg$[qt0jprsAZ2rWr*#r!)s#
mK!7SrpTmVrpg$[qt0jpr!E?.o*>0tq$$3e!!*#drpTmVrpg$[qt0jpr!E?.o*>0tq$$0drpKdSs7$$X
s7?-[rX/Q0rWr*#r!!-)q??9erpKdSs7$$Xs7?-[rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^
rq66trX&T2rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!33*qZm$'r!!'&mK!7SrpTmV
rpg$[rq-3_rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!*9-"pOl/r!*0)rWW9(
mK!7SrpTmVrpg$[rq$9bp%J@lr!E?.r!*9-"pOl/r!*'&rWMWhrpKdSs7$$Xs7?6^!ql6[J,~>

%%EndBinary
grestore
np
380.5 131.25 mo
380.27 131.25 li
379.654 131.25 379.096 130.999 378.719 130.592 cv
379.126 130.975 379.698 131.221 380.375 131.247 cv
380.34 131.249 380.305 131.25 380.269 131.25 cv
380.5 131.25 li
380.5 131.25 li
380.458 131.25 380.417 131.249 380.375 131.247 cv
380.902 131.223 381.381 131.018 381.772 130.693 cv
381.783 130.697 li
381.421 131.041 380.961 131.25 380.5 131.25 cv
379.061 129.547 mo
378.623 129.269 378.318 128.824 378.25 128.25 cv
378.12 128.44 li
378.07 128.63 378.04 128.82 378.25 129 cv
378.04 129.02 li
378.04 129.02 li
378.04 129.02 li
378.04 127.79 379.04 126.79 380.5 126.75 cv
380.27 126.79 li
381.286 126.79 382.141 127.461 382.548 128.37 cv
382.43 128.44 li
382.335 128.742 382.161 129.015 381.939 129.234 cv
381.939 128.25 li
381.452 127.976 li
381.556 127.871 li
381.415 127.731 li
381.301 127.845 li
381.315 127.564 li
380.994 127.534 li
380.981 127.561 li
380.44 127.561 li
380.44 127.225 li
380.439 127.225 li
379.687 127.532 li
379.372 127.464 li
379.105 127.751 li
378.975 127.891 li
379.223 128.25 li
379.061 128.25 li
379.061 129.547 li
382.51 129.02 mo
382.51 128.868 382.493 128.723 382.602 128.496 cv
382.666 128.658 382.715 128.827 382.75 129 cv
382.51 129.02 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -6.829 376.522 178.625 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!Wi~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYC~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
378.719 130.592 mo
378.288 130.189 378.04 129.633 378.04 129.02 cv
378.25 129 li
378.145 129.624 378.342 130.186 378.719 130.592 cv
381.939 130.542 mo
381.939 130.535 li
382.284 130.137 382.51 129.604 382.51 129.02 cv
382.75 129 li
382.75 129 li
382.75 129 li
382.635 129.599 382.346 130.14 381.939 130.542 cv
382.602 128.496 mo
382.585 128.453 382.567 128.411 382.548 128.37 cv
382.75 128.25 li
382.684 128.342 382.637 128.423 382.602 128.496 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -5.4632 376.522 177.259 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.5 131.25 mo
380.269 131.25 li
380.305 131.25 380.34 131.249 380.375 131.247 cv
380.417 131.249 380.458 131.25 380.5 131.25 cv
380.375 131.247 mo
379.698 131.221 379.126 130.975 378.719 130.592 cv
378.342 130.186 378.145 129.624 378.25 129 cv
378.04 129.02 li
378.04 129.02 378.04 129.02 378.04 129.02 cv
378.25 129 li
378.04 128.82 378.07 128.63 378.12 128.44 cv
378.25 128.25 li
378.318 128.824 378.623 129.269 379.061 129.547 cv
379.061 129.75 li
379.405 129.75 li
378.975 130.149 li
379.457 130.668 li
379.913 130.44 li
381.047 130.44 li
381.076 130.494 li
381.194 130.468 li
381.772 130.693 li
381.381 131.018 380.902 131.223 380.375 131.247 cv
381.939 130.535 mo
381.939 129.234 li
382.161 129.015 382.335 128.742 382.43 128.44 cv
382.548 128.37 li
382.567 128.411 382.585 128.453 382.602 128.496 cv
382.493 128.723 382.51 128.868 382.51 129.02 cv
382.75 129 li
382.75 129 382.75 129 382.75 129 cv
382.51 129.02 li
382.51 129.604 382.284 130.137 381.939 130.535 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -5.4632 376.522 177.259 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.561 129.061 mo
380.44 129.061 li
380.44 128.94 li
380.561 128.94 li
380.561 129.061 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.1493 0 0 -4.0974 379.288 177.259 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!r~>
<~!WiE)!WiE)!W~>
<~!!!!!!!!!!!!~>
<~qYL'bqYL'bq>~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.939 130.757 mo
381.937 130.757 li
381.783 130.697 li
381.821 130.662 381.857 130.625 381.893 130.586 cv
381.908 130.572 381.924 130.557 381.939 130.542 cv
381.939 130.757 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.1493 0 0 -4.0974 380.671 175.893 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!r~>
<~!WiE)!WiE)!W~>
<~!!!!!!!!!!!!~>
<~84Z9B84Z9B8,~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.783 130.697 mo
381.772 130.693 li
381.813 130.659 381.854 130.623 381.893 130.586 cv
381.857 130.625 381.821 130.662 381.783 130.697 cv
380.269 129.88 mo
379.82 129.88 379.401 129.764 379.061 129.547 cv
379.061 128.25 li
379.223 128.25 li
378.975 127.891 li
379.105 127.751 li
379.372 127.464 li
379.687 127.532 li
380.439 127.225 li
380.44 127.225 li
380.44 127.561 li
380.981 127.561 li
380.994 127.534 li
381.315 127.564 li
381.301 127.845 li
381.415 127.731 li
381.556 127.871 li
381.452 127.976 li
381.939 128.25 li
381.939 129.234 li
381.606 129.561 381.164 129.767 380.721 129.767 cv
380.647 129.767 380.573 129.762 380.5 129.75 cv
380.269 129.88 li
380.44 129.061 mo
380.561 129.061 li
380.561 128.94 li
380.44 128.94 li
380.44 129.061 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.5324 0 0 -6.829 377.905 178.625 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 5 
/M[4 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~91qoN91qoN91qoN91qoN='&I)~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.893 130.586 mo
381.908 130.569 381.924 130.552 381.939 130.535 cv
381.939 130.542 li
381.924 130.557 381.908 130.572 381.893 130.586 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[4.1493 0 0 -4.0974 380.671 175.893 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<~>
<~!<E3%!<E3%!<~>
<~!!!!!!!!!!!!~>
<~4$,Mc4$,Mc3r~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.772 130.693 mo
381.194 130.468 li
381.076 130.494 li
381.047 130.44 li
379.913 130.44 li
379.457 130.668 li
378.975 130.149 li
379.405 129.75 li
379.061 129.75 li
379.061 129.547 li
379.401 129.764 379.82 129.88 380.269 129.88 cv
380.5 129.75 li
380.573 129.762 380.647 129.767 380.721 129.767 cv
381.164 129.767 381.606 129.561 381.939 129.234 cv
381.939 130.535 li
381.924 130.552 381.908 130.569 381.893 130.586 cv
381.854 130.623 381.813 130.659 381.772 130.693 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.5324 0 0 -4.0974 377.905 175.893 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~4?P_g4?P_g4?P_g~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.509 124.509 mo
370.257 124.509 li
370.124 124.376 li
370.011 124.263 li
369.991 124.238 li
369.991 94.4908 li
374.358 94.4908 li
378.898 100.866 384.337 106.628 389.509 111.461 cv
389.509 124.509 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[22.1296 0 0 -32.7792 368.223 211.404 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 24 
/M[16 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-
"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-
~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W,
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~d*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldp
d*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'
d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3
d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oC
d*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPO
d*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPR
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
390.794 125.991 mo
369.25 125.991 li
368.972 125.32 li
368.936 125.284 li
368.908 125.256 li
368.883 125.225 li
368.673 124.965 li
368.509 124.762 li
368.509 93.0433 li
369.081 93.0161 li
369.308 92.9187 li
369.365 93.0025 li
369.425 92.9997 li
369.425 93.0088 li
373.327 93.0088 li
373.496 93.2567 373.665 93.5037 373.837 93.7498 cv
369.25 93.7498 li
369.46 93.7398 li
369.6 93.5998 li
369.25 93.7498 li
369.25 124.5 li
369.46 124.76 li
369.6 124.9 li
369.25 125.25 li
390.25 125.25 li
390.36 124.9 li
390.5 124.76 li
390.25 124.5 li
390.25 112.149 li
390.498 112.378 390.745 112.604 390.991 112.828 cv
390.991 124.201 li
391.034 124.246 li
391.241 124.461 li
391.241 125.067 li
391.012 125.295 li
390.957 125.472 li
390.794 125.991 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[26.2789 0 0 -35.5108 366.84 212.77 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 26 
/M[19 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U"r2"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1
"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\i2"U,&5"U"r2"9\i1"9\i1"9\l3
"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\i2"U,&5"U"r2
"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1
"9\i2"U,&5"U"r2"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"9er4"U,&4"9\i1"9\f/!s8W-"U,&5
"U,#3"9\i1"9S`.!s8W/"U,&5"U"r2"9\i1!s8W-!s8]1"U,&5"9\i1"9\i0!s8W-!sJi3"U,&4"9\i1
"9\f/!s8W-"U,&5"U,#3"9\i1"9S`.!s8W/"U,&5"U"r2"9\i1!s8W-!s8~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-
!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/
"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8W."9\i1"9S`.
!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-
!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-!s8W-!s8W-"9\i1
"9\f/!s8W-!s8W-!s8W."9\i1"9S`.!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-!sA`0"9\i0!s8W-
!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!WiE+"9\i1"9S`.!s8W-!s8W,!Wi~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~p@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FVp\4FVp\4FVp\4CTp@n=Up\4FVp\4FVp\4FVp\+=Sp\4FV
p\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FVp\4FVp\4FVp\4CTp@n=Up\4FVp\4FV
p\4FVp\+=Sp\4FVp\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4FUp@e7Tp\4FWq"XXZq"XXZq"XRV
p@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"XXZq"XXZp@e4Sp\4FVq"XXZq"XXZq"XXXp@e7Tp\4FW
q"XXZq"XXZq"XRVp@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"XXZq"XXZp@e4Sp\4FVq"XXZq"XXZ
q"XXXp@e7Tp\4FWq"XXZq"XXZq"XRVp@n=Up\4IXq"XXZq"XXZq"FFTp\4FVp\=OYq"X[\q>'j^p@e4S
p\4FVq"XXZq"aa]q>'j[p@e7Tp\4FWq"XXZq>'j^q>'aXp@n=Up\4IXq"XX[q>'j^q=aOUp\4FVp\=OY
q"X[\q>'j^p@e4Sp\4FVq"XXZq"aa]qYL'^p@e7Tp\4FWq"XXZq>'j_qYC~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
390.25 125.25 mo
369.25 125.25 li
369.6 124.9 li
369.46 124.76 li
369.25 124.5 li
369.25 93.7498 li
373.837 93.7498 li
374.009 93.9979 374.183 94.2445 374.358 94.4908 cv
369.991 94.4908 li
369.991 124.238 li
370.011 124.263 li
370.124 124.376 li
370.257 124.509 li
389.509 124.509 li
389.509 111.461 li
389.756 111.692 390.004 111.922 390.25 112.149 cv
390.25 124.5 li
390.5 124.76 li
390.36 124.9 li
390.25 125.25 li
369.25 93.7498 mo
369.25 93.7498 li
369.6 93.5998 li
369.46 93.7398 li
369.25 93.7498 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[23.5127 0 0 -34.145 368.223 211.404 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*!s8W-
!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*
!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)
!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*
!WiE)!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!W~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3&
!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)!<E3%
!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)
!<E3%!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~kND*ol07Hsl07Hsl07Hsl0%6ol07Hsl07Hsl07Hsl07Bol07Hsl07Hsl07Hsl07HqkNV6ql07Hsl07Hs
l07HskND*ol07Hsl07Hsl07Hsl0%6ol07KulK[["lK[["lK[Qql07HtlK[["lK[["lK[ZtkNV6qlK[["
lK[["lK[["kND*ol0@R!lK[["lK[["lK@?pl07Kum-O**m-O**m-Noul07HtlKmm(m-O**m-O*%kNV6q
lK[a&m-O**m-O**kND*ol0@R#m-O**m-O**m-!Qrl07Kum-O**m-O**m-Noul07HtlKmm(mHs<.mHs<(
kNV6qlK[a&m-X3-mHs<.kND*ol0@R#m-O-,mHs<.mH<Zsl07Kum-O*+mHs<.mHs*"l07HtlKmm(mHs<.
mHs<(kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`6n)rlul07Kum-O*+mI0N4n*fH&l07HtlKmm(
mHsB2n*f`.kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`8nG~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
370 124.5 mo
390.25 124.5 li
390.25 93.75 li
370 93.75 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
370.51 165.51 mo
367.59 165.51 367.59 168.33 367.75 168 cv
367.75 209.25 li
367.59 209.21 li
367.59 212.031 370.51 212.031 370.75 212.25 cv
389.5 212.25 li
389.45 212.031 li
389.45 212.031 392.37 212.031 392.5 209.25 cv
392.5 168 li
392.37 168.33 li
392.37 168.33 392.37 165.51 389.5 165.75 cv
370.75 165.75 li
370.51 165.51 li
1 /3 /CSD get_res sepcs
.498 sep
ef
371.05 166.1 mo
368.3 166.1 368.3 168.85 368.5 168.75 cv
368.5 208.5 li
368.3 208.701 li
368.3 211.441 371.05 211.441 370.75 211.5 cv
388.75 211.5 li
388.91 211.441 li
388.91 211.441 391.66 211.441 391.75 208.5 cv
391.75 168.75 li
391.66 168.85 li
391.66 168.85 391.66 166.1 388.75 165.75 cv
370.75 165.75 li
371.05 166.1 li
.772549 .690639 .638117 .874083 cmyk
ef
389.509 190.673 mo
384.179 185.694 378.564 179.742 373.943 173.241 cv
389.509 173.241 li
389.509 190.673 li
.0196078 .0156863 0 .815686 cmyk
f
gsave
368.509 204.855 mo
391.241 204.855 li
391.241 171.759 li
368.509 171.759 li
368.509 204.855 li
clp
390.991 192.039 mo
390.745 191.815 390.498 191.589 390.25 191.36 cv
390.25 173.25 li
390.5 172.95 li
390.36 172.81 li
390.25 172.5 li
373.423 172.5 li
373.252 172.253 373.083 172.007 372.914 171.759 cv
390.773 171.759 li
391.002 172.404 li
391.024 172.426 li
391.241 172.643 li
391.241 173.218 li
390.991 173.518 li
390.991 192.039 li
.0196078 .0156863 0 .964706 cmyk
f
390.25 191.36 mo
390.004 191.134 389.756 190.904 389.509 190.673 cv
389.509 173.241 li
373.943 173.241 li
373.769 172.995 373.595 172.747 373.423 172.5 cv
390.25 172.5 li
390.36 172.81 li
390.5 172.95 li
390.25 173.25 li
390.25 191.36 li
.0117647 .00784314 0 .905882 cmyk
f
grestore
382.75 170.25 mo
382.75 170.25 li
382.749 170.249 li
382.75 170.25 li
382.75 170.25 li
382.75 170.25 mo
377.5 170.25 li
377.5 169.5 li
377.34 169.2 li
377.481 169.059 li
377.5 168.75 li
382.75 168.75 li
382.481 169.059 li
382.62 169.2 li
382.749 169.5 li
382.45 169.401 li
382.31 169.27 li
382 169.5 li
377.5 169.5 li
377.651 169.27 li
377.51 169.401 li
377.5 169.5 li
377.5 170.25 li
382 170.25 li
382.31 170.06 li
382.45 169.93 li
382.581 170.07 li
382.481 170.17 li
382.75 170.25 li
377.5 170.25 mo
377.34 170.03 li
377.481 170.17 li
377.5 170.25 li
377.5 170.25 mo
377.5 170.25 li
377.51 169.93 li
377.651 170.06 li
377.5 170.25 li
.0196078 .0156863 0 .964706 cmyk
f
382.75 170.25 mo
382.75 170.25 li
382.75 169.5 li
382.749 169.5 li
382.75 169.5 li
382.75 170.25 li
382.749 170.249 mo
382.581 170.07 li
382.62 170.03 li
382.749 170.249 li
.0196078 .0156863 0 .666667 cmyk
f
382.75 170.25 mo
382.749 170.249 li
382.62 170.03 li
382.581 170.07 li
382.45 169.93 li
382.31 170.06 li
382 170.25 li
377.5 170.25 li
377.651 170.06 li
377.51 169.93 li
377.5 170.25 li
377.5 169.5 li
382 169.5 li
382.31 169.27 li
382.45 169.401 li
382.749 169.5 li
382.75 169.5 li
382.75 170.25 li
377.5 169.5 mo
377.51 169.401 li
377.651 169.27 li
377.5 169.5 li
.0117647 .00784314 0 .682353 cmyk
f
gsave
369.25 165.75 mo
369.15 165.77 li
369.031 165.83 368.92 165.89 368.5 165.75 cv
368.82 165.95 li
368.72 166.019 368.62 166.089 368.5 166.5 cv
368.54 166.17 li
368.45 166.241 368.37 166.321 368.5 166.5 cv
368.3 166.41 li
368.23 166.49 368.17 166.57 367.75 166.5 cv
368.11 166.66 li
368.059 166.735 368.016 166.811 367.856 167.075 cv
367.951 166.92 li
367.861 167.099 367.79 167.28 367.75 167.25 cv
367.74 167.44 li
367.69 167.61 367.66 167.76 367.75 168 cv
367.75 209.25 li
367.59 209.21 li
367.59 209.389 367.6 209.559 367.75 210 cv
367.719 210.14 li
367.76 210.28 367.799 210.4 367.75 210.75 cv
367.861 210.52 li
367.91 210.639 367.98 210.75 367.75 210.75 cv
368.05 210.84 li
368.11 210.94 368.19 211.03 368.5 210.75 cv
368.26 211.12 li
368.339 211.2 368.429 211.28 368.5 211.5 cv
368.509 211.34 li
368.599 211.41 368.69 211.481 368.5 211.5 cv
368.78 211.53 li
368.87 211.59 368.96 211.639 369.25 211.5 cv
369.049 211.68 li
369.23 211.77 369.41 211.84 369.25 212.25 cv
369.581 211.889 li
369.75 211.941 369.91 211.97 370 212.25 cv
370.049 211.99 li
370.32 212.03 370.51 212.03 370.75 212.25 cv
389.5 212.25 li
389.45 212.03 li
389.45 212.03 389.64 212.03 390.25 212.25 cv
389.91 211.99 li
390.05 211.97 390.21 211.941 390.25 212.25 cv
390.379 211.889 li
390.55 211.84 390.73 211.77 391 211.5 cv
390.91 211.68 li
391 211.5 li
391.18 211.53 li
391.27 211.481 391.361 211.41 391.75 211.5 cv
391.451 211.34 li
391.531 211.28 391.62 211.2 391.75 210.75 cv
391.691 211.12 li
391.769 211.03 391.849 210.94 391.75 210.75 cv
391.91 210.84 li
391.981 210.75 392.04 210.639 391.75 210.75 cv
392.099 210.52 li
392.16 210.4 392.2 210.28 392.5 210 cv
392.24 210.14 li
392.28 210.009 392.32 209.87 392.5 210 cv
392.34 209.71 li
392.36 209.559 392.37 209.389 392.5 209.25 cv
392.5 193.5 li
392.37 193.28 li
384.31 186.111 375 176.401 369.25 165.75 cv
369.269 165.73 li
369.25 165.75 li
367.75 167.25 mo
367.856 167.075 li
367.75 167.25 li
367.75 168 mo
367.639 167.889 li
367.59 168.16 367.59 168.33 367.75 168 cv
367.75 210 mo
367.62 209.71 li
367.639 209.87 367.68 210.009 367.75 210 cv
clp
gsave
366.84 212.78 mo
393.118 212.78 li
393.118 164.977 li
366.84 164.977 li
366.84 212.78 li
eclp
gsave
366.84 212.78 mo
393.119 212.78 li
393.119 164.977 li
366.84 164.977 li
366.84 212.78 li
clp
390.25 212.25 mo
390.25 212.25 li
389.726 212.061 389.512 212.034 389.462 212.031 cv
389.54 212.029 389.987 212.013 390.516 211.843 cv
390.468 211.862 390.423 211.876 390.379 211.889 cv
390.25 212.25 li
390.25 212.25 mo
390.25 212.25 li
390.25 212.25 li
390.024 211.979 mo
389.986 211.979 389.947 211.985 389.91 211.99 cv
390.25 212.25 li
390.221 212.024 390.127 211.979 390.024 211.979 cv
389.5 212.25 mo
370.75 212.25 li
370.75 212.25 370.75 212.25 370.75 212.25 cv
389.5 212.25 li
389.45 212.031 li
389.45 212.031 389.45 212.031 389.45 212.031 cv
389.5 212.25 li
370 212.25 mo
369.958 212.12 369.901 212.044 369.835 211.994 cv
369.905 212.015 369.973 212.033 370.038 212.05 cv
370 212.25 li
369.25 212.25 mo
369.364 211.959 369.306 211.839 369.198 211.762 cv
369.321 211.818 369.444 211.866 369.564 211.908 cv
369.25 212.25 li
368.769 211.529 mo
368.5 211.5 li
368.661 211.484 368.62 211.431 368.549 211.372 cv
368.621 211.428 368.694 211.481 368.769 211.529 cv
391.75 211.5 mo
391.614 211.469 391.515 211.457 391.439 211.457 cv
391.384 211.457 391.342 211.463 391.307 211.473 cv
391.364 211.435 391.42 211.396 391.476 211.353 cv
391.75 211.5 li
368.5 211.5 mo
368.429 211.28 368.339 211.2 368.26 211.12 cv
368.266 211.111 li
368.347 211.199 368.433 211.278 368.523 211.351 cv
368.518 211.347 368.514 211.344 368.509 211.34 cv
368.5 211.5 li
368.046 210.839 mo
367.75 210.75 li
367.98 210.75 367.91 210.639 367.861 210.52 cv
367.75 210.75 li
367.788 210.481 367.773 210.348 367.746 210.237 cv
367.823 210.465 367.925 210.664 368.046 210.839 cv
392.331 210.17 mo
392.342 210.139 392.352 210.107 392.362 210.074 cv
392.5 210 li
392.431 210.064 392.376 210.12 392.331 210.17 cv
392.5 210 mo
392.459 209.97 392.425 209.955 392.397 209.95 cv
392.405 209.919 392.413 209.887 392.42 209.855 cv
392.5 210 li
367.649 209.869 mo
367.637 209.822 367.627 209.768 367.62 209.71 cv
367.625 209.72 li
367.632 209.771 367.64 209.82 367.649 209.869 cv
392.5 209.25 mo
392.5 209.25 392.5 209.25 392.5 209.25 cv
392.5 193.5 li
392.5 193.5 li
392.5 209.25 li
392.5 209.25 392.5 209.25 392.5 209.25 cv
367.629 168.182 mo
367.597 168.182 367.609 168.054 367.639 167.889 cv
367.697 167.947 li
367.701 167.998 367.712 168.027 367.725 168.027 cv
367.733 168.027 367.741 168.018 367.75 168 cv
367.75 168 li
367.687 168.129 367.649 168.182 367.629 168.182 cv
367.698 167.802 mo
367.68 167.666 367.705 167.558 367.74 167.44 cv
367.75 167.25 li
367.75 167.25 li
367.753 167.252 367.756 167.253 367.759 167.253 cv
367.801 167.253 367.868 167.086 367.951 166.92 cv
367.856 167.075 li
367.907 166.991 367.946 166.926 367.977 166.874 cv
367.789 167.235 367.714 167.584 367.698 167.802 cv
368.104 166.657 mo
367.75 166.5 li
367.863 166.519 367.95 166.527 368.019 166.527 cv
368.135 166.527 368.196 166.504 368.238 166.472 cv
368.19 166.533 368.145 166.595 368.104 166.657 cv
368.818 165.949 mo
368.5 165.75 li
368.69 165.813 368.817 165.836 368.91 165.836 cv
368.984 165.836 369.037 165.821 369.083 165.802 cv
368.988 165.847 368.901 165.896 368.818 165.949 cv
369.132 165.779 mo
369.138 165.776 369.144 165.773 369.15 165.77 cv
369.154 165.769 li
369.147 165.772 369.139 165.776 369.132 165.779 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[27.662 0 0 -49.1688 366.84 139.023 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&h>m$W_>s6@r"6dGn.F7Pli?Me_>s';p]/J;rXn`GaT2/;rXn`G_>sQIo-3H"f`;!`o-2$O
rXo/Ss"jC*_>sQIs!%+lg]6L;rXo/SoeXGbrXo/SoeZOH`W5uMs!%+lc2dM;rXo/Sr\O=;_>sQIs!%Fu
pdFQNe,]I[s!%FupdDt!rt,;E+sR"BpdDt!rXo/Sr\O=;i;hj;rXo/Sr\ORBqGkB4rXo/Sr\ORBqc*Vr
_>sQIs!%Fus$Z]`dfAk;rXo/Sr\ORBqGkB4rXo/Sr\ORBqGm.fcN*qVs!%Fus$ZidrFX"KrW)p0s!%Fu
s$ZidrFWnHrXo/Sr\ORBr`/o/joF3;rXo/Sr\ORBr`/o/_>sQIs!%Fu!^oFVs&K)2s*)<[rXo/Sr\ORB
r`/u1s*&t~>

%%EndBinary
grestore
np
389.5 212.25 mo
370.75 212.25 li
370.51 212.03 370.32 212.03 370.049 211.99 cv
370.038 212.05 li
369.973 212.033 369.905 212.015 369.835 211.994 cv
369.759 211.938 369.671 211.917 369.581 211.889 cv
369.564 211.908 li
369.444 211.866 369.321 211.818 369.198 211.762 cv
369.154 211.73 369.101 211.706 369.049 211.68 cv
369.25 211.5 li
369.112 211.566 369.019 211.59 368.95 211.59 cv
368.874 211.59 368.827 211.561 368.78 211.53 cv
368.769 211.529 li
368.694 211.481 368.621 211.428 368.549 211.372 cv
368.541 211.365 368.532 211.358 368.523 211.351 cv
368.433 211.278 368.347 211.199 368.266 211.111 cv
368.5 210.75 li
368.345 210.89 368.248 210.937 368.181 210.937 cv
368.115 210.937 368.08 210.89 368.05 210.84 cv
368.046 210.839 li
367.925 210.664 367.823 210.465 367.746 210.237 cv
367.738 210.204 367.728 210.172 367.719 210.14 cv
367.75 210 li
367.748 210 367.746 210 367.744 210 cv
367.702 210 367.671 209.947 367.649 209.869 cv
367.64 209.82 367.632 209.771 367.625 209.72 cv
367.75 210 li
367.6 209.559 367.59 209.389 367.59 209.21 cv
367.75 209.25 li
367.75 168 li
367.75 168 367.75 168 367.75 168 cv
367.75 168 li
367.741 168.018 367.733 168.027 367.725 168.027 cv
367.712 168.027 367.701 167.998 367.697 167.947 cv
367.75 168 li
367.722 167.927 367.706 167.862 367.698 167.802 cv
367.714 167.584 367.789 167.235 367.977 166.874 cv
368.044 166.763 368.075 166.711 368.11 166.66 cv
368.104 166.657 li
368.145 166.595 368.19 166.533 368.238 166.472 cv
368.263 166.453 368.281 166.432 368.3 166.41 cv
368.5 166.5 li
368.37 166.321 368.45 166.241 368.54 166.17 cv
368.5 166.5 li
368.62 166.089 368.72 166.019 368.82 165.95 cv
368.818 165.949 li
368.901 165.896 368.988 165.847 369.083 165.802 cv
369.1 165.795 369.116 165.787 369.132 165.779 cv
369.139 165.776 369.147 165.772 369.154 165.769 cv
369.25 165.75 li
369.373 165.978 369.497 166.204 369.623 166.43 cv
368.339 167.142 368.342 168.752 368.489 168.752 cv
368.493 168.752 368.496 168.751 368.5 168.75 cv
368.5 208.5 li
368.3 208.701 li
368.3 211.441 371.05 211.441 370.75 211.5 cv
388.75 211.5 li
388.91 211.441 li
388.91 211.441 391.66 211.441 391.75 208.5 cv
391.75 192.725 li
391.957 192.912 392.164 193.097 392.37 193.28 cv
392.5 193.5 li
392.5 209.25 li
392.5 209.25 392.5 209.25 392.5 209.25 cv
392.37 209.389 392.36 209.559 392.34 209.71 cv
392.42 209.855 li
392.413 209.887 392.405 209.919 392.397 209.95 cv
392.39 209.949 392.384 209.948 392.378 209.948 cv
392.297 209.948 392.269 210.046 392.24 210.14 cv
392.362 210.074 li
392.352 210.107 392.342 210.139 392.331 210.17 cv
392.18 210.335 392.146 210.428 392.099 210.52 cv
391.75 210.75 li
391.837 210.717 391.892 210.704 391.925 210.704 cv
392.004 210.704 391.96 210.777 391.91 210.84 cv
391.75 210.75 li
391.849 210.94 391.769 211.03 391.691 211.12 cv
391.75 210.75 li
391.62 211.2 391.531 211.28 391.451 211.34 cv
391.476 211.353 li
391.42 211.396 391.364 211.435 391.307 211.473 cv
391.252 211.487 391.216 211.51 391.18 211.53 cv
391 211.5 li
390.91 211.68 li
391 211.5 li
390.8 211.7 390.65 211.79 390.516 211.843 cv
389.987 212.013 389.54 212.029 389.462 212.031 cv
389.454 212.03 389.45 212.03 389.45 212.03 cv
389.45 212.031 li
389.45 212.031 389.45 212.031 389.45 212.031 cv
389.5 212.25 li
391.75 210.75 mo
391.75 210.75 li
391.75 210.75 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[27.662 0 0 -49.1688 366.84 139.023 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 36 
/M[20 0 0 -36 0 36 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
`;o:TdK&n>m=3(Tm=4^-dfAcb`;fmfmXN1Um=43ti;ik,n;,$`rdXTsr.r;lrdXEnf)Y7>rdXEn`;ome
n;-i>c2dinreU0-aT28>rdXp'o8pokrdXp'o8r5;g]7>'reU0-`;omereUT9s-`VL`;omereUT9opOS8
l2^g5reUT9opNc!rdXp's,coAr;aq>rdXp's,coAc2dV>rdXp's,d5Jpn>Y,rdXp's,d5Jpn@-Vf)Yf"
reUT9rgEPT`;omes+g`4OHBI0pn>Y,rdXp's,d5Jpn?XHjT,:0reUT9rgEe[qPqL7rdXp's,d5Js.T=i
!34!<rdXp's,d5Js.T:hdfAt>rdXp's,d5Js.T:h`;omereUT9rgEe[qPs/fdK'8rreUT9rgEe[ri5q&
`;omereUT9rgEe[ri5q&`;omereUT9rgEe[ri5q&joF<>rdXp's,d5Js.TFlrNaBBrdXp's,d5J!hl<f
s/Q+)s1?5MrdXp's,d5Js.TFls0D[:J,~>

%%EndBinary
grestore
np
388.75 211.5 mo
370.75 211.5 li
371.05 211.441 368.3 211.441 368.3 208.701 cv
368.5 208.5 li
368.5 168.75 li
368.496 168.751 368.493 168.752 368.489 168.752 cv
368.342 168.752 368.339 167.142 369.623 166.43 cv
370.628 168.237 371.733 170.017 372.914 171.759 cv
369.25 171.759 li
369.034 172.327 li
368.89 172.472 li
368.853 172.525 li
368.509 173.016 li
368.509 204.854 li
369.187 204.757 li
369.376 204.817 li
369.423 204.741 li
389.509 204.741 li
389.509 204.835 li
389.979 204.779 li
390.055 204.855 li
390.665 204.855 li
390.886 204.633 li
391.026 204.492 li
390.786 204 li
390.991 204 li
390.991 192.039 li
391.245 192.27 391.498 192.499 391.75 192.725 cv
391.75 208.5 li
391.66 211.441 388.91 211.441 388.91 211.441 cv
388.75 211.5 li
380.5 210.75 mo
380.5 210.75 li
381.006 210.605 381.509 210.281 381.886 209.84 cv
382.32 209.47 382.63 208.98 382.75 208.5 cv
382.75 208.5 li
382.713 208.27 382.658 208.051 382.587 207.846 cv
382.623 207.808 382.675 207.775 382.75 207.75 cv
382.525 207.68 li
382.109 206.647 381.267 206.001 380.27 206.001 cv
380.5 206.251 li
380.347 206.224 380.2 206.212 380.058 206.212 cv
378.842 206.212 378.04 207.129 378.04 208.23 cv
378.04 208.231 li
378.04 208.752 378.22 209.231 378.537 209.633 cv
378.589 209.701 378.646 209.766 378.708 209.828 cv
379.141 210.276 379.762 210.604 380.5 210.75 cv
380.46 210.7 mo
380.269 210.46 li
380.269 210.46 380.27 210.46 380.27 210.46 cv
380.46 210.7 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[26.2789 0 0 -47.803 366.84 139.023 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 35 
/M[19 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mL&@emJu\CmL&@eoDnagmdBKMmK`.[mdBKMq?QZumJu\CmL&@emJu\C!"/`5nHnUgmK!7SnaHGanHnUg
o)S[grpK=FrX/0%mK`.[rpK=FrX/0%q$6TumK!7SnaHGanHnUgmK!7SnaHJb!"/6&qZl`tmK!7SrpTLK
rX/0%qZl`tnc8UgrpKdSo^MhenHo'toEO^`rpKdSo^MhenHo'trW`*$mK!7SrpTLKrX/Q0p'CO#oEO^`
rpKdSs7#aPrX/Q0p'CO#oEO^`rpKdSs7#aPrX/Q0p'CO#oEOgcrW)rcrpTmVp@8+hr!E'&qZl`tmK!7S
rpTmVp@8+hr!E'&qZm'(p]g-drpKdSs7#aPrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX&W3r<`H/o*>0t
q$$0drpKdSs7$$Xq=FRmr!E?.o*>0tq$$6frrE&drpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpfgU
rX/Q0rWr*#r!)s#mK!7SrpTmVrpfgUrX/Q0rWr*#r!)s#mK!7SrpTmVrpg$[qt0jprsAZ2rWr*#r!)s#
mK!7SrpTmVrpg$[qt0jpr!E?.o*>0tq$$3e!!*#drpTmVrpg$[qt0jpr!E?.o*>0tq$$0drpKdSs7$$X
s7?-[rX/Q0rWr*#r!!-)q??9erpKdSs7$$Xs7?-[rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^
rq66trX&T2rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!33*qZm$'r!!'&mK!7SrpTmV
rpg$[rq-3_rX/Q0rWrE,rW`6)r!*'&rWMWhrpKdSs7$$Xs7?6^rq66tr!E?.r!*9-"pOl/r!*0)rWW9(
mK!7SrpTmVrpg$[rq$9bp%J@lr!E?.r!*9-"pOl/r!*'&rWMWhrpKdSs7$$Xs7?6^!ql6[J,~>

%%EndBinary
grestore
np
380.5 210.75 mo
380.5 210.75 li
380.5 210.75 380.5 210.75 380.5 210.75 cv
380.5 210.75 li
380.5 210.75 li
380.46 210.7 li
380.27 210.46 li
380.891 210.46 381.451 210.21 381.886 209.84 cv
381.509 210.281 381.006 210.605 380.5 210.75 cv
378.708 209.828 mo
378.646 209.766 378.589 209.701 378.537 209.633 cv
378.59 209.7 378.647 209.765 378.708 209.828 cv
379.061 208.782 mo
378.623 208.534 378.318 208.162 378.25 207.75 cv
378.12 207.65 li
378.07 207.839 378.04 208.03 378.25 208.5 cv
378.04 208.23 li
378.04 208.231 378.04 208.231 378.04 208.231 cv
378.04 208.23 li
378.04 207.129 378.842 206.212 380.058 206.212 cv
380.2 206.212 380.347 206.224 380.5 206.251 cv
380.5 206.251 li
380.5 206.251 li
380.27 206.001 li
381.267 206.001 382.109 206.647 382.525 207.68 cv
382.43 207.65 li
382.335 207.952 382.161 208.225 381.939 208.458 cv
381.939 207.462 li
381.737 207.261 li
381.736 207.26 li
381.416 206.941 li
381.25 207.107 li
381.25 207.06 li
380.201 207.06 li
380.061 206.74 li
379.308 206.74 li
378.791 207.301 li
378.791 207.941 li
379.061 208.12 li
379.061 208.782 li
380.44 208.545 mo
380.44 208.439 li
380.546 208.439 li
380.44 208.545 li
382.75 208.5 mo
382.51 208.23 li
382.51 208.086 382.494 207.946 382.587 207.846 cv
382.658 208.051 382.713 208.27 382.75 208.5 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -8.1948 376.522 99.4145 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.5 210.75 mo
379.762 210.604 379.141 210.276 378.708 209.828 cv
379.086 210.204 379.648 210.459 380.27 210.459 cv
380.27 210.46 li
380.27 210.46 380.269 210.46 380.269 210.46 cv
380.46 210.7 li
380.5 210.75 li
381.886 209.84 mo
382.261 209.4 382.51 208.844 382.51 208.23 cv
382.75 208.501 li
382.75 208.501 li
382.75 208.5 382.75 208.5 382.75 208.5 cv
382.75 208.5 li
382.63 208.98 382.32 209.47 381.886 209.84 cv
378.537 209.633 mo
378.22 209.231 378.04 208.752 378.04 208.231 cv
378.25 208.501 li
378.163 208.895 378.282 209.297 378.537 209.633 cv
382.587 207.846 mo
382.568 207.79 382.547 207.734 382.525 207.68 cv
382.75 207.75 li
382.675 207.775 382.623 207.808 382.587 207.846 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -6.829 376.522 98.0487 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!Wi~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_nu~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.5 210.75 mo
380.5 210.75 380.5 210.75 380.5 210.75 cv
380.46 210.7 li
380.5 210.75 li
380.27 210.46 mo
380.27 210.459 li
379.648 210.459 379.086 210.204 378.708 209.828 cv
378.647 209.765 378.59 209.7 378.537 209.633 cv
378.282 209.297 378.163 208.895 378.25 208.501 cv
378.04 208.231 li
378.04 208.231 378.04 208.231 378.04 208.23 cv
378.25 208.5 li
378.04 208.03 378.07 207.839 378.12 207.65 cv
378.25 207.75 li
378.318 208.162 378.623 208.534 379.061 208.782 cv
379.061 209.25 li
379.09 209.25 li
378.974 209.357 li
379.062 209.453 li
379.373 209.939 li
381.25 209.939 li
381.389 209.49 li
381.417 209.518 li
381.558 209.377 li
381.528 209.347 li
381.939 209.25 li
381.939 208.458 li
382.161 208.225 382.335 207.952 382.43 207.65 cv
382.525 207.68 li
382.547 207.734 382.568 207.79 382.587 207.846 cv
382.494 207.946 382.51 208.086 382.51 208.23 cv
382.75 208.5 li
382.75 208.5 382.75 208.5 382.75 208.501 cv
382.51 208.23 li
382.51 208.844 382.261 209.4 381.886 209.84 cv
381.451 210.21 380.891 210.46 380.27 210.46 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[8.2986 0 0 -6.829 376.522 98.0487 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l7~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
380.5 209.25 mo
380.269 209.089 li
379.82 209.089 379.401 208.973 379.061 208.782 cv
379.061 208.12 li
378.791 207.941 li
378.791 207.301 li
379.308 206.74 li
380.061 206.74 li
380.201 207.06 li
381.25 207.06 li
381.25 207.107 li
381.416 206.941 li
381.736 207.26 li
381.737 207.261 li
381.939 207.462 li
381.939 208.458 li
381.55 208.864 381.015 209.148 380.5 209.25 cv
380.44 208.439 mo
380.44 208.545 li
380.546 208.439 li
380.44 208.439 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.5324 0 0 -4.0974 377.905 98.0487 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!<E3%!<E3%!<E3%~>
<~!<E3%!<E3%!<E3%~>
<~!!!!!!!!!!!!!!!~>
<~91qoN91qoN91qoN~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381.25 209.939 mo
379.373 209.939 li
379.062 209.453 li
378.974 209.357 li
379.09 209.25 li
379.061 209.25 li
379.061 208.782 li
379.401 208.973 379.82 209.089 380.269 209.089 cv
380.5 209.25 li
381.015 209.148 381.55 208.864 381.939 208.458 cv
381.939 209.25 li
381.528 209.347 li
381.558 209.377 li
381.417 209.518 li
381.389 209.49 li
381.25 209.939 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[5.5324 0 0 -4.0974 377.905 96.6829 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
<~4?P_g4?P_g4?P_g~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
389.509 203.259 mo
369.991 203.259 li
369.991 173.483 li
370.03 173.428 li
370.217 173.241 li
373.943 173.241 li
378.564 179.742 384.179 185.694 389.509 190.673 cv
389.509 203.259 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[22.1296 0 0 -32.7792 368.223 132.194 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 24 
/M[16 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1
"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1"9\i1"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-
"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-"U,&5"U"r2"9\i1!s8W-
~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-
"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W-"9\i1"9S`.!s8W-!s8W,
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~d*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldpd*U7je'ldpe'ldpe'ldp
d*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'd*U7je(3+$f%/F'f%/F'
d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G'3g"G'3
d*U7je(3+'g"G'3g"G'3d*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oC
d*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;h;-oCd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPO
d*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPOd*U7je(3+'g"G3;i8EPR
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
390.665 204.855 mo
390.055 204.855 li
389.979 204.779 li
389.509 204.835 li
389.509 204.741 li
369.423 204.741 li
369.376 204.817 li
369.187 204.757 li
368.509 204.854 li
368.509 173.016 li
368.853 172.525 li
368.89 172.472 li
369.034 172.327 li
369.25 171.759 li
372.914 171.759 li
373.083 172.007 373.252 172.253 373.423 172.5 cv
369.25 172.5 li
369.6 172.81 li
369.46 172.95 li
369.25 173.25 li
369.25 204 li
369.6 204.111 li
369.49 204 li
390.25 204 li
390.36 204.111 li
390.5 203.97 li
390.25 204 li
390.25 191.36 li
390.498 191.589 390.745 191.815 390.991 192.039 cv
390.991 204 li
390.786 204 li
391.026 204.492 li
390.886 204.633 li
390.665 204.855 li
369.565 204.703 mo
369.565 204.703 li
369.542 204.545 mo
369.565 204.703 li
369.542 204.545 li
369.49 204 mo
369.25 204 li
369.46 203.97 li
369.49 204 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[24.8958 0 0 -35.5108 366.84 133.56 ]ct
snap_to_device
<<
/T 1
/W 18 
/H 26 
/M[18 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\l3
"U,&5"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1
"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"U,&5
"U,#3"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1"9\i1"U,&5"U,#3"9\i1"9\i1"9\l3"U,&5"9\i1"9\i1
"9\i1"U,&5"U,#3"9\i1"9\i1"9\l3"U,&5"9\i1"9\i0!s8W-"U,&5"U,#3"9\i1"9S`.!s8]1"U,&5
"9\i1"9\i0!s8W-"U,&5"U,#3"9\i1"9S`.!s8]1"U,&5"9\i1"9\i0!s8W-"U,&5"U,#3"9\i1"9S`.
!s8]1"U,&5"9\i1"9\i0!s8W-~>
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8Z/
"9\i1!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-
!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-"9\i1
"9\f/!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-
!s8W-"9\i1"9\f/!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8Z/"9\i1
!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-!s8Z/"9\i1!s8W-!s8W-!s8W-"9\i1"9\f/!s8W-!s8W-
!WiK-"9\i1!s8W-!s8W-!s8T+~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~p@e4Sp\4FVp\4FVp\4FVp\4CTp@n=Up\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4CTp@n=Up\4FV
p\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4CTp@n=Up\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4CT
p@n=Up\4FVp\4FVp\4FVp@e4Sp\4FVp\4FVp\4FVp\4CTp@n=Up\4IXq"XXZq"XXZp@e4Sp\4FVq"XXZ
q"XXZq"XRVp@n=Up\4IXq"XXZq"XXZp@e4Sp\4FVq"XXZq"XXZq"XRVp@n=Up\4IXq"XXZq"XXZp@e4S
p\4FVq"XXZq"XXZq"XRVp@n=Up\4IXq"XXZq"XXZp@e4Sp\4FVq"XXZq"XXZq"XRVp@n=Up\4IXq"XXZ
q"XXZp@e4Sp\4FVq"XXZq"XXZq"XRVp@n=Up\4IXq"XX[q>'j^p@e4Sp\4FVq"XXZq"aa]q>'aXp@n=U
p\4IXq"XX[q>'j^p@e4Sp\4FVq"XXZq"aa]q>'aXp@n=Up\4IXq"XX[q>'j^p@e4Sp\4FVq"XXZq"aa]
qYKpZp@n=Up\4IXq"XX[q>'m`~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
390.36 204.111 mo
390.25 204 li
390.5 203.97 li
390.36 204.111 li
369.6 204.111 mo
369.25 204 li
369.49 204 li
369.6 204.111 li
390.25 204 mo
390.25 204 li
369.49 204 li
369.46 203.97 li
369.25 204 li
369.25 173.25 li
369.46 172.95 li
369.6 172.81 li
369.25 172.5 li
373.423 172.5 li
373.595 172.747 373.769 172.995 373.943 173.241 cv
370.217 173.241 li
370.03 173.428 li
369.991 173.483 li
369.991 203.259 li
389.509 203.259 li
389.509 190.673 li
389.756 190.904 390.004 191.134 390.25 191.36 cv
390.25 204 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 304 ]ct
[23.5127 0 0 -34.145 368.223 132.194 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 25 
/M[17 0 0 -25 0 25 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*!s8W-
!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)!WiE*
!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*!WiE)
!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!WrN,!s8W-!WiE)!WiE)!WiH+!s8W-!s/N*
!WiE)!WiE*!s8W-!s8T+!WiE)!WiE)!s8W-!s8W,!WiE)!WiE)!W~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3&
!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)!<E3%
!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<N<(!WiE)!WiE(!<E3%!<E6'!WiE)!WiE)
!<E3%!<E3&!WiE)!WiE)!W`<&!<E3%!WiE)!WiE)!WiB'!<E3%!<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~kND*ol07Hsl07Hsl07Hsl0%6ol07Hsl07Hsl07Hsl07Bol07Hsl07Hsl07Hsl07HqkNV6ql07Hsl07Hs
l07HskND*ol07Hsl07Hsl07Hsl0%6ol07KulK[["lK[["lK[Qql07HtlK[["lK[["lK[ZtkNV6qlK[["
lK[["lK[["kND*ol0@R!lK[["lK[["lK@?pl07Kum-O**m-O**m-Noul07HtlKmm(m-O**m-O*%kNV6q
lK[a&m-O**m-O**kND*ol0@R#m-O**m-O**m-!Qrl07Kum-O**m-O**m-Noul07HtlKmm(mHs<.mHs<(
kNV6qlK[a&m-X3-mHs<.kND*ol0@R#m-O-,mHs<.mH<Zsl07Kum-O*+mHs<.mHs*"l07HtlKmm(mHs<.
mHs<(kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`6n)rlul07Kum-O*+mI0N4n*fH&l07HtlKmm(
mHsB2n*f`.kNV6qlK[a&m-X3/n*f`6kND*ol0@R#m-O-,n*f`8nG~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
grestore
gsave
0 304 mo
439 304 li
439 0 li
0 0 li
0 304 li
clp
370 204 mo
390.25 204 li
390.25 173.25 li
370 173.25 li
cp
.0788281 .0779736 .0698253 0 cmyk
ef
166.1 109.63 mo
160.74 113.67 160.58 120.34 165.74 124.53 cv
167.6 126.04 169.99 127.08 172.6 127.52 cv
172.38 134.63 179.57 140.53 188.66 140.71 cv
191.93 140.77 195.14 140.07 197.9 138.7 cv
201.84 145.21 211.77 147.98 220.09 144.91 cv
223.08 143.8 225.58 142.03 227.269 139.81 cv
236.39 144.55 248.69 142.61 254.75 135.49 cv
256.92 132.93 258.08 129.92 258.059 126.84 cv
266.3 125.38 271.46 118.97 269.59 112.52 cv
268.92 110.21 267.38 108.1 265.17 106.47 cv
269 102.24 267.73 96.3899 262.33 93.3899 cv
260.38 92.3099 258.07 91.7099 255.69 91.6599 cv
252.42 83.1699 240.97 78.3599 230.11 80.9199 cv
226.21 81.8299 222.75 83.6399 220.17 86.0999 cv
214.28 78.6999 201.84 76.4399 192.38 81.0399 cv
188.98 82.6899 186.29 85.0999 184.64 87.9499 cv
174.26 87.1399 164.99 93.0699 163.96 101.19 cv
163.58 104.1 164.33 107.04 166.1 109.63 cv
1 /3 /CSD get_res sepcs
0 sep
ef
1 lw
2 ml
166.1 109.63 mo
160.74 113.67 160.58 120.34 165.74 124.53 cv
167.6 126.04 169.99 127.08 172.6 127.52 cv
172.38 134.63 179.57 140.53 188.66 140.71 cv
191.93 140.77 195.14 140.07 197.9 138.7 cv
201.84 145.21 211.77 147.98 220.09 144.91 cv
223.08 143.8 225.58 142.03 227.269 139.81 cv
236.39 144.55 248.69 142.61 254.75 135.49 cv
256.92 132.93 258.08 129.92 258.059 126.84 cv
266.3 125.38 271.46 118.97 269.59 112.52 cv
268.92 110.21 267.38 108.1 265.17 106.47 cv
269 102.24 267.73 96.3899 262.33 93.3899 cv
260.38 92.3099 258.07 91.7099 255.69 91.6599 cv
252.42 83.1699 240.97 78.3599 230.11 80.9199 cv
226.21 81.8299 222.75 83.6399 220.17 86.0999 cv
214.28 78.6999 201.84 76.4399 192.38 81.0399 cv
188.98 82.6899 186.29 85.0999 184.64 87.9499 cv
174.26 87.1399 164.99 93.0699 163.96 101.19 cv
163.58 104.1 164.33 107.04 166.1 109.63 cv
cp
1 /3 /CSD get_res sepcs
.502 sep
@
grestore
1 /3 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+CALIBRI,Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 73 /I put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/I <1C60D8A8C9B87DE005AD6F3C5D74814B2BFE06F81F462471EDB11E0EC39F
39EA> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold /PBAAAA+CALIBRI,Bold findfont ct_VMDictPut
/JLMWZQ+CALIBRI,Bold*1 
[73{/.notdef}rp /I 182{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
183.41 116.61 mo
(I)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED1
9B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30
A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43
C2B5E88E6AFB64C1CBC51F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 80 /P put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[73{/.notdef}rp /I 6{/.notdef}rp /P 175{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
187.148 116.61 mo
(P)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 6{/.notdef}rp /P 175{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
194.596 116.61 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD8
33E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487
A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151
121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 4{/.notdef}rp /N /.notdef /P 
175{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
197.76 116.61 mo
(N)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AED
C4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C049
2C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E
8106797186054DABC39E6B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 4{/.notdef}rp /N /.notdef /P 
20{/.notdef}rp /e 154{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
206.986 116.61 mo
(e)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87
D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E64020888
37AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3
D16C57> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 4{/.notdef}rp /N /.notdef /P 
20{/.notdef}rp /e 14{/.notdef}rp /t 139{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
214.028 116.61 mo
(t)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80
846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE
481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2B
AF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB
99E3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 4{/.notdef}rp /N /.notdef /P 
20{/.notdef}rp /e 14{/.notdef}rp /t 2{/.notdef}rp /w 136{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
218.885 116.61 mo
(w)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4
E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81
C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 4{/.notdef}rp /N /.notdef /P 
20{/.notdef}rp /e 9{/.notdef}rp /o 4{/.notdef}rp /t 2{/.notdef}rp /w 
136{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
229.315 116.61 mo
(o)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB
1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0
AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 4{/.notdef}rp /N /.notdef /P 
20{/.notdef}rp /e 9{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t 
2{/.notdef}rp /w 136{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
236.847 116.61 mo
(r)sh
%ADOBeginSubsetFont: PBAAAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZQ+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1
E2F6A013F2F56A027205F5576546> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZQ+CALIBRI,Bold /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/JLMWZQ+CALIBRI,Bold*1 
[32{/.notdef}rp /space 40{/.notdef}rp /I 4{/.notdef}rp /N /.notdef /P 
20{/.notdef}rp /e 5{/.notdef}rp /k 3{/.notdef}rp /o 2{/.notdef}rp /r 
/.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]
JLMWZQ+CALIBRI,Bold nf
JLMWZQ+CALIBRI,Bold*1 [13.9997 0 0 -13.9997 0 0 ]msf
241.817 116.61 mo
(k)sh
.75 lw
2 ml
356.5 108 mo
286.75 108 li
@
288.25 111 mo
277.75 108 li
288.25 104.25 li
cp
ef
145.75 93.75 mo
84.25 93.75 li
@
145 90 mo
154.75 93.75 li
145 96.75 li
cp
ef
85.75 96.75 mo
75.25 93.75 li
85.75 90 li
cp
ef
397.91 30.1401 mo
407.38 35.1601 413.97 52.3001 413.97 71.8901 cv
413.97 88.1901 407.4 102.45 397.96 106.67 cv
@
397.75 33.75 mo
392.5 28.5 li
399.25 27 li
cp
ef
399.25 109.5 mo
392.5 108 li
397.75 103.5 li
cp
ef
397.92 110.74 mo
407.38 115.6 413.97 132.16 413.97 151.09 cv
413.97 167.389 407.4 181.65 397.96 185.87 cv
@
397.75 114 mo
392.5 109.5 li
399.25 108 li
cp
ef
399.25 189 mo
392.5 186.75 li
397.75 182.25 li
cp
ef
348.25 47.25 mo
285.25 81.75 li
@
346 45 mo
356.5 42.75 li
349 51 li
cp
ef
287.5 84.75 mo
277 86.25 li
284.5 78.75 li
cp
ef
84.25 122.25 mo
154.75 122.25 li
@
85.75 125.25 mo
75.25 122.25 li
85.75 119.25 li
cp
ef
%ADOBeginSubsetFont: HIBBAA+CALIBRI Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+CALIBRI def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 79 /O put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/O <1C60D8A8C9B624F9257693AA05F54B3F6F5707D5ED56A2F403B01AB2B44B
FA61536ECB93C3E443D431CDA75F7C80E1651DDF58D3BF4622794EC6262BD68B
AD06E68E1E6A6884DEBA5A70BE002DB0A3D53BEB04D3F8C5368D696AC6C0C562
F74CC4E6C46ADC> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/JLMWZR+CALIBRI /HIBBAA+CALIBRI findfont ct_VMDictPut
/JLMWZR+CALIBRI*1 
[79{/.notdef}rp /O 176{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
90.2798 137.49 mo
(O)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875
E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A366
46DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0
318D13C761F9DF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[79{/.notdef}rp /O 30{/.notdef}rp /n 145{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
98.2239 137.49 mo
(n)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AED
C4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C049
2C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E
8106797186054DABC39E6B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[79{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
104.524 137.49 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8391507657B8D1429650EAD682B1E1FA8FF445B393CF
432> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 21{/.notdef}rp /e 8{/.notdef}rp /n 
145{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
110.5 137.49 mo
(-)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B683825E2D044740A889FBE934ECCE78E1156C56B6149D738C
A6C7B4AECC7FA154428E6DD464F11C7D97D1FA9A6F6B9A75D5C94F0DB87ED3BD
E4384A0C5BEF384B64AB6AB82F0CAD9F523DB7B169A9EFE68886BAAEBDCCF81A
77828FB78CC41F51C2F02BE854F0FC98D5C093F2F1B7BFBBE0B76D7E8A41F57E
61D5D8AA27543AC483B2961CB710> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 13{/.notdef}rp /e 
8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
114.172 137.49 mo
(W)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A26
1528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4
E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF
06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D
7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D8839
3EC5B1BCAE7CEACDFA7D9A043D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 9{/.notdef}rp /a 
3{/.notdef}rp /e 8{/.notdef}rp /n 145{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
124.852 137.49 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD
89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65D
BD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58A
EC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC
68163F56BACA6337> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[45{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 9{/.notdef}rp /a 
3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
130.6 137.49 mo
(y)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 33{/.notdef}rp /O 7{/.notdef}rp /W 
9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 10{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
136.037 137.49 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B6D9EA19A14B847D0E8EB8BF4B471CD6F46D062EB4BE987671
1DE846CB52CA29717591BA788944E909A85262E823C4FA12BA37712263FC72E9
89A6DED74E14903D34D6198FBDC555D5CFE2C4496EBCDE1C8C3752795BF188E4
FAAED3EDACC0501E6038041D4A8B4E60EE57E2BABA6257E8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 
10{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
83.1757 151.89 mo
(M)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4
E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81
C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n 
/o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
93.4358 151.89 mo
(o)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6
E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94
C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5
809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C
58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F8
8F3E7B91EC8C23BC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 8{/.notdef}rp 
/n /o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
99.7599 151.89 mo
(b)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5
A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E
21C6C79BBDA40B7772F2DEC85ADAD3476B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp 
/i 4{/.notdef}rp /n /o 9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
106.06 151.89 mo
(i)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O 
7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /.notdef /n /o 9{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
108.808 151.89 mo
(l)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
111.556 151.89 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
117.532 151.89 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B64FADC8BE4593403BE5D574FAA91D24903C73A9847FBCFF2C
CAE7B82F347344B6D75D9DA8CFD564A5192C31CC0F81E85BFE65DA0E98609881
F08E27947C3AA06FD0D02C1BFBD8926D8C270B5E2950C4A34E562381A9DCE503
FFFA3F4060AB2DBCCA9D5531B6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 68 /D put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 22{/.notdef}rp /D 8{/.notdef}rp /M 
/.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
9{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
120.244 151.89 mo
(D)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
127.624 151.89 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87
D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E64020888
37AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3
D16C57> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 22{/.notdef}rp /D 8{/.notdef}rp /M 
/.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
133.373 151.89 mo
(t)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
137.393 151.89 mo
(a)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
143.141 151.89 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF
0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12
CD842E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 40 /parenleft put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 4{/.notdef}rp /hyphen 22{/.notdef}rp /D 
8{/.notdef}rp /M /.notdef /O 7{/.notdef}rp /W 9{/.notdef}rp /a 
/b 2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef 
/n /o 4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
98.8719 166.291 mo
(\()sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/U <1C60D8A8C9B67A40D81BFBD664698F172962E5E1FA1185B63F3290B3666C
22108B29923B1DC2E04A6BB03297D059A20638E9439889AA598516C5989124B6
5198F3D60A7398> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 85 /U put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 4{/.notdef}rp /hyphen 22{/.notdef}rp /D 
8{/.notdef}rp /M /.notdef /O 5{/.notdef}rp /U /.notdef /W 
9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /.notdef /n /o 4{/.notdef}rp /t 4{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
102.508 166.291 mo
(U)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
110.212 166.291 mo
(D)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED1
9B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30
A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43
C2B5E88E6AFB64C1CBC51F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 80 /P put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 4{/.notdef}rp /hyphen 22{/.notdef}rp /D 
8{/.notdef}rp /M /.notdef /O /P 4{/.notdef}rp /U /.notdef 
/W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t 4{/.notdef}rp 
/y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
117.592 166.291 mo
(P)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF
91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE58
8EC87D3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 22{/.notdef}rp 
/D 8{/.notdef}rp /M /.notdef /O /P 4{/.notdef}rp /U 
/.notdef /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t 
4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
123.784 166.291 mo
(\))sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C0603B0F56
B2079EC8B4534AB9C74A497574D9EF71E8F51BC97EB8824D6E23EF8EFAA3DEBE
8D568C2956BA1E496299B0678E1779132A604465EA4ECC38726918FAF069884E
38826C83426FA3C94ADFC9002199C86D8D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 8{/.notdef}rp /M /.notdef /O /P 4{/.notdef}rp 
/U /.notdef /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp 
/t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
75.9636 86.2853 mo
(C)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
82.3597 86.2853 mo
(o)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
88.6838 86.2853 mo
(n)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
94.9839 86.2853 mo
(t)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB
1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0
AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 8{/.notdef}rp /M /.notdef /O /P 4{/.notdef}rp 
/U /.notdef /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
99.0039 86.2853 mo
(r)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
103.192 86.2853 mo
(o)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
109.516 86.2853 mo
(l)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
112.264 86.2853 mo
( )sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
114.976 86.2853 mo
(M)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
125.236 86.2853 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5
A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F
24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0
AEBA9DE73147EEE82D829B87C7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 8{/.notdef}rp /M /.notdef /O /P 4{/.notdef}rp 
/U /.notdef /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
131.212 86.2853 mo
(s)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
135.905 86.2853 mo
(s)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
140.597 86.2853 mo
(a)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F43B727FC67DAAB0A1AC3463640
03E4FEF79FBAC399EF60BAB44182D20FA0C6402BF1E27F05398DCDDDA14D79F5
733F11E560A813FF9D16C42617DFDA23021803BAB86086244EE74B29A5E1F99E
79BC6C6C8880FE4C572C55E990D88B7521BD46854B97930948AAC94E7DFE2FF6
9F2221950186414A7427A5E80E1B04B219E3300404246D87351FD05C6F3EA0B9
5C636083B47E4D5C2DAA8BBB8D343439CEC8A6CCD7C3BA57C2332F2A02343DC5
6BF6AA691E1A081F9D254D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 8{/.notdef}rp /M /.notdef /O /P 4{/.notdef}rp 
/U /.notdef /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
146.345 86.2853 mo
(g)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
151.997 86.2853 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
157.973 86.2853 mo
(s)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
255.403 52.9008 mo
(C)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
261.799 52.9008 mo
(o)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
268.123 52.9008 mo
(n)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
274.423 52.9008 mo
(t)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
278.443 52.9008 mo
(r)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
282.631 52.9008 mo
(o)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
288.955 52.9008 mo
(l)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
291.703 52.9008 mo
( )sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
294.415 52.9008 mo
(M)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
304.675 52.9008 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
310.651 52.9008 mo
(s)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
315.344 52.9008 mo
(s)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
320.036 52.9008 mo
(a)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
325.784 52.9008 mo
(g)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
331.436 52.9008 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
337.412 52.9008 mo
(s)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 65.2607 mo
(C)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 71.6568 mo
(o)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 77.9809 mo
(n)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 84.281 mo
(t)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 88.3011 mo
(r)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 92.4892 mo
(o)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 98.8133 mo
(l)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 101.561 mo
( )sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 104.273 mo
(M)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 114.534 mo
(e)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 120.51 mo
(s)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 125.202 mo
(s)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 129.894 mo
(a)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 135.642 mo
(g)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 141.294 mo
(e)sh
JLMWZR+CALIBRI*1 [0 12.0002 12.0002 0 0 0 ]msf
427.57 147.27 mo
(s)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
295.34 117.71 mo
(O)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
303.284 117.71 mo
(n)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
309.584 117.71 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
315.56 117.71 mo
(-)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
319.232 117.71 mo
(W)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
329.912 117.71 mo
(a)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
335.66 117.71 mo
(y)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
341.097 117.71 mo
( )sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
288.236 132.11 mo
(M)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
298.496 132.11 mo
(o)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
304.82 132.11 mo
(b)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
311.12 132.11 mo
(i)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
313.868 132.11 mo
(l)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
316.616 132.11 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
322.592 132.11 mo
( )sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
325.304 132.11 mo
(D)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
332.684 132.11 mo
(a)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
338.433 132.11 mo
(t)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
342.453 132.11 mo
(a)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
348.201 132.11 mo
( )sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
303.932 146.51 mo
(\()sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
307.568 146.51 mo
(U)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
315.272 146.51 mo
(D)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
322.652 146.51 mo
(P)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
328.856 146.51 mo
(\))sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
1.99495 161.895 mo
(D)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
9.37507 161.895 mo
(a)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
15.1232 161.895 mo
(t)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
19.1432 161.895 mo
(a)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
24.8913 161.895 mo
( )sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
27.6034 161.895 mo
(C)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
33.9995 161.895 mo
(o)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
40.3236 161.895 mo
(l)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
43.0716 161.895 mo
(l)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
45.8317 161.895 mo
(e)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A
114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624
097F1B5D47BF4F384727F53BA1763156DBDB0266> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 8{/.notdef}rp /M /.notdef /O /P 4{/.notdef}rp 
/U /.notdef /W 9{/.notdef}rp /a /b /c /.notdef 
/e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef 
/n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
51.8078 161.895 mo
(c)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
56.8839 161.895 mo
(t)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
60.9039 161.895 mo
(i)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
63.652 161.895 mo
(o)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
69.9761 161.895 mo
(n)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
76.2762 161.895 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC9666D445523C20D6BC6D
45C854A0BE693CA04DDB35CE9C6FCC12699F3ECF3D1B67F9F5777A6EECDAF3C0
F3F32C0B6BC38F752623DB2A9617BDB514ED25F1A310A0C42BE659A27D8F2C06
C4BFA42A6084F73A353D30020A89B386DABBAAA17119B17F011D1BF8067CBFE1
7C2D6AE10C51C95BF00F09A50ED067AF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 83 /S put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 8{/.notdef}rp /M /.notdef /O /P 2{/.notdef}rp 
/S /.notdef /U /.notdef /W 9{/.notdef}rp /a /b 
/c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
4{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
23.5113 176.295 mo
(S)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
29.0314 176.295 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
35.0075 176.295 mo
(r)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78
CD729866CE567C88B5C4105F11006EA75E6774682E91A2E1F257423C8BD0B940
F1B9F1BCB8B413DFC78AF75D4027> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 8{/.notdef}rp /M /.notdef /O /P 2{/.notdef}rp 
/S /.notdef /U /.notdef /W 9{/.notdef}rp /a /b 
/c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
39.1956 176.295 mo
(v)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
44.6197 176.295 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
50.5958 176.295 mo
(r)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
342.801 229.504 mo
(M)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
353.061 229.504 mo
(o)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
359.385 229.504 mo
(b)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
365.685 229.504 mo
(i)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
368.433 229.504 mo
(l)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
371.181 229.504 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
377.157 229.504 mo
( )sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
379.869 229.504 mo
(D)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
387.249 229.504 mo
(e)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
393.225 229.504 mo
(v)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
398.65 229.504 mo
(i)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
401.398 229.504 mo
(c)sh
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
406.474 229.504 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZR+CALIBRI*1 [12.0002 0 0 -12.0002 0 0 ]msf
412.45 229.504 mo
(s)sh
144.25 262.5 mo
280.75 262.5 li
280.75 234 li
144.25 234 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
.24 lw
144.25 262.5 mo
280.75 262.5 li
280.75 234 li
144.25 234 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B87DE005AD6F3C5D74814B2BFE06F81F462471EDB11E0EC39F
39EA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 4{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O 
/P 2{/.notdef}rp /S /.notdef /U /.notdef /W 9{/.notdef}rp 
/a /b /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
206.99 252.524 mo
(I)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
210.518 252.524 mo
(P)sh
144.25 226.5 mo
208.75 226.5 li
208.75 198 li
144.25 198 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
144.25 226.5 mo
208.75 226.5 li
208.75 198 li
144.25 198 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB5
3E56E1831B0550D2FE4055F5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 4{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O 
/P 2{/.notdef}rp /S /T /U /.notdef /W 9{/.notdef}rp 
/a /b /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
165.61 216.5 mo
(T)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
172.428 216.5 mo
(C)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
179.89 216.5 mo
(P)sh
144.25 298.5 mo
280.75 298.5 li
280.75 270 li
144.25 270 li
cp
1 /3 /CSD get_res sepcs
.051 sep
ef
144.25 298.5 mo
280.75 298.5 li
280.75 270 li
144.25 270 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B74383E5F6C6CDF9C5C9B986319F48E0C8F60D9DD3B951CB8A
90C91D93DE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 76 /L put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 4{/.notdef}rp /I 2{/.notdef}rp /L /M /.notdef 
/O /P 2{/.notdef}rp /S /T /U /.notdef /W 
9{/.notdef}rp /a /b /c /.notdef /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
183.99 288.504 mo
(L)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
189.87 288.504 mo
(i)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
193.09 288.504 mo
(n)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JLMWZR+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1
E2F6A013F2F56A027205F5576546> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JLMWZR+CALIBRI /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/JLMWZR+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /D 4{/.notdef}rp /I 2{/.notdef}rp /L /M /.notdef 
/O /P 2{/.notdef}rp /S /T /U /.notdef /W 
9{/.notdef}rp /a /b /c /.notdef /e /.notdef /g 
/.notdef /i /.notdef /k /l /.notdef /n /o 
2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp /y 
134{/.notdef}rp]
JLMWZR+CALIBRI nf
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
200.44 288.504 mo
(k)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
206.81 288.504 mo
( )sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
209.974 288.504 mo
(L)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
215.853 288.504 mo
(a)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
222.559 288.504 mo
(y)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
228.901 288.504 mo
(e)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
235.873 288.504 mo
(r)sh
216.25 226.5 mo
280.75 226.5 li
280.75 198 li
216.25 198 li
cp
.00881971 0 .157382 0 cmyk
ef
216.25 226.5 mo
280.75 226.5 li
280.75 198 li
216.25 198 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
235.96 216.5 mo
(U)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
244.948 216.5 mo
(D)sh
1 /3 /CSD get_res sepcs
1 sep
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
253.558 216.5 mo
(P)sh
216.25 190.5 mo
280.75 190.5 li
280.75 162 li
216.25 162 li
cp
.00881971 0 .157382 0 cmyk
ef
216.25 190.5 mo
280.75 190.5 li
280.75 162 li
216.25 162 li
cp
1 /3 /CSD get_res sepcs
1 sep
@
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
221.68 180.49 mo
(O)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
230.948 180.49 mo
(n)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
238.297 180.49 mo
(e)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
245.269 180.49 mo
(-)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
249.553 180.49 mo
(W)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
262.013 180.49 mo
(a)sh
JLMWZR+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
268.719 180.49 mo
(y)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 /3 /4 /5 ]]
[/Pattern [/108983948.0 /108984144.0 ]]
[/Gradient [/0 ]]
] del_res
/JLMWZQ+CALIBRI,Bold*1 uf
/JLMWZQ+CALIBRI,Bold uf
/PBAAAA+CALIBRI,Bold uf
/JLMWZR+CALIBRI*1 uf
/JLMWZR+CALIBRI uf
/HIBBAA+CALIBRI uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
